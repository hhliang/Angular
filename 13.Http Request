
<!DOCTYPE html>
<html>
  <head>
    <title>no title</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
    .markdown-preview{width:100%;height:100%;box-sizing:border-box}.markdown-preview .pagebreak,.markdown-preview .newpage{page-break-before:always}.markdown-preview pre.line-numbers{position:relative;padding-left:3.8em;counter-reset:linenumber}.markdown-preview pre.line-numbers>code{position:relative}.markdown-preview pre.line-numbers .line-numbers-rows{position:absolute;pointer-events:none;top:1em;font-size:100%;left:0;width:3em;letter-spacing:-1px;border-right:1px solid #999;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.markdown-preview pre.line-numbers .line-numbers-rows>span{pointer-events:none;display:block;counter-increment:linenumber}.markdown-preview pre.line-numbers .line-numbers-rows>span:before{content:counter(linenumber);color:#999;display:block;padding-right:.8em;text-align:right}.markdown-preview .mathjax-exps .MathJax_Display{text-align:center !important}.markdown-preview:not([for="preview"]) .code-chunk .btn-group{display:none}.markdown-preview:not([for="preview"]) .code-chunk .status{display:none}.markdown-preview:not([for="preview"]) .code-chunk .output-div{margin-bottom:16px}.scrollbar-style::-webkit-scrollbar{width:8px}.scrollbar-style::-webkit-scrollbar-track{border-radius:10px;background-color:transparent}.scrollbar-style::-webkit-scrollbar-thumb{border-radius:5px;background-color:rgba(150,150,150,0.66);border:4px solid rgba(150,150,150,0.66);background-clip:content-box}html body[for="html-export"]:not([data-presentation-mode]){position:relative;width:100%;height:100%;top:0;left:0;margin:0;padding:0;overflow:auto}html body[for="html-export"]:not([data-presentation-mode]) .markdown-preview{position:relative;top:0}@media screen and (min-width:914px){html body[for="html-export"]:not([data-presentation-mode]) .markdown-preview{padding:2em calc(50% - 457px + 2em)}}@media screen and (max-width:914px){html body[for="html-export"]:not([data-presentation-mode]) .markdown-preview{padding:2em}}@media screen and (max-width:450px){html body[for="html-export"]:not([data-presentation-mode]) .markdown-preview{font-size:14px !important;padding:1em}}@media print{html body[for="html-export"]:not([data-presentation-mode]) #sidebar-toc-btn{display:none}}html body[for="html-export"]:not([data-presentation-mode]) #sidebar-toc-btn{position:fixed;bottom:8px;left:8px;font-size:28px;cursor:pointer;color:inherit;z-index:99;width:32px;text-align:center;opacity:.4}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] #sidebar-toc-btn{opacity:1}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc{position:fixed;top:0;left:0;width:300px;height:100%;padding:32px 0 48px 0;font-size:14px;box-shadow:0 0 4px rgba(150,150,150,0.33);box-sizing:border-box;overflow:auto;background-color:inherit}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc::-webkit-scrollbar{width:8px}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc::-webkit-scrollbar-track{border-radius:10px;background-color:transparent}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc::-webkit-scrollbar-thumb{border-radius:5px;background-color:rgba(150,150,150,0.66);border:4px solid rgba(150,150,150,0.66);background-clip:content-box}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc a{text-decoration:none}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc ul{padding:0 1.6em;margin-top:.8em}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc li{margin-bottom:.8em}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc ul{list-style-type:none}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .markdown-preview{left:300px;width:calc(100% -  300px);padding:2em calc(50% - 457px -  150px);margin:0;box-sizing:border-box}@media screen and (max-width:1274px){html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .markdown-preview{padding:2em}}@media screen and (max-width:450px){html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .markdown-preview{width:100%}}html body[for="html-export"]:not([data-presentation-mode]):not([html-show-sidebar-toc]) .markdown-preview{left:50%;transform:translateX(-50%)}html body[for="html-export"]:not([data-presentation-mode]):not([html-show-sidebar-toc]) .md-sidebar-toc{display:none}/**
 * prism.js Github theme based on GitHub's theme.
 * @author Sam Clarke
 */
code[class*="language-"],
pre[class*="language-"] {
  color: #333;
  background: none;
  font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
  line-height: 1.4;

  -moz-tab-size: 8;
  -o-tab-size: 8;
  tab-size: 8;

  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
}

/* Code blocks */
pre[class*="language-"] {
  padding: .8em;
  overflow: auto;
  /* border: 1px solid #ddd; */
  border-radius: 3px;
  /* background: #fff; */
  background: #f5f5f5;
}

/* Inline code */
:not(pre) > code[class*="language-"] {
  padding: .1em;
  border-radius: .3em;
  white-space: normal;
  background: #f5f5f5;
}

.token.comment,
.token.blockquote {
  color: #969896;
}

.token.cdata {
  color: #183691;
}

.token.doctype,
.token.punctuation,
.token.variable,
.token.macro.property {
  color: #333;
}

.token.operator,
.token.important,
.token.keyword,
.token.rule,
.token.builtin {
  color: #a71d5d;
}

.token.string,
.token.url,
.token.regex,
.token.attr-value {
  color: #183691;
}

.token.property,
.token.number,
.token.boolean,
.token.entity,
.token.atrule,
.token.constant,
.token.symbol,
.token.command,
.token.code {
  color: #0086b3;
}

.token.tag,
.token.selector,
.token.prolog {
  color: #63a35c;
}

.token.function,
.token.namespace,
.token.pseudo-element,
.token.class,
.token.class-name,
.token.pseudo-class,
.token.id,
.token.url-reference .token.variable,
.token.attr-name {
  color: #795da3;
}

.token.entity {
  cursor: help;
}

.token.title,
.token.title .token.punctuation {
  font-weight: bold;
  color: #1d3e81;
}

.token.list {
  color: #ed6a43;
}

.token.inserted {
  background-color: #eaffea;
  color: #55a532;
}

.token.deleted {
  background-color: #ffecec;
  color: #bd2c00;
}

.token.bold {
  font-weight: bold;
}

.token.italic {
  font-style: italic;
}


/* JSON */
.language-json .token.property {
  color: #183691;
}

.language-markup .token.tag .token.punctuation {
  color: #333;
}

/* CSS */
code.language-css,
.language-css .token.function {
  color: #0086b3;
}

/* YAML */
.language-yaml .token.atrule {
  color: #63a35c;
}

code.language-yaml {
  color: #183691;
}

/* Ruby */
.language-ruby .token.function {
  color: #333;
}

/* Markdown */
.language-markdown .token.url {
  color: #795da3;
}

/* Makefile */
.language-makefile .token.symbol {
  color: #795da3;
}

.language-makefile .token.variable {
  color: #183691;
}

.language-makefile .token.builtin {
  color: #0086b3;
}

/* Bash */
.language-bash .token.keyword {
  color: #0086b3;
}

/* highlight */
pre[data-line] {
  position: relative;
  padding: 1em 0 1em 3em;
}
pre[data-line] .line-highlight-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  background-color: transparent;
  display: block;
  width: 100%;
}

pre[data-line] .line-highlight {
  position: absolute;
  left: 0;
  right: 0;
  padding: inherit 0;
  margin-top: 1em;
  background: hsla(24, 20%, 50%,.08);
  background: linear-gradient(to right, hsla(24, 20%, 50%,.1) 70%, hsla(24, 20%, 50%,0));
  pointer-events: none;
  line-height: inherit;
  white-space: pre;
}

pre[data-line] .line-highlight:before, 
pre[data-line] .line-highlight[data-end]:after {
  content: attr(data-start);
  position: absolute;
  top: .4em;
  left: .6em;
  min-width: 1em;
  padding: 0 .5em;
  background-color: hsla(24, 20%, 50%,.4);
  color: hsl(24, 20%, 95%);
  font: bold 65%/1.5 sans-serif;
  text-align: center;
  vertical-align: .3em;
  border-radius: 999px;
  text-shadow: none;
  box-shadow: 0 1px white;
}

pre[data-line] .line-highlight[data-end]:after {
  content: attr(data-end);
  top: auto;
  bottom: .4em;
}.emoji {
  height: 0.8em;
}html body{font-family:"Helvetica Neue",Helvetica,"Segoe UI",Arial,freesans,sans-serif;font-size:16px;line-height:1.6;color:#333;background-color:#fff;overflow:initial;box-sizing:border-box;word-wrap:break-word}html body>:first-child{margin-top:0}html body h1,html body h2,html body h3,html body h4,html body h5,html body h6{line-height:1.2;margin-top:1em;margin-bottom:16px;color:#000}html body h1{font-size:2.25em;font-weight:300;padding-bottom:.3em}html body h2{font-size:1.75em;font-weight:400;padding-bottom:.3em}html body h3{font-size:1.5em;font-weight:500}html body h4{font-size:1.25em;font-weight:600}html body h5{font-size:1.1em;font-weight:600}html body h6{font-size:1em;font-weight:600}html body h1,html body h2,html body h3,html body h4,html body h5{font-weight:600}html body h5{font-size:1em}html body h6{color:#5c5c5c}html body strong{color:#000}html body del{color:#5c5c5c}html body a:not([href]){color:inherit;text-decoration:none}html body a{color:#08c;text-decoration:none}html body a:hover{color:#00a3f5;text-decoration:none}html body img{max-width:100%}html body>p{margin-top:0;margin-bottom:16px;word-wrap:break-word}html body>ul,html body>ol{margin-bottom:16px}html body ul,html body ol{padding-left:2em}html body ul.no-list,html body ol.no-list{padding:0;list-style-type:none}html body ul ul,html body ul ol,html body ol ol,html body ol ul{margin-top:0;margin-bottom:0}html body li{margin-bottom:0}html body li.task-list-item{list-style:none}html body li>p{margin-top:0;margin-bottom:0}html body .task-list-item-checkbox{margin:0 .2em .25em -1.8em;vertical-align:middle}html body .task-list-item-checkbox:hover{cursor:pointer}html body blockquote{margin:16px 0;font-size:inherit;padding:0 15px;color:#5c5c5c;background-color:#f0f0f0;border-left:4px solid #d6d6d6}html body blockquote>:first-child{margin-top:0}html body blockquote>:last-child{margin-bottom:0}html body hr{height:4px;margin:32px 0;background-color:#d6d6d6;border:0 none}html body table{margin:10px 0 15px 0;border-collapse:collapse;border-spacing:0;display:block;width:100%;overflow:auto;word-break:normal;word-break:keep-all}html body table th{font-weight:bold;color:#000}html body table td,html body table th{border:1px solid #d6d6d6;padding:6px 13px}html body dl{padding:0}html body dl dt{padding:0;margin-top:16px;font-size:1em;font-style:italic;font-weight:bold}html body dl dd{padding:0 16px;margin-bottom:16px}html body code{font-family:Menlo,Monaco,Consolas,'Courier New',monospace;font-size:.85em !important;color:#000;background-color:#f0f0f0;border-radius:3px;padding:.2em 0}html body code::before,html body code::after{letter-spacing:-0.2em;content:"\00a0"}html body pre>code{padding:0;margin:0;font-size:.85em !important;word-break:normal;white-space:pre;background:transparent;border:0}html body .highlight{margin-bottom:16px}html body .highlight pre,html body pre{padding:1em;overflow:auto;font-size:.85em !important;line-height:1.45;border:#d6d6d6;border-radius:3px}html body .highlight pre{margin-bottom:0;word-break:normal}html body pre code,html body pre tt{display:inline;max-width:initial;padding:0;margin:0;overflow:initial;line-height:inherit;word-wrap:normal;background-color:transparent;border:0}html body pre code:before,html body pre tt:before,html body pre code:after,html body pre tt:after{content:normal}html body p,html body blockquote,html body ul,html body ol,html body dl,html body pre{margin-top:0;margin-bottom:16px}html body kbd{color:#000;border:1px solid #d6d6d6;border-bottom:2px solid #c7c7c7;padding:2px 4px;background-color:#f0f0f0;border-radius:3px}@media print{html body{background-color:#fff}html body h1,html body h2,html body h3,html body h4,html body h5,html body h6{color:#000;page-break-after:avoid}html body blockquote{color:#5c5c5c}html body pre{page-break-inside:avoid}html body table{display:table}html body img{display:block;max-width:100%;max-height:100%}html body pre,html body code{word-wrap:break-word;white-space:pre}}
    /* Please visit the URL below for more information: */
/*   https://shd101wyy.github.io/markdown-preview-enhanced/#/customize-css */

    </style>
    
  </head>
  <body for="html-export">
    <div class="mume markdown-preview">
    <html><head></head><body><div><h2 class="mume-header" id="http-request" ebook-toc-level-2 heading="Http Request">Http Request</h2>

<h5 class="mume-header" id="%E4%BD%BF%E7%94%A8%E7%A8%8B%E5%BC%8F%E7%A2%BC13-http-requestzip" ebook-toc-level-5 heading="&amp;#x4F7F;&amp;#x7528;&amp;#x7A0B;&amp;#x5F0F;&amp;#x78BC;&amp;#xFF1A;13. Http Request.zip">&#x4F7F;&#x7528;&#x7A0B;&#x5F0F;&#x78BC;&#xFF1A;13. Http Request.zip</h5>

<h3 class="mume-header" id="%E7%B0%A1%E4%BB%8B-http-request" ebook-toc-level-3 heading="&amp;#x7C21;&amp;#x4ECB; Http Request">&#x7C21;&#x4ECB; Http Request</h3>

<h4 class="mume-header" id="http-%E5%9F%BA%E6%9C%AC%E8%A7%80%E5%BF%B5" ebook-toc-level-4 heading="Http &amp;#x57FA;&amp;#x672C;&amp;#x89C0;&amp;#x5FF5;">Http &#x57FA;&#x672C;&#x89C0;&#x5FF5;</h4>

<p><img src="data:image/png;charset=utf-8;base64," alt="  "><br>
&#x5728;&#x4ECB;&#x7D39;&#x4E4B;&#x524D;&#xFF0C;&#x5148;&#x8907;&#x7FD2;&#x4E00;&#x4E0B; Http &#x57FA;&#x672C;&#x89C0;&#x5FF5;&#xFF0C;&#x9019;&#x5F35;&#x5716;&#x89E3;&#x91CB; Http Request &#x88E1;&#x9762;&#x6703;&#x5305;&#x542B;&#x7684;&#x5167;&#x5BB9;&#x3002;<br>
Http &#x662F;&#x7A2E;&#x901A;&#x8A0A;&#x5354;&#x5B9A;&#xFF0C;&#x524D;&#x7AEF;&#x5229;&#x7528;&#x6B64;&#x901A;&#x8A0A;&#x5354;&#x5B9A;&#x8207; API &#x7AEF;&#x9032;&#x884C;&#x8CC7;&#x6599;&#x7684;&#x4EA4;&#x63DB;&#xFF0C;&#x9019;&#x500B;&#x901A;&#x8A0A;&#x5354;&#x5B9A;&#x57FA;&#x672C;&#x4E0A;&#x6709;&#x5E7E;&#x500B;&#x5FC5;&#x9808;&#x5E36;&#x6709;&#x7684;&#x6771;&#x897F;&#x3002;</p>
<ol>
<li>Request &#x7684;&#x52D5;&#x4F5C; ( &#x53EF;&#x80FD;&#x662F; GET&#x3001;POST&#x3001;DELETE...)</li>
<li>URL &#x662F; API &#x7684;&#x4F4D;&#x5740;</li>
<li>Http Headers &#x662F;&#x8981;&#x89E3;&#x6790;&#x6B64; Http Headers &#x9700;&#x8981;&#x7684;&#x8CC7;&#x8A0A; ( &#x50CF; Content-Type &#x662F; json &#x5C31;&#x662F;&#x89E3;&#x6790; body &#x7528; json &#x683C;&#x5F0F;&#x4F86;&#x89E3;&#x6790; )</li>
<li>Body &#x5247;&#x662F;&#x767C;&#x9001; request &#x6642;&#x5167;&#x90E8;&#x6703;&#x5E36;&#x6709;&#x7684;&#x8CC7;&#x6599;&#x3002;</li>
</ol>
<h4 class="mume-header" id="angular-%E8%88%87-http-request" ebook-toc-level-4 heading="Angular &amp;#x8207; Http Request">Angular &#x8207; Http Request</h4>

<p><img src="data:image/png;charset=utf-8;base64," alt="  "></p>
<p>&#x8B93;&#x6211;&#x5011;&#x56DE;&#x61B6;&#x4E00;&#x4E0B;&#x4E4B;&#x524D;&#x63D0;&#x904E;&#x7684;&#xFF0C;Angular &#x662F;&#x5C6C;&#x65BC;&#x524D;&#x7AEF;&#x7684;&#x6846;&#x67B6;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8AAA;&#x6240;&#x6709;&#x7684;&#x6771;&#x897F;&#x90FD;&#x6703;&#x9001;&#x5230;&#x700F;&#x89BD;&#x5668;&#x4E5F;&#x5C31;&#x662F;&#x5BA2;&#x6236;&#x7AEF;&#xFF0C;&#x4E5F;&#x56E0;&#x6B64;&#x53D6;&#x5F97;&#x8CC7;&#x6599;&#x4E0D;&#x6703;&#x76F4;&#x63A5;&#x53BB;&#x9023; DB&#xFF0C;&#x9019;&#x6703;&#x6709;&#x5B89;&#x5168;&#x6027;&#x554F;&#x984C;&#xFF0C;&#x800C;&#x662F;&#x6709; API &#x4F9B; Angular &#x4F7F;&#x7528;&#xFF0C;&#x4E26;&#x7531;&#x9019;&#x500B; API &#x53D6;&#x5F97;&#x5F8C;&#x7AEF; DB &#x8CC7;&#x6599;&#x3002;</p>
<h3 class="mume-header" id="%E5%9F%BA%E7%A4%8E%E7%AF%87" ebook-toc-level-3 heading="&amp;#x57FA;&amp;#x790E;&amp;#x7BC7;">&#x57FA;&#x790E;&#x7BC7;</h3>

<p>&#x7531;&#x65BC;&#x662F; Angular &#x53E6;&#x5916;&#x63D0;&#x4F9B;&#x7684;&#x5957;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x4F7F;&#x7528;&#x6642;&#xFF0C;&#x5FC5;&#x9808;&#x5728; <code>@NgModule</code> &#x5167;&#x5F15;&#x5165; <code>HttpClientModule</code> &#x3002;</p>
<ul>
<li>XXXModule</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpClientModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/common/http&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> NgModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormsModule<span class="token punctuation">,</span> ReactiveFormsModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/forms&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> BrowserModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/platform-browser&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> AppComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./app.component&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  declarations<span class="token operator">:</span> <span class="token punctuation">[</span>
    AppComponent
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span>
    BrowserModule<span class="token punctuation">,</span>
    HttpClientModule<span class="token punctuation">,</span>
    FormsModule<span class="token punctuation">,</span>
    ReactiveFormsModule
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  providers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  bootstrap<span class="token operator">:</span> <span class="token punctuation">[</span>AppComponent<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">XXXModule</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
</pre><p>&#x5728;&#x4F7F;&#x7528;&#x6642;&#xFF0C;&#x5FC5;&#x9808;&#x5728; <code>Component</code>&#x6216; <code>Service</code> &#x7684; <code>constructor()</code> &#x6CE8;&#x5165;&#x3002;</p>
<ul>
<li>XXXComponent</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">XXXComponent</span> <span class="token keyword keyword-implements">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword keyword-private">private</span> http<span class="token operator">:</span> HttpClient<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</pre><h4 class="mume-header" id="%E7%99%BC%E9%80%81-post-%E8%AB%8B%E6%B1%82" ebook-toc-level-4 heading="&amp;#x767C;&amp;#x9001; POST &amp;#x8ACB;&amp;#x6C42;">&#x767C;&#x9001; POST &#x8ACB;&#x6C42;</h4>

<p>&#x672C;&#x7AE0;&#x6703;&#x4ECB;&#x7D39;&#x5169;&#x7A2E; Request Method&#xFF0C;&#x5148;&#x5F9E; POST &#x958B;&#x59CB;&#x3002;<br>
&#x5728;&#x4E0A;&#x9762; <strong>Http &#x57FA;&#x672C;&#x89C0;&#x5FF5;</strong> &#x63D0;&#x5230;&#x4E86;&#x767C;&#x9001;request&#x5FC5;&#x9808;&#x8981;&#x6709;&#x7684;&#x9805;&#x76EE;&#xFF0C; <code>URL</code>&#x3001;<code>Http Request Method</code>&#x3001;<code>Request Header</code>&#x3001;<code>Request Body</code>&#xFF0C;&#x5728;&#x767C;&#x9001; POST &#x6642;&#xFF0C;&#x9019;&#x5E7E;&#x500B;&#x9805;&#x76EE;&#x90FD;&#x5FC5;&#x9808;&#x8981;&#x5B58;&#x5728;&#xFF0C;&#x5176;&#x4E2D; <code>Request Body</code> &#x5C31;&#x662F;&#x6211;&#x5011;&#x653E;&#x53C3;&#x6578;&#x7684;&#x4F4D;&#x7F6E;&#x3002;</p>
<p>&#x6211;&#x5011;&#x5148;&#x8ABF;&#x6574;&#x7A0B;&#x5F0F;&#x78BC;&#xFF1A;</p>
<pre data-role="codeBlock" data-info class="language-"><code>|--app
    |--app.component.ts 
</code></pre><ul>
<li>app.component.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpClient <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/common/http&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> OnInit <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  selector<span class="token operator">:</span> <span class="token string">&apos;app-root&apos;</span><span class="token punctuation">,</span>
  templateUrl<span class="token operator">:</span> <span class="token string">&apos;./app.component.html&apos;</span><span class="token punctuation">,</span>
  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&apos;./app.component.css&apos;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">AppComponent</span> <span class="token keyword keyword-implements">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">{</span>

  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword keyword-void">void</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span><span class="token function">dataGovSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword keyword-private">private</span> http<span class="token operator">:</span> HttpClient<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

  <span class="token function">dataGovSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token string">&apos;https://data.gov.tw/api/front/statistics/export&apos;</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-const">const</span> postData <span class="token operator">=</span> <span class="token punctuation">{</span> format<span class="token operator">:</span> <span class="token string">&apos;json&apos;</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">&apos;category&apos;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http
      <span class="token punctuation">.</span><span class="token generic-function"><span class="token function">post</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
        url<span class="token punctuation">,</span>
        postData
      <span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>
        responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</pre><p>&#x5728; Component &#x6CE8;&#x5165; <code>HttpClient</code>&#xFF0C;&#x4E26;&#x4F7F;&#x7528; <code>HttpClient</code> &#x4F86;&#x767C;&#x9001; POST &#x7B49;&#x8ACB;&#x6C42;&#x3002;&#x5728;&#x7BC4;&#x4F8B;&#x4E2D;&#xFF0C;&#x9019;&#x500B; POST method &#x4E2D;&#x5E36;&#x6709;&#x5169;&#x500B;&#x53C3;&#x6578;&#x3002;</p>
<ol>
<li>&#x767C;&#x9001;&#x8ACB;&#x6C42;&#x7684; URL</li>
<li>&#x9001;&#x5230;&#x5F8C;&#x7AEF;&#x7684; Json &#x8CC7;&#x6599;&#xFF0C;&#x7576;&#x767C;&#x9001;&#x8ACB;&#x6C42;&#x5F8C;&#xFF0C;&#x5F8C;&#x7AEF;&#x6703;&#x62FF;&#x5230;&#x9001;&#x904E;&#x4F86;&#x7684;&#x8CC7;&#x6599;</li>
</ol>
<p>&#x5728;&#x767C;&#x9001; POST &#x8ACB;&#x6C42;&#x5F8C;&#x6703;&#x62FF;&#x5230; Observable &#x7269;&#x4EF6;&#xFF0C;&#x5FC5;&#x9808;&#x5C0D;&#x5B83;&#x9032;&#x884C; <code>subscribe(..)</code> &#x4F86;&#x9032;&#x884C;&#x64CD;&#x4F5C;&#xFF0C;&#x9019;&#x908A;&#x5148;&#x628A;&#x8CC7;&#x6599;&#x5370;&#x51FA;&#x4F86;&#x5373;&#x53EF;&#xFF0C;&#x4F46;&#x56E0;&#x70BA;&#x7BC4;&#x4F8B;&#x662F;&#x5C07;&#x767C;&#x9001; API &#x5305;&#x88DD;&#x6210;&#x4E00;&#x500B;&#x65B9;&#x6CD5;&#xFF0C;&#x56E0;&#x70BA;&#x76EE;&#x524D;&#x9084;&#x6C92;&#x6709;&#x4EFB;&#x4F55;&#x7684; HTML &#x756B;&#x9762;&#xFF0C;&#x6240;&#x4EE5;&#x5FC5;&#x9808;&#x5728; <code>ngOnInit</code> &#x547C;&#x53EB;&#x8A72;&#x65B9;&#x6CD5;&#x3002;&#xFF08;&#x76EE;&#x524D;&#x9084;&#x7121;&#x6CD5;&#x62FF;&#x5230; POST &#x8ACB;&#x6C42;&#x8CC7;&#x6599;&#x6210;&#x529F;&#x800C;&#x5F97;&#x5230;&#x7684;&#x56DE;&#x61C9;&#xFF0C;&#x6703;&#x5728;&#x5F8C;&#x9762;&#x8AAA;&#x660E;&#x539F;&#x56E0;&#xFF09;</p>
<h4 class="mume-header" id="%E7%99%BC%E9%80%81-get-%E8%AB%8B%E6%B1%82" ebook-toc-level-4 heading="&amp;#x767C;&amp;#x9001; GET &amp;#x8ACB;&amp;#x6C42;">&#x767C;&#x9001; GET &#x8ACB;&#x6C42;</h4>

<p>&#x53E6;&#x4E00;&#x7A2E;&#x5E38;&#x7528;&#x7684; Request Method &#x662F; GET &#xFF0C;&#x8ABF;&#x6574;&#x7A0B;&#x5F0F;&#x78BC;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre data-role="codeBlock" data-info class="language-"><code>|--app
    |--app.component.ts 
</code></pre><ul>
<li>app.component.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpClient <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/common/http&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> OnInit <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  selector<span class="token operator">:</span> <span class="token string">&apos;app-root&apos;</span><span class="token punctuation">,</span>
  templateUrl<span class="token operator">:</span> <span class="token string">&apos;./app.component.html&apos;</span><span class="token punctuation">,</span>
  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&apos;./app.component.css&apos;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">AppComponent</span> <span class="token keyword keyword-implements">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">{</span>

  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword keyword-void">void</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span><span class="token function">dataGovSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span><span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword keyword-private">private</span> http<span class="token operator">:</span> HttpClient<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

  <span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token string">&apos;https://data.tycg.gov.tw/api/v1/rest/format&apos;</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>


  <span class="token function">dataGovSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token string">&apos;https://data.gov.tw/api/front/statistics/export&apos;</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-const">const</span> postData <span class="token operator">=</span> <span class="token punctuation">{</span> format<span class="token operator">:</span> <span class="token string">&apos;json&apos;</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">&apos;category&apos;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http
      <span class="token punctuation">.</span><span class="token generic-function"><span class="token function">post</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
        url<span class="token punctuation">,</span>
        postData
      <span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>
        responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</pre><p>&#x5728;&#x7BC4;&#x4F8B;&#x4E2D;&#xFF0C;&#x65B0;&#x589E;&#x4E86; <code>getFormatList()</code> &#xFF0C;&#x9019;&#x500B; GET method &#x4E2D;&#x53EA;&#x6709;&#x4E00;&#x500B;&#x53C3;&#x6578;&#x3002;</p>
<ol>
<li>&#x767C;&#x9001;&#x8ACB;&#x6C42;&#x7684; URL</li>
</ol>
<p>&#x540C;&#x6A23;&#x7684;&#x5728;&#x767C;&#x9001; GET &#x8ACB;&#x6C42;&#x5F8C;&#x6703;&#x62FF;&#x5230; Observable &#x7269;&#x4EF6;&#xFF0C;&#x5FC5;&#x9808;&#x5C0D;&#x5B83;&#x9032;&#x884C; <code>subscribe(..)</code> &#x4F86;&#x9032;&#x884C;&#x64CD;&#x4F5C;&#x3002;&#xFF08;&#x76EE;&#x524D;&#x9084;&#x7121;&#x6CD5;&#x62FF;&#x5230; GET &#x8ACB;&#x6C42;&#x8CC7;&#x6599;&#x6210;&#x529F;&#x800C;&#x5F97;&#x5230;&#x7684;&#x56DE;&#x61C9;&#xFF0C;&#x6703;&#x5728;&#x5F8C;&#x9762;&#x8AAA;&#x660E;&#x539F;&#x56E0;&#xFF09;</p>
<h4 class="mume-header" id="observable" ebook-toc-level-4 heading="Observable">Observable</h4>

<p>&#x96D6;&#x7136;&#x5728;&#x525B;&#x525B;&#x5169;&#x500B;&#x6BB5;&#x843D;&#xFF0C;&#x5DF2;&#x7D93;&#x4F7F;&#x7528;&#x4E86; <code>post()</code> &#x53CA; <code>get()</code> &#xFF0C;&#x4F46;&#x4E00;&#x76F4;&#x6C92;&#x6709;&#x5BE6;&#x969B;&#x5370;&#x51FA;&#x56DE;&#x50B3;&#x8CC7;&#x6599;&#xFF0C;&#x6253;&#x958B; F12 &#x4E5F;&#x53EA;&#x6709;&#x770B;&#x5230;&#x7D05;&#x8272;&#x7684;&#x932F;&#x8AA4;&#x8CC7;&#x8A0A;&#xFF0C;&#x6211;&#x5011;&#x7121;&#x6CD5;&#x5F97;&#x77E5;&#x9019;&#x500B;&#x65B9;&#x6CD5;&#x5230;&#x5E95;&#x6709;&#x6C92;&#x6709;&#x6B63;&#x78BA;&#x57F7;&#x884C;&#x3002;</p>
<p><img src="data:image/png;charset=utf-8;base64," alt="  "></p>
<p>&#x5728;&#x4E0A;&#x9762; <strong>Http &#x57FA;&#x672C;&#x89C0;&#x5FF5;</strong> &#x88E1;&#x9762;&#x6709;&#x4E00;&#x500B; <code>Http status code</code> &#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x77E5;&#x9053; <strong>4XX</strong> &#x6216; <strong>5XX</strong> &#x90FD;&#x662F;&#x932F;&#x8AA4;&#x56DE;&#x61C9; &#xFF0C; &#x9019;&#x500B;&#x662F;&#x6211;&#x5011;&#x5728;&#x5411;&#x5F8C;&#x7AEF;&#x8ACB;&#x6C42;&#x8CC7;&#x6599;&#x6642;&#x5C31;&#x5DF2;&#x7D93;&#x5931;&#x6557;&#x7684;&#x610F;&#x601D;&#x3002;<br>
&#x5C0D;&#x65BC;&#x9019;&#x6A23;&#x7684;&#x932F;&#x8AA4;&#xFF0C;&#x6211;&#x5011;&#x4E5F;&#x53EF;&#x4EE5;&#x5728;&#x7A0B;&#x5F0F;&#x78BC;&#x505A;&#x8655;&#x7406;&#x3002;</p>
<p>&#x524D;&#x9762;&#x7684;&#x4ECB;&#x7D39;&#x88E1;&#x4E00;&#x76F4;&#x63D0;&#x5230; <code>subscribe(..)</code> &#xFF0C;&#x4F46;&#x6C92;&#x6709;&#x8A73;&#x7D30;&#x7684;&#x8AAA;&#x660E;&#x70BA;&#x4EC0;&#x9EBC;&#x8981;&#x505A;&#x8A02;&#x95B1;&#xFF0C;&#x9019;&#x5FC5;&#x9808;&#x56DE;&#x5230;&#x524D;&#x9762;&#x63D0;&#x5230;&#xFF0C;&#x767C;&#x9001;&#x8ACB;&#x6C42;&#x5F8C;&#x6703;&#x62FF;&#x5230; Observable &#x7269;&#x4EF6;&#x3002;<br>
&#x5728;&#x8A2D;&#x8A08;&#x6A21;&#x5F0F;&#x4E2D;&#x6709;&#x4E00;&#x500B;&#x53EB;&#x505A; <strong>Observer Pattern (&#x89C0;&#x5BDF;&#x8005;&#x6A21;&#x5F0F;)</strong> &#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x56DE;&#x60F3;&#x4E00;&#x4E0B;&#xFF0C;&#x5728;&#x4EE5;&#x524D;&#x5BEB; JavaScript &#x6642;&#xFF0C;&#x6211;&#x5011;&#x6703;&#x5229;&#x7528; <code>addEventListener</code> &#x4F86;&#x76E3;&#x807D; click &#x4E8B;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x4EBA;&#x9EDE;&#x64CA;&#x6642;&#xFF0C;&#x5C31;&#x6703;&#x76E3;&#x807D;&#x5230;&#x8A72;&#x4E8B;&#x4EF6;&#x7684;&#x767C;&#x751F;&#xFF0C;&#x7136;&#x5F8C;&#x57F7;&#x884C;&#x7A0B;&#x5F0F;&#x78BC;&#x3002;<strong>Observer Pattern</strong> &#x5C31;&#x662F;&#x985E;&#x4F3C;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x6211;&#x5011;&#x5C0D;&#x9700;&#x8981;&#x76E3;&#x807D;&#x7684;&#x4E8B;&#x4EF6;&#x505A;&#x8A02;&#x95B1;&#xFF08;subscribe&#xFF09;&#xFF0C;&#x53EA;&#x8981;&#x7576;&#x4E8B;&#x4EF6;&#x767C;&#x751F;&#x6642;&#xFF0C;&#x5C31;&#x6703;&#x89F8;&#x767C;&#x4E26;&#x57F7;&#x884C;&#x7A0B;&#x5F0F;&#x78BC;&#x3002;<br>
Observable &#x7269;&#x4EF6;&#x4E0D;&#x50C5;&#x50C5;&#x5982;&#x6B64;&#xFF0C;&#x9084;&#x6709;&#x5BE6;&#x4F5C;  <strong>Iterator Pattern (&#x8FED;&#x4EE3;&#x5668;)</strong> &#xFF0C;&#x8A02;&#x95B1;&#x8CC7;&#x6599;&#x4E0D;&#x4E00;&#x5B9A;&#x6703;&#x53EA;&#x6709;&#x4E00;&#x7B46;&#xFF0C;&#x591A;&#x6578;&#x7684;&#x60C5;&#x6CC1;&#xFF0C;&#x8A02;&#x95B1;&#x6703;&#x662F;&#x4E00;&#x500B;&#x6301;&#x7E8C;&#x6027;&#x7684;&#x884C;&#x70BA;&#x3002;&#x5728;&#x8A02;&#x95B1;&#x5F8C;&#xFF0C;&#x4E00;&#x7B46;&#x4E00;&#x7B46;&#x7684;&#x8CC7;&#x6599;&#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x60F3;&#x50CF;&#x4ED6;&#x5C31;&#x50CF;&#x662F;&#x4E00;&#x500B;&#x8CC7;&#x6599;&#x6D41;&#xFF0C;&#x6703;&#x4E00;&#x6B21;&#x4E00;&#x6B21;&#x7684;&#x89F8;&#x767C;&#x5F8C;&#x7E8C;&#x7684;&#x7A0B;&#x5F0F;&#x78BC;&#x3002;</p>
<p>&#x4EE5;&#x4E0B;&#x662F;&#x4E00;&#x500B;&#x7C21;&#x55AE;&#x7684;&#x7BC4;&#x4F8B;&#x7A0B;&#x5F0F;&#x78BC;&#xFF1A;<a href="https://rxjs-k4k85q.stackblitz.io">https://rxjs-k4k85q.stackblitz.io</a>(&#x57F7;&#x884C;&#x7D50;&#x679C;&#x53C3;&#x8003;&#x9023;&#x7D50;)</p>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token comment">// &#x5EFA;&#x7ACB; observable</span>
<span class="token keyword keyword-const">const</span> observable<span class="token operator">:</span> Observable<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword keyword-function">function</span> <span class="token punctuation">(</span>observer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  observer<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  observer<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// &#x8A02;&#x95B1; observable</span>
<span class="token keyword keyword-const">const</span> data1 <span class="token operator">=</span> observable<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;-------data1&apos;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// &#x57F7;&#x884C;&#x6210;&#x529F;</span>
  <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// &#x57F7;&#x884C;&#x5931;&#x6557;</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;-------data1&apos;</span><span class="token punctuation">,</span><span class="token string">&apos;observable&#x5B8C;&#x6210;&apos;</span><span class="token punctuation">)</span> <span class="token comment">// &#x57F7;&#x884C;&#x5B8C;&#x6210;(&#x53EA;&#x6703;&#x6709;&#x4E00;&#x6B21;)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword keyword-const">const</span> data2 <span class="token operator">=</span> observable<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;data2&apos;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// &#x57F7;&#x884C;&#x6210;&#x529F;</span>
  <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// &#x57F7;&#x884C;&#x5931;&#x6557;</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;data2&apos;</span><span class="token punctuation">,</span><span class="token string">&apos;observable&#x5B8C;&#x6210;&apos;</span><span class="token punctuation">)</span> <span class="token comment">// &#x57F7;&#x884C;&#x5B8C;&#x6210;(&#x53EA;&#x6703;&#x6709;&#x4E00;&#x6B21;)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">// &#x53D6;&#x6D88;&#x8A02;&#x95B1; observable</span>
data1<span class="token punctuation">.</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
data2<span class="token punctuation">.</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</pre><p>&#x4E0A;&#x9762;&#x7684;&#x7A0B;&#x5F0F;&#x78BC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x4E09;&#x500B;&#x6B65;&#x9A5F;&#x3002;<br>
<strong>&#x5EFA;&#x7ACB; <code>Observable</code></strong> &#x7531;&#x65BC;&#x5F37;&#x578B;&#x5225;&#x7684;&#x95DC;&#x4FC2;&#xFF0C;&#x6211;&#x5011;&#x5BA3;&#x544A; observable &#x662F;  Observable &#x7269;&#x4EF6;&#xFF0C;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x6709;&#x4F7F;&#x7528;&#x6CDB;&#x578B;  <code>Observable&lt;number&gt;</code>&#xFF0C;&#x5BA3;&#x544A;&#x9019;&#x500B; Observable &#x56DE;&#x50B3;&#x503C;&#x6703;&#x662F;&#x7531; number &#x7D44;&#x6210;&#x7684;&#x3002;<br>
&#x89C0;&#x5BDF;&#x4E0B;&#x9762; <strong>&#x8A02;&#x95B1; observable</strong> &#x77E5;&#x9053;&#xFF0C;&#x5982;&#x679C;&#x6C92;&#x6709; <code>subscribe(..)</code> &#x9019;&#x4E00;&#x6BB5;&#x7A0B;&#x5F0F;&#x78BC;&#x662F;&#x4E0D;&#x6703;&#x57F7;&#x884C;&#x7684;&#xFF0C;&#x800C;&#x4E14;&#x53EF;&#x4EE5;&#x540C;&#x6642;&#x8A02;&#x95B1;&#x5F88;&#x591A;&#x6B21;&#x3002;<br>
&#x5728; <code>subscribe(..)</code> &#xFF0C;&#x53EF;&#x4EE5;&#x653E;&#x9032;&#x4E09;&#x500B;&#x53C3;&#x6578;&#xFF0C;&#x5206;&#x5225;&#x662F;&#xFF1A;<strong>&#x57F7;&#x884C;&#x6210;&#x529F;&#x5F8C;&#x8981;&#x505A;&#x7684;&#x4E8B;</strong>&#x3001;<strong>&#x57F7;&#x884C;&#x5931;&#x6557;&#x5F8C;&#x8981;&#x505A;&#x7684;&#x4E8B;</strong>&#x3001;<strong>&#x57F7;&#x884C;&#x5B8C;&#x6210;&#x5F8C;&#x8981;&#x505A;&#x7684;&#x4E8B;</strong>&#x3002;<br>
&#x9EDE;&#x9032;&#x57F7;&#x884C;&#x7D50;&#x679C;&#x53C3;&#x8003;&#x9023;&#x7D50;&#x6253;&#x958B; F12 &#x89C0;&#x5BDF;&#xFF0C;&#x767C;&#x73FE;&#x5169;&#x500B;&#x57F7;&#x884C;&#x7D50;&#x679C;&#x90FD;&#x6C92;&#x6709;<strong>observable &#x5B8C;&#x6210;</strong>&#xFF0C;&#x90A3;&#x662F;&#x56E0;&#x70BA; observable &#x5728;&#x5EFA;&#x7ACB;&#x6642;&#x4E26;&#x6C92;&#x6709;&#x57F7;&#x884C;&#x5B8C;&#x6210;&#xFF0C;&#x82E5;&#x6709;&#x65B0;&#x7684;&#x8CC7;&#x6599;&#x518D;&#x6B21;&#x767C;&#x9001;&#xFF0C;&#x9084;&#x662F;&#x6703;&#x6709;&#x8CC7;&#x6599;&#x5370;&#x51FA;&#x4F86;&#x3002;<br>
&#x9019;&#x6A23;&#x6709;&#x53EF;&#x80FD;&#x6703;&#x9020;&#x6210; <code>memory leak</code> &#x6216;&#x8005;<code>&#x91CD;&#x8907;&#x8A02;&#x95B1;</code>&#xFF0C;&#x9019;&#x6642;&#x6211;&#x5011;&#x9700;&#x8981;&#x624B;&#x52D5;<code>unsubscribe()</code>&#x3002;</p>
<p>&#x90A3;&#x9EBC;&#x518D;&#x6B21;&#x8ABF;&#x6574;&#x7A0B;&#x5F0F;&#x78BC;&#xFF1A;<a href="https://rxjs-o6ydur.stackblitz.io">https://rxjs-o6ydur.stackblitz.io</a> (&#x57F7;&#x884C;&#x7D50;&#x679C;&#x53C3;&#x8003;&#x9023;&#x7D50;)</p>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token comment">// &#x5EFA;&#x7ACB; observable</span>
<span class="token keyword keyword-const">const</span> observable<span class="token operator">:</span> Observable<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword keyword-function">function</span> <span class="token punctuation">(</span>observer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  observer<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  observer<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  observer<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</pre><p>&#x8ABF;&#x6574;&#x90E8;&#x5206;&#x7A0B;&#x5F0F;&#x78BC;&#x5F8C;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x6709;&#x78BA;&#x5BE6;&#x7684;&#x51FA;&#x73FE;<strong>observable&#x5B8C;&#x6210;</strong></p>
<h4 class="mume-header" id="%E9%8C%AF%E8%AA%A4%E8%99%95%E7%90%86" ebook-toc-level-4 heading="&amp;#x932F;&amp;#x8AA4;&amp;#x8655;&amp;#x7406;">&#x932F;&#x8AA4;&#x8655;&#x7406;</h4>

<p>&#x56DE;&#x5230;&#x932F;&#x8AA4;&#x8655;&#x7406;&#x7684;&#x90E8;&#x5206;&#xFF0C;&#x5728; <code>subscribe(..)</code> &#x4E2D;&#x7B2C;&#x4E00;&#x500B;&#x53C3;&#x6578;&#x653E;&#x5165;&#x6210;&#x529F;&#x6642;&#x8981;&#x505A;&#x7684; method&#xFF0C;&#x7B2C;&#x4E8C;&#x500B;&#x53C3;&#x6578;&#x653E;&#x5165;&#x5931;&#x6557;&#x6642;&#x8981;&#x505A;&#x7684; method&#xFF0C;&#x8655;&#x7406;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x5C07; <code>error</code> &#x7528; <code>console.log(..)</code> &#x5370;&#x51FA;&#x4F86;&#xFF0C;&#x9806;&#x4FBF;&#x89C0;&#x5BDF;&#x9019;&#x500B; <code>error</code> &#x7269;&#x4EF6;&#x7684;&#x5167;&#x5BB9;&#xFF1A;</p>
<pre data-role="codeBlock" data-info class="language-"><code>|--app
    |--app.component.html 
</code></pre><ul>
<li>app.component.html</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpClient <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/common/http&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> OnInit <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  selector<span class="token operator">:</span> <span class="token string">&apos;app-root&apos;</span><span class="token punctuation">,</span>
  templateUrl<span class="token operator">:</span> <span class="token string">&apos;./app.component.html&apos;</span><span class="token punctuation">,</span>
  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&apos;./app.component.css&apos;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">AppComponent</span> <span class="token keyword keyword-implements">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">{</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword keyword-private">private</span> http<span class="token operator">:</span> HttpClient<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span><span class="token function">dataGovSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span><span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token string">&apos;https://data.tycg.gov.tw/api/v1/rest/format&apos;</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
      err <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x932F;&#x8AA4;&#x8A0A;&#x606F;&apos;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x8A02;&#x95B1;&#x5B8C;&#x6210;&apos;</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">dataGovSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token string">&apos;https://data.gov.tw/api/front/statistics/export&apos;</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-const">const</span> postData <span class="token operator">=</span> <span class="token punctuation">{</span> format<span class="token operator">:</span> <span class="token string">&apos;json&apos;</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">&apos;category&apos;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http
      <span class="token punctuation">.</span><span class="token generic-function"><span class="token function">post</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
        url<span class="token punctuation">,</span>
        postData
      <span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>
        responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        err <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x932F;&#x8AA4;&#x8A0A;&#x606F;&apos;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x8A02;&#x95B1;&#x5B8C;&#x6210;&apos;</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</pre><h4 class="mume-header" id="%E8%B7%A8%E4%BE%86%E6%BA%90%E8%B3%87%E6%BA%90%E5%85%B1%E7%94%A8cors" ebook-toc-level-4 heading="&amp;#x8DE8;&amp;#x4F86;&amp;#x6E90;&amp;#x8CC7;&amp;#x6E90;&amp;#x5171;&amp;#x7528;&amp;#xFF08;CORS&amp;#xFF09;">&#x8DE8;&#x4F86;&#x6E90;&#x8CC7;&#x6E90;&#x5171;&#x7528;&#xFF08;CORS&#xFF09;</h4>

<p>&#x63A5;&#x4E0B;&#x4F86;&#x6211;&#x5011;&#x8981;&#x4F86;&#x8A2D;&#x5B9A;&#x4E00;&#x4E9B;&#x65B9;&#x6CD5;&#x4F86;&#x62FF;&#x56DE;&#x8CC7;&#x6599;&#xFF0C;&#x8B93;&#x7A0B;&#x5F0F;&#x6B63;&#x5E38;&#x904B;&#x4F5C;&#xFF0C;&#x4E00;&#x958B;&#x59CB;&#x5148;&#x89E3;&#x91CB;&#x4EC0;&#x9EBC;&#x662F;<strong>&#x540C;&#x6E90;&#x653F;&#x7B56;</strong></p>
<p>&#x540C;&#x6E90;&#x653F;&#x7B56; (Same-Origin Policy)&#xFF0C;&#x9867;&#x540D;&#x601D;&#x7FA9;&#x53EA;&#x6709;&#x300C;&#x540C;&#x6E90;&#x300D;&#x7684;&#x8CC7;&#x6E90;&#x624D;&#x53EF;&#x76F8;&#x4E92;&#x5B58;&#x53D6;&#xFF0C;&#x76EE;&#x7684;&#x662F;&#x70BA;&#x4E86;&#x9810;&#x9632;&#x99ED;&#x5BA2;&#x7684;&#x653B;&#x64CA;&#xFF0C;&#x56E0;&#x70BA;&#x6709;&#x4E86;&#x9019;&#x500B;&#x9650;&#x5236;&#xFF0C;&#x5728;&#x6B63;&#x5E38;&#x7684;&#x60C5;&#x6CC1;&#x4E0B;&#xFF0C;&#x99ED;&#x5BA2;&#x5C31;&#x4E0D;&#x80FD;&#x5920;&#x4EFB;&#x610F;&#x5411;&#x4F3A;&#x670D;&#x5668;&#x62FF;&#x53D6;&#x8CC7;&#x6599;&#x3002;<br>
&#x90A3;&#x4EC0;&#x9EBC;&#x7B97;&#x662F;&#x540C;&#x6E90;&#x5462;&#xFF1F;<br>
<img src="data:image/png;charset=utf-8;base64," alt="  "><br>
&#x56DE;&#x9867;&#x4E0A;&#x9762;&#x9019;&#x5F35;&#x5716; URL &#x7684;&#x90E8;&#x5206;&#xFF0C;<strong>&#x901A;&#x8A0A;&#x5354;&#x5B9A;</strong>&#x3001;<strong>&#x7DB2;&#x57DF;</strong>&#x3001;<strong>port</strong>&#xFF0C;&#x9019;&#x4E09;&#x500B;&#x8981;&#x5B8C;&#x5168;&#x76F8;&#x540C;&#x624D;&#x80FD;&#x5920;&#x88AB;&#x7A31;&#x70BA;&#x540C;&#x6E90;&#x3002;<br>
&#x975E;&#x540C;&#x6E90;&#x7684; request &#x5247;&#x6703;&#x56E0;&#x70BA;&#x5B89;&#x5168;&#x6027;&#x7684;&#x8003;&#x91CF;&#x53D7;&#x5230;&#x9650;&#x5236;&#x3002;&#x700F;&#x89BD;&#x5668;&#x6703;&#x5F37;&#x5236;&#x4F60;&#x9075;&#x5B88; CORS &#x7684;&#x898F;&#x7BC4;&#xFF0C;&#x5426;&#x5247;&#x700F;&#x89BD;&#x5668;&#x6703;&#x8B93; request &#x5931;&#x6557;&#x3002;<br>
&#x4F46;&#x958B;&#x767C;&#x6642;&#xFF0C;&#x540C;&#x6E90;&#x653F;&#x7B56;&#x6703;&#x9020;&#x6210;&#x4E00;&#x4E9B;&#x5C0F;&#x56F0;&#x64FE;&#xFF0C;&#x9019;&#x908A;&#x6709;&#x5169;&#x500B;&#x65B9;&#x5F0F;&#x53EF;&#x4EE5;&#x89E3;&#x6C7A;&#x9019;&#x500B;&#x554F;&#x984C;&#xFF1A;</p>
<ol>
<li>&#x5F8C;&#x7AEF;&#x7A0B;&#x5F0F;&#x540C;&#x610F;&#x8A72;&#x7DB2;&#x57DF;<br>
&#x5728;&#x81EA;&#x884C;&#x958B;&#x767C;&#x6642;&#xFF0C;&#x5F8C;&#x7AEF;&#x7A0B;&#x5F0F;&#x78BC;&#x662F;&#x958B;&#x767C;&#x8005;&#x53EF;&#x4EE5;&#x638C;&#x63E1;&#x7684;&#xFF0C;&#x4EE5; Spring Boot &#x70BA;&#x4F8B;&#xFF0C;&#x53EF;&#x4EE5;&#x5728; Controller &#x4E0A;&#xFF0C;&#x52A0;&#x4E0A; <code>@CrossOrigin(URL)</code></li>
</ol>
<pre data-role="codeBlock" data-info="Java" class="language-java"><span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@CrossOrigin</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:4200&quot;</span><span class="token punctuation">)</span>
<span class="token keyword keyword-public">public</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">StoreController</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</pre><ol start="2">
<li>&#x700F;&#x89BD;&#x5668;&#x8A2D;&#x5B9A;<br>
&#x4F46;&#x662F;&#x73FE;&#x5728;&#x7684;&#x60C5;&#x6CC1;&#x662F;&#x8981;&#x5411;&#x73FE;&#x6210;&#x7684; API &#x7372;&#x53D6;&#x8CC7;&#x6599;&#xFF0C;&#x9019;&#x6A23;&#x6211;&#x5011;&#x53EA;&#x80FD;&#x9760;&#x8A2D;&#x5B9A;&#x700F;&#x89BD;&#x5668;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x8B93;&#x8DE8;&#x4F86;&#x6E90;&#x8CC7;&#x6E90;&#x53EF;&#x4EE5;&#x5171;&#x7528;&#xFF0C;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x7576;&#x9019;&#x6A23;&#x8A2D;&#x5B9A;&#x6642;&#xFF0C;&#x6703;&#x5B58;&#x5728;&#x5371;&#x96AA;&#xFF0C;&#x7531;&#x65BC;&#x53EF;&#x4EE5;&#x8A2D;&#x5B9A;&#x5728;&#x4E0D;&#x540C;&#x700F;&#x89BD;&#x5668;&#x6377;&#x5F91;&#x4E0A;&#xFF0C;&#x82E5;&#x6709;&#x5176;&#x4ED6;&#x67E5;&#x8CC7;&#x6599;&#x9700;&#x6C42;&#xFF0C;&#x8ACB;&#x7528;&#x6B63;&#x5E38;&#x7684;&#x700F;&#x89BD;&#x5668;&#x700F;&#x89BD;&#x7DB2;&#x7AD9;&#x3002;<br>
&#x4EE5;&#x4E0B;&#x662F;&#x8A2D;&#x5B9A;&#x6B65;&#x9A5F;&#xFF1A;
<ol>
<li>&#x5148;&#x8907;&#x88FD;&#x4E00;&#x500B;&#x6377;&#x5F91;&#xFF08;&#x5EFA;&#x8B70;&#x653E;&#x5728;&#x4E00;&#x500B;&#x8CC7;&#x6599;&#x593E;&#x5167;&#xFF0C;&#x907F;&#x514D;&#x7528;&#xFF09;&#xFF0C;&#x53F3;&#x9375;&#x9EDE;&#x958B;&#x5167;&#x5BB9;&#x3002;<br>
<img src="data:image/png;charset=utf-8;base64," alt="  "></li>
<li>&#x9EDE;&#x9078;&#x6377;&#x5F91;&#xFF0C;&#x4E26;&#x5728;&#x76EE;&#x6A19;&#x6B04;&#x4F4D;&#x539F;&#x6709;&#x8CC7;&#x6599;&#x7684;&#x5F8C;&#x9762;&#x8CBC;&#x4E0A; <code>--user-data-dir=&quot;C:/Chrome dev session2&quot; --disable-web-security</code>&#xFF0C;&#x518D;&#x6309;&#x78BA;&#x8A8D;&#x3002;<br>
<img src="data:image/png;charset=utf-8;base64," alt="  "></li>
<li>&#x6253;&#x958B;&#x8A2D;&#x5B9A;&#x597D;&#x7684;&#x6377;&#x5F91;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF1A;&#x4F60;&#x6B63;&#x5728;&#x4F7F;&#x7528;&#x4E0D;&#x53D7;&#x652F;&#x63F4;&#x7684;&#x547D;&#x4EE4;&#x5217;&#x6A19;&#x5E5F;&#xFF1A;--disable-web-security&#x3002;&#x9019;&#x53EF;&#x80FD;&#x6703;&#x5371;&#x53CA;&#x7A69;&#x5B9A;&#x6027;&#x8207;&#x5B89;&#x5168;&#x6027;&#x3002;<br>
&#x4EE3;&#x8868;&#x8A2D;&#x5B9A;&#x6210;&#x529F;&#x3002;<br>
<img src="data:image/png;charset=utf-8;base64," alt="  "></li>
</ol>
</li>
</ol>
<h3 class="mume-header" id="%E9%80%B2%E9%9A%8E%E7%AF%87" ebook-toc-level-3 heading="&amp;#x9032;&amp;#x968E;&amp;#x7BC7;">&#x9032;&#x968E;&#x7BC7;</h3>

<p>&#x6709;&#x6642;&#x5F9E;&#x5F8C;&#x7AEF;&#x62FF;&#x5230;&#x7684;&#x8CC7;&#x6599;&#x5FC5;&#x9808;&#x8981;&#x5148;&#x9032;&#x884C;&#x6574;&#x7406;&#xFF0C;&#x9019;&#x6642;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; <code>pipe(..)</code> &#x3002;</p>
<h4 class="mume-header" id="observable-%E5%92%8C-rxjs" ebook-toc-level-4 heading="Observable &amp;#x548C; RxJS">Observable &#x548C; RxJS</h4>

<p>RxJS &#x662F;&#x4E00;&#x5957;&#x7D44;&#x5408;&#x975E;&#x540C;&#x6B65;&#x884C;&#x70BA;&#x548C;&#x4E8B;&#x4EF6;&#x57FA;&#x790E;&#x7A0B;&#x5E8F;&#x7684;&#x5957;&#x4EF6;&#x3002;<br>
&#x4E4B;&#x524D;&#x6709;&#x63D0;&#x5230; Observable &#x7269;&#x4EF6;&#x5176;&#x5BE6;&#x5305;&#x542B;&#x4E86;&#x5169;&#x7A2E;&#x8A2D;&#x8A08;&#x6A21;&#x5F0F;&#xFF1A;<strong>Observer Pattern (&#x89C0;&#x5BDF;&#x8005;&#x6A21;&#x5F0F;)</strong> &#x3001; <strong>Iterator Pattern (&#x8FED;&#x4EE3;&#x5668;)</strong> &#xFF0C;&#x4F46;&#x5C0D;&#x5F8C;&#x8005;&#x4E26;&#x6C92;&#x6709;&#x591A;&#x52A0;&#x8457;&#x58A8;&#xFF0C;&#x9019;&#x908A;&#x624D;&#x8981;&#x6BD4;&#x8F03;&#x6DF1;&#x5165;&#x7684;&#x8A0E;&#x8AD6;&#x3002;<br>
&#x5728;&#x6BD4;&#x8F03;&#x6DF1;&#x5165;&#x8A0E;&#x8AD6;&#x4E4B;&#x524D;&#xFF0C;&#x5148;&#x56DE;&#x9867;&#x4E00;&#x4E0B; JavaScript &#x7684; Array &#xFF0C; Array &#x7684;&#x8655;&#x7406;&#x5728; JavaScript &#x4E2D;&#x662F;&#x975E;&#x5E38;&#x91CD;&#x8981;&#x7684;&#x4E00;&#x74B0;&#xFF0C;&#x6700;&#x5E38;&#x4F7F;&#x7528;&#x7684;&#x662F;&#x9019;&#x5E7E;&#x500B; <code>filter()</code>, <code>find()</code>, <code>forEach()</code>, <code>map()</code>, <code>every()</code>, <code>some()</code>, <code>reduce()</code>&#xFF0C;&#x9019;&#x88E1;&#x4E0D;&#x6703;&#x8AAA;&#x660E;&#x9019;&#x5E7E;&#x500B;&#x65B9;&#x6CD5;&#xFF0C;&#x53EA;&#x6703;&#x8B1B;&#x5230;&#x4E00;&#x500B;&#x89C0;&#x5FF5;&#xFF0C;&#x9019;&#x5E7E;&#x500B;&#x65B9;&#x6CD5;&#x90FD;&#x6703;&#x50B3;&#x5165;&#x4E00;&#x500B; <strong>function</strong>&#xFF0C;&#x6703;&#x4F9D;&#x5E8F;&#x628A; Array &#x5167;&#x7684;&#x503C;&#x4E00;&#x4E00;&#x53D6;&#x51FA;&#xFF0C;&#x7136;&#x5F8C;&#x57F7;&#x884C; function &#x3002;<br>
&#x70BA;&#x4E86;&#x65B9;&#x4FBF;&#x7406;&#x89E3;&#xFF0C;&#x6211;&#x5011;&#x53EF;&#x4EE5;&#x5148;&#x8A8D;&#x70BA; RxJS &#x5C31;&#x662F;&#x53EF;&#x4EE5;&#x505A;&#x5230;&#x548C; Array &#x7684;&#x65B9;&#x6CD5;&#x4E00;&#x6A23;&#x7684;&#x4E8B;&#xFF0C;&#x53EA;&#x662F;&#x503C;&#x7684;&#x4F86;&#x6E90;&#x662F; Observable &#x7269;&#x4EF6;&#x8A02;&#x95B1;&#x56DE;&#x50B3;&#x7684;&#x3002;</p>
<p>&#x5099;&#x8A3B;&#xFF1A;&#x4EE5;&#x4E0A;&#x7684;&#x4ECB;&#x7D39;&#x50C5;&#x6709;&#x4ECB;&#x7D39; RxJS &#x5167; Operators &#x7684;&#x6982;&#x5FF5;&#xFF0C; RxJS &#x9084;&#x5305;&#x542B;&#x4E86; Observable&#x3001;Operators&#xFF08;&#x9084;&#x6709;&#x5F88;&#x591A;&#x5F88;&#x591A;&#x5F88;&#x591A;&#xFF09;&#x3001;Subscription&#x3001;Subjects&#x3001;Scheduler&#x2026;&#x2026;&#xFF0C;&#x5C0D;&#x65BC; RxJS &#x7684;&#x5B78;&#x7FD2;&#xFF0C;&#x5BE6;&#x969B;&#x61C9;&#x7528;&#x6BD4;&#x95B1;&#x8B80;&#x8CC7;&#x6599;&#x6709;&#x7528;&#x4E5F;&#x6BD4;&#x8F03;&#x6DF1;&#x523B;&#xFF08;&#x90A3;&#x7A2E;&#x53EA;&#x6709;&#x4E09;&#x884C;&#x7684;&#x5C0F;&#x7BC4;&#x4F8B;&#x7DF4;&#x7FD2;&#x5176;&#x5BE6;&#x4E5F;&#x6C92;&#x4EC0;&#x9EBC;&#x7528;&#xFF09;&#x3002;<br>
&#x5C0D;&#x65BC;&#x672C;&#x7AE0;&#xFF0C;&#x57FA;&#x790E;&#x7BC7;&#x53CA;&#x61C9;&#x7528;&#x7BC7;&#x512A;&#x5148;&#x5EA6;&#x8F03;&#x9AD8;&#xFF0C;<code>pipe()</code> &#x61C9;&#x7528;&#x66F4;&#x504F;&#x5411;&#x5BEB;&#x51FA;&#x6F02;&#x4EAE;&#x7684;&#x7A0B;&#x5F0F;&#x78BC;&#xFF0C;&#x9664;&#x975E;&#x5DF2;&#x5C0D;&#x5176;&#x4ED6;&#x90E8;&#x5206;&#x90FD;&#x8DB3;&#x5920;&#x5AFB;&#x719F;&#xFF0C;&#x5426;&#x5247;&#x5C0D; <code>pipe()</code> &#x8ACB;&#x5148;&#x653E;&#x5BEC;&#x5FC3;&#x3002;</p>
<h4 class="mume-header" id="pipe" ebook-toc-level-4 heading="pipe()">pipe()</h4>

<pre data-role="codeBlock" data-info class="language-"><code>|--app
    |--app.component.ts 
</code></pre><ul>
<li>app.component.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpClient <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/common/http&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> OnInit <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> from <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;rxjs&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> filter<span class="token punctuation">,</span> map<span class="token punctuation">,</span> switchMap<span class="token punctuation">,</span> tap<span class="token punctuation">,</span> toArray <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;rxjs/operators&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  selector<span class="token operator">:</span> <span class="token string">&apos;app-root&apos;</span><span class="token punctuation">,</span>
  templateUrl<span class="token operator">:</span> <span class="token string">&apos;./app.component.html&apos;</span><span class="token punctuation">,</span>
  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&apos;./app.component.css&apos;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">AppComponent</span> <span class="token keyword keyword-implements">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">{</span>

  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword keyword-void">void</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span><span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span><span class="token function">dataGovSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword keyword-private">private</span> http<span class="token operator">:</span> HttpClient<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

  <span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token string">&apos;https://data.tycg.gov.tw/api/v1/rest/format&apos;</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>
        <span class="token function">tap</span><span class="token punctuation">(</span>data <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x521D;&#x59CB;&#x8CC7;&#x6599;&apos;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token comment">// switchMap(data =&gt; from(data)),</span>
        <span class="token comment">// tap(data =&gt; console.log(&apos;switchMap&apos;, data)),</span>
        <span class="token comment">// map(data =&gt; data),</span>
        <span class="token comment">// tap(data =&gt; console.log(&apos;map&apos;, data)),</span>
        <span class="token comment">// filter(data =&gt; data.length &gt; 3),</span>
        <span class="token comment">// tap(data =&gt; console.log(&apos;filter&apos;, data)),</span>
        <span class="token comment">// toArray()</span>
      <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
        err <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x932F;&#x8AA4;&#x8A0A;&#x606F;&apos;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x8A02;&#x95B1;&#x5B8C;&#x6210;&apos;</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">dataGovSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token string">&apos;https://data.gov.tw/api/front/statistics/export&apos;</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-const">const</span> postData <span class="token operator">=</span> <span class="token punctuation">{</span> format<span class="token operator">:</span> <span class="token string">&apos;json&apos;</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">&apos;category&apos;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http
      <span class="token punctuation">.</span><span class="token generic-function"><span class="token function">post</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
        url<span class="token punctuation">,</span>
        postData
      <span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>
        <span class="token comment">// switchMap(data =&gt; from(data)),</span>
        <span class="token comment">// map(data =&gt; {</span>
        <span class="token comment">//   return { service: data.&#x670D;&#x52D9;&#x5206;&#x985E;, count: data.&#x700F;&#x89BD;&#x6B21;&#x6578;, totalCount: data.&#x8CC7;&#x6599;&#x96C6;&#x7E3D;&#x6578; };</span>
        <span class="token comment">// }),</span>
        <span class="token comment">// toArray()</span>
      <span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>
        responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        err <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x932F;&#x8AA4;&#x8A0A;&#x606F;&apos;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x8A02;&#x95B1;&#x5B8C;&#x6210;&apos;</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</pre><p><code>getFormatList()</code>&#x3001;<code>dataGovSearch()</code> &#x5169;&#x500B;&#x65B9;&#x6CD5;&#x90FD;&#x6709;&#x505A;&#x4E00;&#x4E9B;&#x6539;&#x52D5;&#xFF0C;&#x524D;&#x8005;&#x6BD4;&#x8F03;&#x504F;&#x5411;&#x70AB;&#x6280;&#xFF0C;&#x5728;&#x4E0B;&#x4E00;&#x500B;&#x7A0B;&#x5F0F;&#x78BC;&#x6BB5;&#x843D;&#x5C31;&#x6703;&#x6D88;&#x5931;&#x4E86;&#xFF0C;<code>dataGovSearch()</code> &#x662F;&#x7531;&#x65BC;&#x8CC7;&#x6599;&#x56DE;&#x4F86; Key &#x503C;&#x662F;&#x4E2D;&#x6587;&#xFF0C;&#x7121;&#x6CD5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#xFF0C;&#x6240;&#x4EE5;&#x5FC5;&#x9808;&#x53BB;&#x505A;&#x8ABF;&#x6574;&#x3002;<br>
<code>pipe()</code> &#x662F;&#x653E;&#x5728; <code>subscribe(...)</code> &#x524D;&#xFF0C;&#x628A;&#x9700;&#x8981;&#x8655;&#x7406;&#x7684;&#x6D41;&#x7A0B;&#x653E;&#x9032; <code>pipe()</code> &#x5167;&#x3002;</p>
<ul>
<li>
<p><code>getFormatList()</code><br>
<code>pipe()</code> &#x6709;&#x516D;&#x500B;&#x4E0D;&#x540C;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5C0D;&#x65BC;&#x9019;&#x5E7E;&#x500B;&#x65B9;&#x6CD5;&#x505A;&#x7C21;&#x55AE;&#x7684;&#x4ECB;&#x7D39;&#xFF1A;<br>
<strong>tap(data =&gt; console.log(&apos;&#x521D;&#x59CB;&#x8CC7;&#x6599;&apos;, data))</strong><br>
<code>tap()</code> &#x7B97;&#x662F;&#x4E00;&#x7A2E; <code>side effect</code> &#xFF0C;&#x4ED6;&#x5728;&#x6574;&#x500B;&#x8CC7;&#x6599;&#x6D41;&#x5167;&#x662F;&#x6C92;&#x6709;&#x610F;&#x7FA9;&#x7684;&#xFF0C;&#x6216;&#x8A31;&#x4ED6;&#x8981;&#x8655;&#x7406;&#x8CC7;&#x6599;&#x6D41;&#x4E4B;&#x5916;&#x7684;&#x4E8B;&#xFF0C;&#x70BA;&#x4E86;&#x505A;&#x5340;&#x5225;&#xFF0C;&#x6240;&#x7522;&#x751F;&#x7684;&#x4E00;&#x500B;&#x65B9;&#x6CD5;&#x3002;<br>
<strong>switchMap(data =&gt; from(data))</strong><br>
&#x9019;&#x500B;&#x65B9;&#x6CD5;&#x5167;&#x5305;&#x542B;&#x4E86;&#x5169;&#x500B;&#x65B9;&#x6CD5;<code>switchMap()</code>&#x3001;<code>from()</code><br>
switchMap &#x662F;&#x4E00;&#x7A2E;&#x8F49;&#x63DB;&#x985E;&#x578B;&#x7684; Operator&#xFF0C;&#x7528;&#x9014;&#x662F;&#x628A;&#x4F86;&#x6E90;&#x4E8B;&#x4EF6;&#x503C;&#x63DB;&#x6210;&#x53E6;&#x5916;&#x4E00;&#x500B; Observable&#x3002;<br>
from &#x662F;&#x5EFA;&#x7ACB; Observable &#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x53C3;&#x6578;&#x662F;&#x9663;&#x5217;&#xFF0C;&#x6703;&#x628A;&#x9663;&#x5217;&#x7684;&#x503C;&#x8B8A;&#x6210; Observable &#x4E00;&#x500B;&#x4E00;&#x500B;&#x50B3;&#x51FA;&#x53BB;&#x3002;<br>
<strong>map(data =&gt; data)</strong><br>
&#x548C; Array &#x7684; map &#x4F5C;&#x7528;&#x76F8;&#x540C;&#xFF0C;&#x4E0D;&#x591A;&#x505A;&#x4ECB;&#x7D39;&#x3002;<br>
<strong>filter(data =&gt; data.length &gt; 3)</strong><br>
&#x548C; Array &#x7684; filter &#x4F5C;&#x7528;&#x76F8;&#x540C;&#xFF0C;&#x4E0D;&#x591A;&#x505A;&#x4ECB;&#x7D39;&#x3002;<br>
<strong>toArray()</strong><br>
&#x5728; switchMap &#x6642;&#xFF0C;&#x5C07;&#x8A02;&#x95B1;&#x56DE;&#x4F86;&#x7684;&#x9663;&#x5217;&#x62C6;&#x89E3;&#x6210;&#x4E00;&#x500B;&#x4E00;&#x500B;&#x7684;&#x503C;&#xFF0C;&#x56E0;&#x70BA;&#x5728;&#x5F8C;&#x9762;&#x7684; <code>subscribe(...)</code> &#x6211;&#x5011;&#x9084;&#x662F;&#x8981;&#x53D6;&#x5230;&#x4E00;&#x6574;&#x500B;&#x9663;&#x5217;&#xFF0C;&#x6240;&#x4EE5;&#x4F7F;&#x7528; <code>toArray()</code> &#xFF0C;&#x628A;&#x5143;&#x7D20;&#x96C6;&#x5408;&#x8D77;&#x4F86;&#x3002;</p>
</li>
<li>
<p><code>dataGovSearch()</code><br>
&#x9019;&#x908A;&#x7684;&#x65B9;&#x6CD5;&#x90FD;&#x5DF2;&#x5728;&#x4E0A;&#x9762;&#x6709;&#x4ECB;&#x7D39;&#x4E86;&#xFF0C;&#x6BD4;&#x8F03;&#x7279;&#x5225;&#x6CE8;&#x610F;&#x7684;&#x662F; <code>map()</code> &#x505A;&#x7684;&#x4E8B;&#xFF0C;&#x7531;&#x65BC; Key &#x503C;&#x662F;&#x4E2D;&#x6587;&#xFF0C;&#x5728;&#x4E4B;&#x5F8C; HTML &#x4E0A;&#x4F7F;&#x7528;&#x6703;&#x6709;&#x554F;&#x984C;&#xFF0C;&#x6240;&#x4EE5;&#x9019;&#x908A;&#x8F49;&#x63DB;&#x6210;&#x4E00;&#x500B;&#x65B0;&#x7684;&#x7269;&#x4EF6;&#x518D;&#x4E1F;&#x51FA;&#x53BB;&#x3002;</p>
</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript">  <span class="token function">map</span><span class="token punctuation">(</span>data <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-return">return</span> <span class="token punctuation">{</span> service<span class="token operator">:</span> data<span class="token punctuation">.</span>&#x670D;&#x52D9;&#x5206;&#x985E;<span class="token punctuation">,</span> count<span class="token operator">:</span> data<span class="token punctuation">.</span>&#x700F;&#x89BD;&#x6B21;&#x6578;<span class="token punctuation">,</span> totalCount<span class="token operator">:</span> data<span class="token punctuation">.</span>&#x8CC7;&#x6599;&#x96C6;&#x7E3D;&#x6578; <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</pre><h4 class="mume-header" id="%E5%AE%9A%E7%BE%A9%E8%B3%87%E6%96%99%E6%A0%BC%E5%BC%8F" ebook-toc-level-4 heading="&amp;#x5B9A;&amp;#x7FA9;&amp;#x8CC7;&amp;#x6599;&amp;#x683C;&amp;#x5F0F;">&#x5B9A;&#x7FA9;&#x8CC7;&#x6599;&#x683C;&#x5F0F;</h4>

<p>&#x6700;&#x5F8C;&#x9032;&#x968E;&#x7BC7;&#x518D;&#x63D0;&#x5230;&#x4E00;&#x500B;&#x89C0;&#x5FF5;&#xFF0C;&#x4E4B;&#x524D;&#x6709;&#x4E0D;&#x65B7;&#x5730;&#x63D0;&#x5230; <strong>TypeScript</strong> &#x662F;&#x4E00;&#x500B;&#x5F37;&#x578B;&#x5225;&#x7684;&#x8A9E;&#x8A00;&#xFF0C;&#x6703;&#x5E0C;&#x671B;&#x628A;&#x7A0B;&#x5F0F;&#x78BC;&#x90FD;&#x5B9A;&#x7FA9;&#x597D;&#xFF0C;&#x4F46;&#x6709;&#x4E9B;&#x662F;&#x81EA;&#x5DF1;&#x7522;&#x751F;&#x7684;&#x7269;&#x4EF6;&#xFF0C;&#x9019;&#x7A2E;&#x81EA;&#x88FD;&#x578B;&#x7684;&#x7269;&#x4EF6;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5B9A;&#x7FA9;&#x4E00;&#x500B; <strong>interface</strong> &#x3002;</p>
<pre data-role="codeBlock" data-info class="language-"><code>|--app
    |--interfaces
      |--postResponseData.ts
    |--app.component.ts 
</code></pre><ul>
<li>postResponseData.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-export">export</span> <span class="token keyword keyword-interface">interface</span> <span class="token class-name">PostResponseData</span> <span class="token punctuation">{</span>
  &#x670D;&#x52D9;&#x5206;&#x985E;<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  &#x700F;&#x89BD;&#x6B21;&#x6578;<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  &#x8CC7;&#x6599;&#x96C6;&#x7E3D;&#x6578;<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  service<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  count<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  totalCount<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</pre><p>&#x9019;&#x908A;&#x7279;&#x5225;&#x7684;&#x662F;&#x6BCF;&#x500B;&#x5C6C;&#x6027;&#x90FD;&#x6709;&#x4E00;&#x500B; <code>?</code> &#x9019;&#x4EE3;&#x8868; PostResponseData &#x7269;&#x4EF6;&#x4E0D;&#x4E00;&#x5B9A;&#x8981;&#x542B;&#x6709;&#x7684;&#x503C;&#xFF0C;&#x56E0;&#x70BA;&#x60F3;&#x8981;&#x8CC7;&#x6599;&#x8F49;&#x63DB;&#x524D;&#x5F8C;&#x5171;&#x7528;&#x7684;&#x95DC;&#x4FC2;&#xFF0C;&#x6240;&#x4EE5;&#x624D;&#x6703;&#x505A;&#x9019;&#x6A23;&#x7684;&#x8655;&#x7406;&#x3002;</p>
<ul>
<li>app.component.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpClient <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/common/http&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> OnInit <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> PostResponseData <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./interfaces/postResponseData&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  selector<span class="token operator">:</span> <span class="token string">&apos;app-root&apos;</span><span class="token punctuation">,</span>
  templateUrl<span class="token operator">:</span> <span class="token string">&apos;./app.component.html&apos;</span><span class="token punctuation">,</span>
  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&apos;./app.component.css&apos;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">AppComponent</span> <span class="token keyword keyword-implements">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">{</span>

  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword keyword-void">void</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span><span class="token function">dataGovSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span><span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword keyword-private">private</span> http<span class="token operator">:</span> HttpClient<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

  <span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token string">&apos;https://data.tycg.gov.tw/api/v1/rest/format&apos;</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
      err <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x932F;&#x8AA4;&#x8A0A;&#x606F;&apos;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x8A02;&#x95B1;&#x5B8C;&#x6210;&apos;</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">dataGovSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token string">&apos;https://data.gov.tw/api/front/statistics/export&apos;</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-const">const</span> postData <span class="token operator">=</span> <span class="token punctuation">{</span> format<span class="token operator">:</span> <span class="token string">&apos;json&apos;</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">&apos;category&apos;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http
      <span class="token punctuation">.</span><span class="token generic-function"><span class="token function">post</span><span class="token generic class-name"><span class="token operator">&lt;</span>PostResponseData<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
        url<span class="token punctuation">,</span>
        postData
      <span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>
        responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        err <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x932F;&#x8AA4;&#x8A0A;&#x606F;&apos;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x8A02;&#x95B1;&#x5B8C;&#x6210;&apos;</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</pre><h3 class="mume-header" id="%E6%87%89%E7%94%A8%E7%AF%87" ebook-toc-level-3 heading="&amp;#x61C9;&amp;#x7528;&amp;#x7BC7;">&#x61C9;&#x7528;&#x7BC7;</h3>

<p>&#x5728;&#x57FA;&#x790E;&#x7BC7;&#x6210;&#x529F;&#x767C;&#x51FA; API &#xFF0C;&#x4E5F;&#x78BA;&#x5BE6;&#x7684;&#x62FF;&#x56DE;&#x8CC7;&#x6599;&#xFF0C;&#x5728;&#x9032;&#x968E;&#x7BC7;&#x4E5F;&#x6574;&#x7406;&#x5B8C;&#x8CC7;&#x6599;&#xFF0C;&#x9084;&#x5B9A;&#x7FA9;&#x51FA;&#x4E00;&#x500B;&#x7269;&#x4EF6;&#x578B;&#x5225;&#x3002;&#x90A3;&#x9EBC;&#x6700;&#x5F8C;&#x5C07;&#x6574;&#x500B;&#x7A0B;&#x5F0F;&#x78BC;&#x8DDF;&#x756B;&#x9762;&#x505A;&#x7D50;&#x5408;&#xFF0C;&#x9AD4;&#x9A57;&#x4E00;&#x4E0B;&#x5BE6;&#x969B;&#x61C9;&#x7528;&#x7684;&#x611F;&#x89BA;&#x3002;</p>
<h4 class="mume-header" id="%E5%91%88%E7%8F%BE%E8%B3%87%E6%96%99-%E7%B5%90%E5%90%88-table" ebook-toc-level-4 heading="&amp;#x5448;&amp;#x73FE;&amp;#x8CC7;&amp;#x6599; - &amp;#x7D50;&amp;#x5408; table">&#x5448;&#x73FE;&#x8CC7;&#x6599; - &#x7D50;&#x5408; table</h4>

<pre data-role="codeBlock" data-info class="language-"><code>|--app
    |--app.component.html 
    |--app.component.ts 
</code></pre><ul>
<li>app.component.html</li>
</ul>
<pre data-role="codeBlock" data-info="html" class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>&#x653F;&#x5E9C;&#x8CC7;&#x6599;&#x958B;&#x653E;&#x5E73;&#x81FA;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>https://data.gov.tw/API<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataGovSearch()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Post<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>table<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x670D;&#x52D9;&#x5206;&#x985E;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x700F;&#x89BD;&#x6B21;&#x6578;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x8CC7;&#x6599;&#x96C6;&#x7E3D;&#x6578;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let item of dataGov; let i = index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ i + 1 }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> {{ item.service }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> {{ item.count }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> {{ item.totalCount }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</pre><ul>
<li>app.component.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpClient <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/common/http&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> OnInit <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> from <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;rxjs&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> map<span class="token punctuation">,</span> switchMap<span class="token punctuation">,</span> toArray <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;rxjs/operators&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> PostResponseData <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./interfaces/postResponseData&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  selector<span class="token operator">:</span> <span class="token string">&apos;app-root&apos;</span><span class="token punctuation">,</span>
  templateUrl<span class="token operator">:</span> <span class="token string">&apos;./app.component.html&apos;</span><span class="token punctuation">,</span>
  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&apos;./app.component.css&apos;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">AppComponent</span> <span class="token keyword keyword-implements">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">{</span>

  dataGov<span class="token operator">:</span> PostResponseData<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword keyword-private">private</span> http<span class="token operator">:</span> HttpClient<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>


  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword keyword-void">void</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token string">&apos;https://data.tycg.gov.tw/api/v1/rest/format&apos;</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span><span class="token punctuation">,</span>
      err <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x932F;&#x8AA4;&#x8A0A;&#x606F;&apos;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x8A02;&#x95B1;&#x5B8C;&#x6210;&apos;</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">dataGovSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token string">&apos;https://data.gov.tw/api/front/statistics/export&apos;</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-const">const</span> postData <span class="token operator">=</span> <span class="token punctuation">{</span> format<span class="token operator">:</span> <span class="token string">&apos;json&apos;</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">&apos;category&apos;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http
      <span class="token punctuation">.</span><span class="token generic-function"><span class="token function">post</span><span class="token generic class-name"><span class="token operator">&lt;</span>PostResponseData<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
        url<span class="token punctuation">,</span>
        postData
      <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>
        <span class="token function">switchMap</span><span class="token punctuation">(</span>data <span class="token operator">=&gt;</span> <span class="token function">from</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">map</span><span class="token punctuation">(</span>data <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword keyword-return">return</span> <span class="token punctuation">{</span> service<span class="token operator">:</span> data<span class="token punctuation">.</span>&#x670D;&#x52D9;&#x5206;&#x985E;<span class="token punctuation">,</span> count<span class="token operator">:</span> data<span class="token punctuation">.</span>&#x700F;&#x89BD;&#x6B21;&#x6578;<span class="token punctuation">,</span> totalCount<span class="token operator">:</span> data<span class="token punctuation">.</span>&#x8CC7;&#x6599;&#x96C6;&#x7E3D;&#x6578; <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>
        responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>dataGov <span class="token operator">=</span> responseData<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        err <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x932F;&#x8AA4;&#x8A0A;&#x606F;&apos;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x8A02;&#x95B1;&#x5B8C;&#x6210;&apos;</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</pre><p>&#x4E00;&#x958B;&#x59CB;&#x6211;&#x5011;&#x7D50;&#x5408;&#x4E86; table &#xFF0C;&#x5728; API &#x7684;&#x503C;&#x56DE;&#x4F86;&#x5F8C;&#xFF0C;&#x5C07;&#x8CC7;&#x6599;&#x5132;&#x5B58;&#x5728; <code>dataGovSearch</code> &#x5167;&#xFF0C;&#x518D;&#x5229;&#x7528;&#x4E4B;&#x524D;&#x63D0;&#x5230;&#x7684; <code>*ngfor</code> &#x5C07;&#x503C;&#x5448;&#x73FE;&#x51FA;&#x4F86;&#x3002;</p>
<h4 class="mume-header" id="%E5%91%88%E7%8F%BE%E8%B3%87%E6%96%99-%E7%B5%90%E5%90%88-form" ebook-toc-level-4 heading="&amp;#x5448;&amp;#x73FE;&amp;#x8CC7;&amp;#x6599; - &amp;#x7D50;&amp;#x5408; form">&#x5448;&#x73FE;&#x8CC7;&#x6599; - &#x7D50;&#x5408; form</h4>

<pre data-role="codeBlock" data-info class="language-"><code>|--app
    |--app.component.html 
    |--app.component.ts 
    |--interfaces
      |--tycgIdentifier.ts // &#x65B0;&#x589E;
</code></pre><ul>
<li>app.component.html</li>
</ul>
<pre data-role="codeBlock" data-info="html" class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>&#x653F;&#x5E9C;&#x8CC7;&#x6599;&#x958B;&#x653E;&#x5E73;&#x81FA;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>https://data.gov.tw/API<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataGovSearch()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Post<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>table<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x670D;&#x52D9;&#x5206;&#x985E;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x700F;&#x89BD;&#x6B21;&#x6578;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x8CC7;&#x6599;&#x96C6;&#x7E3D;&#x6578;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let item of dataGov; let i = index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ i + 1 }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> {{ item.service }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> {{ item.count }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> {{ item.totalCount }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>&#x6843;&#x5712;&#x5E02;&#x653F;&#x5E9C;&#x8CC7;&#x6599;&#x958B;&#x653E;&#x5E73;&#x53F0;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>https://data.tycg.gov.tw/opendata/api-docs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>&#x8CC7;&#x6599;&#x985E;&#x578B;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>format<span class="token punctuation">&quot;</span></span> <span class="token attr-name">(change)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getIdentifierList()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let item of formatList<span class="token punctuation">&quot;</span></span> <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            {{ item }}
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>&#x8CC7;&#x6599;&#x96C6; ID<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span>
          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>identifier<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>!format<span class="token punctuation">&quot;</span></span>
        <span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let id of identifierList<span class="token punctuation">&quot;</span></span> <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            {{ id }}
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary btn-lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getIdentifier()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x67E5;&#x8A62;&#x8CC7;&#x6599;&#x96C6;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">[formGroup]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tycgIdentifier<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span> &#x8CC7;&#x6599;&#x96C6; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>&#x6A19;&#x984C;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">formControlName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>&#x8CC7;&#x6599;&#x96C6;&#x985E;&#x578B;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">formControlName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>type<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>&#x8CC7;&#x6599;&#x96C6;&#x63CF;&#x8FF0;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">formControlName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>description<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>&#x63D0;&#x4F9B;&#x6A5F;&#x95DC;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">formControlName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>organization<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</pre><ul>
<li>app.component.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpClient <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/common/http&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> OnInit <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormControl<span class="token punctuation">,</span> FormGroup <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/forms&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> from <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;rxjs&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> map<span class="token punctuation">,</span> switchMap<span class="token punctuation">,</span> toArray <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;rxjs/operators&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> PostResponseData <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./interfaces/postResponseData&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> TycgIdentifier <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./interfaces/tycgIdentifier&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  selector<span class="token operator">:</span> <span class="token string">&apos;app-root&apos;</span><span class="token punctuation">,</span>
  templateUrl<span class="token operator">:</span> <span class="token string">&apos;./app.component.html&apos;</span><span class="token punctuation">,</span>
  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&apos;./app.component.css&apos;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">AppComponent</span> <span class="token keyword keyword-implements">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">{</span>

  dataGov<span class="token operator">:</span> PostResponseData<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  formatList<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  identifierList<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  tycgIdentifier<span class="token operator">:</span> FormGroup<span class="token punctuation">;</span>

  format <span class="token operator">=</span> <span class="token string">&apos;&apos;</span><span class="token punctuation">;</span>

  identifier <span class="token operator">=</span> <span class="token string">&apos;&apos;</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword keyword-private">private</span> http<span class="token operator">:</span> HttpClient<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>


  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword keyword-void">void</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span><span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>tycgIdentifier <span class="token operator">=</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormGroup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      type<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      description<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      organization<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token string">&apos;https://data.tycg.gov.tw/api/v1/rest/format&apos;</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>formatList <span class="token operator">=</span> responseData<span class="token punctuation">;</span>

    <span class="token punctuation">}</span><span class="token punctuation">,</span>
      err <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x932F;&#x8AA4;&#x8A0A;&#x606F;&apos;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x8A02;&#x95B1;&#x5B8C;&#x6210;&apos;</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">dataGovSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token string">&apos;https://data.gov.tw/api/front/statistics/export&apos;</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-const">const</span> postData <span class="token operator">=</span> <span class="token punctuation">{</span> format<span class="token operator">:</span> <span class="token string">&apos;json&apos;</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">&apos;category&apos;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http
      <span class="token punctuation">.</span><span class="token generic-function"><span class="token function">post</span><span class="token generic class-name"><span class="token operator">&lt;</span>PostResponseData<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
        url<span class="token punctuation">,</span>
        postData
      <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>
        <span class="token function">switchMap</span><span class="token punctuation">(</span>data <span class="token operator">=&gt;</span> <span class="token function">from</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">map</span><span class="token punctuation">(</span>data <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword keyword-return">return</span> <span class="token punctuation">{</span> service<span class="token operator">:</span> data<span class="token punctuation">.</span>&#x670D;&#x52D9;&#x5206;&#x985E;<span class="token punctuation">,</span> count<span class="token operator">:</span> data<span class="token punctuation">.</span>&#x700F;&#x89BD;&#x6B21;&#x6578;<span class="token punctuation">,</span> totalCount<span class="token operator">:</span> data<span class="token punctuation">.</span>&#x8CC7;&#x6599;&#x96C6;&#x7E3D;&#x6578; <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>
        responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>dataGov <span class="token operator">=</span> responseData<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        err <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x932F;&#x8AA4;&#x8A0A;&#x606F;&apos;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x8A02;&#x95B1;&#x5B8C;&#x6210;&apos;</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">getIdentifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://data.tycg.gov.tw/api/v1/rest/dataset/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>identifier<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span>TycgIdentifier<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>tycgIdentifier<span class="token punctuation">.</span><span class="token function">patchValue</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">getIdentifierList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://data.tycg.gov.tw/api/v1/rest/format/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>format<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>identifierList <span class="token operator">=</span> responseData<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</pre><ul>
<li>tycgIdentifier.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-export">export</span> <span class="token keyword keyword-interface">interface</span> <span class="token class-name">TycgIdentifier</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**&#x66F4;&#x65B0;&#x983B;&#x7387; */</span>
  accrualPeriodicity<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  categoryCode<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** &#x8CC7;&#x6599;&#x96C6;&#x63CF;&#x8FF0; */</span>
  description<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** &#x6A94;&#x6848;&#x4E0B;&#x8F09; */</span>
  distribution<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** &#x4E3B;&#x8981;&#x6B04;&#x4F4D;&#x8AAA;&#x660E; */</span>
  fieldDescription<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** &#x8CC7;&#x6599;&#x96C6;ID */</span>
  identifierID<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  landingPage<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** &#x8A9E;&#x8A00;*/</span>
  language<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** &#x6700;&#x5F8C;&#x66F4;&#x65B0;&#x6642;&#x9593;*/</span>
  modified<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  numberOfData<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** &#x63D0;&#x4F9B;&#x6A5F;&#x95DC;*/</span>
  organization<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** &#x63D0;&#x4F9B;&#x6A5F;&#x95DC;&#x806F;&#x7D61;&#x4EBA;&#x96FB;&#x5B50;&#x90F5;&#x4EF6;*/</span>
  organizationContactEmail<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** &#x63D0;&#x4F9B;&#x6A5F;&#x95DC;&#x806F;&#x7D61;&#x4EBA;*/</span>
  organizationContactName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** &#x63D0;&#x4F9B;&#x6A5F;&#x95DC;&#x806F;&#x7D61;&#x4EBA;&#x96FB;&#x8A71;*/</span>
  organizationContactPhone<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** &#x8CC7;&#x6599;&#x96C6;&#x7A7A;&#x9593;&#x7BC4;&#x570D;*/</span>
  spatial<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  temporalCoverageFrom<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  temporalCoverageTo<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** &#x6A19;&#x984C;*/</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** &#x8CC7;&#x6599;&#x96C6;&#x985E;&#x578B;*/</span>
  type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


</pre><p>form &#x7684;&#x61C9;&#x7528;&#x6BD4;&#x8F03;&#x8907;&#x96DC; &#xFF0C;&#x7531;&#x65BC; API &#x8A2D;&#x8A08;&#x7684;&#x95DC;&#x4FC2;&#xFF0C;&#x503C;&#x4E26;&#x4E0D;&#x6703;&#x50CF;&#x4E0A;&#x4E00;&#x500B; table &#x4E00;&#x6B21;&#x5C31;&#x53EF;&#x4EE5;&#x5B8C;&#x6210;&#x4E86;&#xFF0C;&#x5FC5;&#x9808;&#x8981;&#x4E00;&#x6B21;&#x4E00;&#x6B21;&#x7684;&#x6253; API &#x624D;&#x53EF;&#x4EE5;&#x62FF;&#x5230;&#x76F8;&#x5C0D;&#x61C9;&#x7684;&#x503C;&#x3002;<br>
&#x90A3;&#x9EBC;&#x56E0;&#x70BA;&#x8981;&#x8DDF; form &#x505A;&#x7D50;&#x5408;&#xFF0C;&#x4E00;&#x958B;&#x59CB;&#x5C31;&#x5728; <code>ngOnInit</code> &#x5EFA;&#x7ACB; form &#x8868;&#x55AE;&#xFF0C;&#x4E26;&#x5728;&#x9019;&#x908A;&#x5148;&#x767C;&#x9001;&#x4E00;&#x6B21; API <code>getFormatList()</code> &#x62FF;&#x56DE;&#x4E0B;&#x62C9;&#x9078;&#x55AE;&#x7684;&#x503C;&#x3002;<br>
&#x5229;&#x7528;&#x4E8B;&#x4EF6;&#x7D81;&#x5B9A;&#x7684;&#x65B9;&#x5F0F; <code>(change)=&quot;getIdentifierList()&quot;</code> &#x7576;&#x6709;&#x4EBA;&#x9078;&#x64C7;&#x8CC7;&#x6599;&#x985E;&#x578B;&#x5F8C;&#xFF0C;&#x6703;&#x89F8;&#x767C;&#x5230; <code>getIdentifierList()</code> &#x518D;&#x6B21;&#x767C;&#x9001; API &#xFF0C;&#x62FF;&#x56DE;&#x8CC7;&#x6599;&#x985E;&#x578B;&#x6240;&#x5C6C;&#x7684;&#x8CC7;&#x6599;&#x96C6;&#x6E05;&#x55AE;&#x3002;<br>
&#x540C;&#x6A23;&#x4F7F;&#x7528;&#x4E8B;&#x4EF6;&#x7D81;&#x5B9A;<code>(click)=&quot;getIdentifier()&quot;</code> &#x628A;&#x9078;&#x64C7;&#x7684;&#x8CC7;&#x6599;&#x96C6;&#x767C;&#x9001;&#x51FA;&#x53BB;&#x62FF;&#x56DE;&#x8CC7;&#x6599;&#x96C6;&#x5167;&#x5BB9;&#xFF0C;&#x4E26;&#x5728;&#x8A72;&#x65B9;&#x6CD5;&#x5167;&#x628A;&#x503C;&#x653E;&#x9032;  form &#x8868;&#x55AE;&#x5167;&#x3002;</p>
<h4 class="mume-header" id="%E5%B0%87%E7%99%BC%E9%80%81%E8%AB%8B%E6%B1%82%E6%94%BE%E6%96%BC-service" ebook-toc-level-4 heading="&amp;#x5C07;&amp;#x767C;&amp;#x9001;&amp;#x8ACB;&amp;#x6C42;&amp;#x653E;&amp;#x65BC; Service">&#x5C07;&#x767C;&#x9001;&#x8ACB;&#x6C42;&#x653E;&#x65BC; Service</h4>

<p>&#x56DE;&#x9867;&#x4E00;&#x4E0B; Service &#xFF0C; Service &#x76EE;&#x7684;&#x662F;&#x70BA;&#x4E86;&#x628A;&#x908F;&#x8F2F;&#x8DDF;&#x8CC7;&#x6599;&#x91CD;&#x8907;&#x7684;&#x90E8;&#x4EFD;&#x62BD;&#x51FA;&#x4F86;&#xFF0C;&#x767C;&#x9001; API &#x7684;&#x65B9;&#x6CD5;&#x662F;&#x5177;&#x6709;&#x8907;&#x7528;&#x6027;&#x7684;&#xFF0C;&#x800C;&#x4E14;&#x70BA;&#x4E86;&#x65B9;&#x4FBF;&#x7BA1;&#x7406;&#xFF0C;&#x6703;&#x7FD2;&#x6163;&#x5C07; HttpClient &#x6CE8;&#x5165;&#x5728; Service &#x5167;&#xFF0C;&#x4E26;&#x900F;&#x904E;&#x8A72; Service &#x7BA1;&#x7406;&#x6240;&#x6709;&#x7684; API &#x65B9;&#x6CD5;&#x3002;<br>
&#x4E00;&#x958B;&#x59CB;&#x5148;&#x5EFA;&#x7ACB;&#x4E00;&#x500B;&#x65B0;&#x7684; Service <code>ng g s service/http</code>&#xFF0C;&#x9019;&#x500B;&#x90E8;&#x5206;&#x8981;&#x7279;&#x5225;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x70BA;&#x4E86;&#x8907;&#x7528;&#x6027;&#x6709;&#x53EF;&#x80FD;&#x9019;&#x7B46;&#x8CC7;&#x6599;&#x5728;&#x5176;&#x5B83;&#x7684; Component &#x4E5F;&#x9700;&#x8981;&#x7528;&#x5230;&#xFF0C;&#x56E0;&#x6B64;&#x60F3;&#x8981;&#x62FF;&#x5230;&#x6B64;&#x5F8C;&#x7AEF;&#x8CC7;&#x6599;&#x7684; Component &#x518D;&#x53BB;&#x6CE8;&#x5165;&#x76F8;&#x5C0D;&#x61C9;&#x7684; Service &#x5373;&#x53EF;&#x3002;&#x7136;&#x800C; <code>subscribe(..)</code> &#x9084;&#x662F;&#x653E;&#x5728; Component &#x4E2D;&#xFF0C;&#x539F;&#x56E0;&#x5728;&#x65BC;&#x96D6;&#x7136;&#x5404;&#x500B; Component &#x53EF;&#x80FD;&#x90FD;&#x9700;&#x8981;&#x767C;&#x9001;&#x8ACB;&#x6C42;&#x53BB;&#x53D6;&#x5F97;&#x8CC7;&#x6599;&#xFF0C;&#x7136;&#x800C;&#x8655;&#x7406;&#x8CC7;&#x6599;&#x7684;&#x65B9;&#x5F0F;&#x53EF;&#x80FD;&#x4E26;&#x4E0D;&#x76F8;&#x540C;&#xFF0C;&#x56E0;&#x6B64;&#x5C31;&#x7531; Component &#x53BB;&#x81EA;&#x884C;&#x8A02;&#x95B1;&#x767C;&#x9001;&#x8ACB;&#x6C42;&#x5F8C;&#x5F97;&#x5230;&#x7684; Observable&#x3002;</p>
<pre data-role="codeBlock" data-info class="language-"><code>|--app
    |--app.component.ts 
    |--service
      |--http.service.ts // &#x65B0;&#x589E;
</code></pre><ul>
<li>app.component.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> OnInit <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormControl<span class="token punctuation">,</span> FormGroup <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/forms&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> PostResponseData <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./interfaces/postResponseData&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpService <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./service/http.service&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  selector<span class="token operator">:</span> <span class="token string">&apos;app-root&apos;</span><span class="token punctuation">,</span>
  templateUrl<span class="token operator">:</span> <span class="token string">&apos;./app.component.html&apos;</span><span class="token punctuation">,</span>
  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&apos;./app.component.css&apos;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">AppComponent</span> <span class="token keyword keyword-implements">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">{</span>

  dataGov<span class="token operator">:</span> PostResponseData<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  formatList<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  identifierList<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  tycgIdentifier<span class="token operator">:</span> FormGroup<span class="token punctuation">;</span>

  format <span class="token operator">=</span> <span class="token string">&apos;&apos;</span><span class="token punctuation">;</span>

  identifier <span class="token operator">=</span> <span class="token string">&apos;&apos;</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword keyword-private">private</span> http<span class="token operator">:</span> HttpService<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>


  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword keyword-void">void</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span><span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>tycgIdentifier <span class="token operator">=</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormGroup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      type<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      description<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      organization<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>formatList <span class="token operator">=</span> responseData<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
      err <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x932F;&#x8AA4;&#x8A0A;&#x606F;&apos;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x8A02;&#x95B1;&#x5B8C;&#x6210;&apos;</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">dataGovSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http
      <span class="token punctuation">.</span><span class="token function">dataGovSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>
        responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>dataGov <span class="token operator">=</span> responseData<span class="token punctuation">;</span>
          <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        err <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x932F;&#x8AA4;&#x8A0A;&#x606F;&apos;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x8A02;&#x95B1;&#x5B8C;&#x6210;&apos;</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">getIdentifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">getIdentifier</span><span class="token punctuation">(</span><span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>identifier<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>tycgIdentifier<span class="token punctuation">.</span><span class="token function">patchValue</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">getIdentifierList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">getIdentifierList</span><span class="token punctuation">(</span><span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>format<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>identifierList <span class="token operator">=</span> responseData<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</pre><ul>
<li>http.service.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpClient <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/common/http&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Injectable <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> from <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;rxjs&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> map<span class="token punctuation">,</span> switchMap<span class="token punctuation">,</span> toArray <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;rxjs/operators&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> PostResponseData <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;../interfaces/postResponseData&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> TycgIdentifier <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;../interfaces/tycgIdentifier&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Injectable</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  providedIn<span class="token operator">:</span> <span class="token string">&apos;root&apos;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">HttpService</span> <span class="token punctuation">{</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword keyword-private">private</span> http<span class="token operator">:</span> HttpClient<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>


  <span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token string">&apos;https://data.tycg.gov.tw/api/v1/rest/format&apos;</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-return">return</span> <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">dataGovSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token string">&apos;https://data.gov.tw/api/front/statistics/export&apos;</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-const">const</span> postData <span class="token operator">=</span> <span class="token punctuation">{</span> format<span class="token operator">:</span> <span class="token string">&apos;json&apos;</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">&apos;category&apos;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-return">return</span> <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http
      <span class="token punctuation">.</span><span class="token generic-function"><span class="token function">post</span><span class="token generic class-name"><span class="token operator">&lt;</span>PostResponseData<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
        url<span class="token punctuation">,</span>
        postData
      <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>
        <span class="token function">switchMap</span><span class="token punctuation">(</span>data <span class="token operator">=&gt;</span> <span class="token function">from</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">map</span><span class="token punctuation">(</span>data <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword keyword-return">return</span> <span class="token punctuation">{</span> service<span class="token operator">:</span> data<span class="token punctuation">.</span>&#x670D;&#x52D9;&#x5206;&#x985E;<span class="token punctuation">,</span> count<span class="token operator">:</span> data<span class="token punctuation">.</span>&#x700F;&#x89BD;&#x6B21;&#x6578;<span class="token punctuation">,</span> totalCount<span class="token operator">:</span> data<span class="token punctuation">.</span>&#x8CC7;&#x6599;&#x96C6;&#x7E3D;&#x6578; <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">getIdentifier</span><span class="token punctuation">(</span>identifier<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://data.tycg.gov.tw/api/v1/rest/dataset/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>identifier<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>
    <span class="token keyword keyword-return">return</span> <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span>TycgIdentifier<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">getIdentifierList</span><span class="token punctuation">(</span>format<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://data.tycg.gov.tw/api/v1/rest/format/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>format<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>
    <span class="token keyword keyword-return">return</span> <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</pre><hr>
<h2 class="mume-header" id="%E8%A3%9C%E5%85%85" ebook-toc-level-2 heading="&amp;#x88DC;&amp;#x5145;">&#x88DC;&#x5145;</h2>

<h3 class="mume-header" id="subject" ebook-toc-level-3 heading="Subject">Subject</h3>

<p>&#x5728;&#x4ECB;&#x7D39; <strong>Observable &#x548C; RxJS</strong> &#x6642;&#x6709;&#x63D0;&#x5230;&#xFF0C;RxJS &#x4E0D;&#x50C5;&#x50C5;&#x53EA;&#x6709;&#x4E0A;&#x9762;&#x63D0;&#x5230;&#x7684;&#xFF0C;&#x9084;&#x5305;&#x542B;&#x5F88;&#x591A;&#x9805;&#x76EE;&#xFF0C;&#x9019;&#x908A;&#x91DD;&#x5C0D; <code>Subject</code> &#x505A;&#x5C0F;&#x5C0F;&#x7684;&#x4ECB;&#x7D39;<br>
<code>Subject</code> &#x7269;&#x4EF6;&#x5177;&#x5099;&#x4E86;&#x5169;&#x500B;&#x89D2;&#x8272;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x662F; <code>Observer (&#x89C0;&#x5BDF;&#x8005;)</code> &#x4E5F;&#x53EF;&#x4EE5;&#x662F; <code>Observable (&#x53EF;&#x89C0;&#x5BDF;&#x5C0D;&#x8C61;)</code>&#xFF0C;&#x901A;&#x5E38;&#x7528;&#x65BC;&#x4E00;&#x7A2E;&#x63A8;&#x64AD;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x5B83;&#x6703;&#x8A02;&#x95B1; <code>Observable</code> &#x4E26;&#x8B93;&#x5176;&#x4ED6;&#x4EBA;&#x4F86;&#x8A02;&#x95B1;&#x5B83;&#xFF0C;&#x7D71;&#x4E00;&#x5C07;&#x6B64;&#x8A0A;&#x606F;&#x63A8;&#x9001;&#x51FA;&#x53BB;&#x3002;</p>
<p>&#x7C21;&#x55AE;&#x7684;&#x7BC4;&#x4F8B;&#x7A0B;&#x5F0F;&#x78BC;&#xFF1A;<a href="https://rxjs-vzbefc.stackblitz.io">https://rxjs-vzbefc.stackblitz.io</a>(&#x57F7;&#x884C;&#x7D50;&#x679C;&#x53C3;&#x8003;&#x9023;&#x7D50;)<br>
&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x756B;&#x9762; button &#x53CA; F12 &#x7684; console &#x8A0A;&#x606F;&#x4F86;&#x78BA;&#x8A8D;&#x7D50;&#x679C;&#x3002;</p>
<p>&#x7E3D;&#x5171;&#x5206;&#x6210;&#x56DB;&#x500B;&#x985E;&#x578B;&#xFF1A;</p>
<ol>
<li>Subject</li>
</ol>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-const">const</span> subject <span class="token operator">=</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">Subject<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
subject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#x767C;&#x9001;&#x4E8B;&#x4EF6;1</span>
subject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#x767C;&#x9001;&#x4E8B;&#x4EF6;2</span>
<span class="token keyword keyword-const">const</span> observerA <span class="token operator">=</span> subject<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">observerA: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>v<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword keyword-const">const</span> observerB <span class="token operator">=</span> subject<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">-----observerB: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>v<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
subject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#x767C;&#x9001;&#x4E8B;&#x4EF6;3</span>
observerA<span class="token punctuation">.</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#x53D6;&#x6D88;&#x8A02;&#x95B1;</span>
subject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#x767C;&#x9001;&#x4E8B;&#x4EF6;4</span>
</pre><p>&#x4E0A;&#x9762;&#x662F; Subject &#x7684;&#x57F7;&#x884C;&#x5167;&#x5BB9;&#xFF0C;<code>const subject = new Subject&lt;number&gt;();</code> Subject &#x5F8C;&#x9762;&#x4E00;&#x6A23;&#x53EF;&#x4EE5;&#x5B9A;&#x7FA9;&#x8CC7;&#x6599;&#x578B;&#x5225;&#x3002;&#x63A5;&#x4E0B;&#x4F86;&#x5229;&#x7528; <code>next(...)</code> &#x767C;&#x9001;&#x5167;&#x5BB9;&#xFF0C;&#x5F9E; F12 &#x7684;&#x7D50;&#x679C;&#x767C;&#x73FE;&#x6C92;&#x6709;&#x5370;&#x51FA; 1 &#x548C; 2 &#xFF0C;&#x56E0;&#x70BA;&#x9019;&#x5169;&#x500B;&#x90FD;&#x5728;&#x8A02;&#x95B1;&#x4E4B;&#x524D;&#xFF0C;&#x6240;&#x4EE5;&#x7121;&#x6CD5;&#x5370;&#x51FA;&#x8CC7;&#x6599;&#xFF0C;<code>subject.next(4);</code>&#x4E5F;&#x53EA;&#x6709;&#x7372;&#x5F97;&#x8CC7;&#x6599;&#x3002;&#x9019;&#x662F;&#x56E0;&#x70BA;&#x524D;&#x9762;&#x5DF2;&#x7D93; <code>observerA.unsubscribe()</code> &#x4E86;&#x3002;</p>
<pre data-role="codeBlock" data-info class="language-"><code>observerA: 3
-----observerB: 3
-----observerB: 4
</code></pre><ol start="2">
<li>ReplaySubject</li>
</ol>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-const">const</span> replaySubject <span class="token operator">=</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">ReplaySubject<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
replaySubject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#x767C;&#x9001;&#x4E8B;&#x4EF6;1</span>
<span class="token keyword keyword-const">const</span> observerA <span class="token operator">=</span> replaySubject<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">observerA: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>v<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
replaySubject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#x767C;&#x9001;&#x4E8B;&#x4EF6;2</span>
<span class="token keyword keyword-const">const</span> observerB <span class="token operator">=</span> replaySubject<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">-----observerB: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>v<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
replaySubject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#x767C;&#x9001;&#x4E8B;&#x4EF6;3</span>
observerA<span class="token punctuation">.</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#x53D6;&#x6D88;&#x8A02;&#x95B1;</span>
replaySubject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#x767C;&#x9001;&#x4E8B;&#x4EF6;4</span>
</pre><p>ReplaySubject &#x7E7C;&#x627F;&#x4E86; Subject &#xFF0C;&#x4F46;&#x53C8;&#x591A;&#x52A0;&#x4E86;&#x56DE;&#x64A5;&#x7684;&#x529F;&#x80FD;&#xFF0C;<code>new ReplaySubject&lt;number&gt;(2)</code> &#x5F8C;&#x9762;&#x653E;&#x6709;&#x4E00;&#x500B;&#x53C3;&#x6578; (number)&#xFF0C;&#x4EE3;&#x8868;&#x56DE;&#x64A5;&#x524D;&#x5E7E;&#x500B;&#x5167;&#x5BB9;&#xFF0C;observerA &#x6642;&#xFF0C;&#x524D;&#x9762;&#x53EA;&#x6709; <code>next(1)</code> &#xFF0C;&#x6240;&#x4EE5;&#x53EA;&#x6709;&#x5370;&#x51FA;&#x4E00;&#x6B21;&#xFF0C;<code>next(2)</code>&#x56E0;&#x70BA;&#x8A02;&#x95B1;&#x4E86;&#x6240;&#x4EE5;&#x53C8;&#x518D;&#x6B21;&#x5370;&#x51FA;&#xFF0C;&#x9019;&#x6642; observerB &#x8A02;&#x95B1;&#x56E0;&#x70BA;&#x6703;&#x56DE;&#x64A5;&#x524D;&#x5169;&#x6B21;&#x7684;&#x5167;&#x5BB9;&#xFF0C;&#x6240;&#x4EE5;&#x6703;&#x540C;&#x6642;&#x5370;&#x51FA; 1 &#x548C; 2 &#x3002;</p>
<pre data-role="codeBlock" data-info class="language-"><code>observerA: 1
observerA: 2
-----observerB: 1
-----observerB: 2
observerA: 3
-----observerB: 3
-----observerB: 4
</code></pre><ol start="3">
<li>BehaviorSubject</li>
</ol>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-const">const</span> behaviorSubject <span class="token operator">=</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">BehaviorSubject<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token number">99999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword keyword-const">const</span> observerA <span class="token operator">=</span> behaviorSubject<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">observerA: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>v<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
behaviorSubject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#x767C;&#x9001;&#x4E8B;&#x4EF6;1</span>
behaviorSubject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#x767C;&#x9001;&#x4E8B;&#x4EF6;2</span>
<span class="token keyword keyword-const">const</span> observerB <span class="token operator">=</span> behaviorSubject<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">-----observerB: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>v<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
behaviorSubject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#x767C;&#x9001;&#x4E8B;&#x4EF6;3</span>
observerA<span class="token punctuation">.</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#x53D6;&#x6D88;&#x8A02;&#x95B1;</span>
behaviorSubject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#x767C;&#x9001;&#x4E8B;&#x4EF6;4</span>
</pre><p>BehaviorSubject &#x548C; ReplaySubject &#x540C;&#x6A23;&#x6709;&#x4E00;&#x500B;&#x53C3;&#x6578;&#xFF0C;&#x4F46; BehaviorSubject &#x4EE3;&#x8868;&#x7684;&#x662F;<strong>&#x9810;&#x8A2D;&#x503C;</strong>&#xFF0C;&#x5F9E;&#x7BC4;&#x4F8B;&#x7A0B;&#x5F0F;&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C; observerA &#x5728;&#x8A02;&#x95B1;&#x6642;&#xFF0C;&#x5370;&#x51FA;&#x7684;&#x503C;&#x662F;&#x9810;&#x8A2D;&#x503C; 9999 &#xFF0C;observerB &#x8A02;&#x95B1;&#x6642;&#xFF0C;&#x5247;&#x662F;&#x5370;&#x51FA; 2 &#x3002;</p>
<pre data-role="codeBlock" data-info class="language-"><code>observerA: 99999
observerA: 1
observerA: 2
-----observerB: 2
observerA: 3
-----observerB: 3
-----observerB: 4
</code></pre><ol start="4">
<li>AsyncSubject</li>
</ol>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"> <span class="token keyword keyword-const">const</span> asyncSubject <span class="token operator">=</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">AsyncSubject<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword keyword-const">const</span> observerA <span class="token operator">=</span> asyncSubject<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">observerA: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>v<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 asyncSubject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#x767C;&#x9001;&#x4E8B;&#x4EF6;1</span>
 asyncSubject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#x767C;&#x9001;&#x4E8B;&#x4EF6;2</span>
 <span class="token keyword keyword-const">const</span> observerB <span class="token operator">=</span> asyncSubject<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">-----observerB: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>v<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 asyncSubject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#x767C;&#x9001;&#x4E8B;&#x4EF6;3</span>
 observerA<span class="token punctuation">.</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#x53D6;&#x6D88;&#x8A02;&#x95B1;</span>
 asyncSubject<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
 asyncSubject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#x767C;&#x9001;&#x4E8B;&#x4EF6;4</span>
</pre><p>AsyncSubject &#x548C;&#x4E0A;&#x9762;&#x5169;&#x500B;&#x6BD4;&#x8F03;&#x4E0D;&#x540C;&#xFF0C;&#x524D;&#x5169;&#x500B;&#x4E00;&#x500B;&#x662F;&#x53D6;&#x5F97;&#x56DE;&#x64A5;&#x7684;&#x503C;&#xFF0C;&#x4E00;&#x500B;&#x662F;&#x6700;&#x65B0;&#x7684;&#x503C;&#xFF0C;&#x4F46; AsyncSubject &#x662F;&#x5B8C;&#x6210;&#x5F8C;&#x6700;&#x5F8C; <code>next(...)</code> &#x7684;&#x503C;&#x3002;&#x7BC4;&#x4F8B;&#x5167;&#xFF0C;observerA &#x548C; observerB &#x90FD;&#x6C92;&#x6709;&#x5370;&#x51FA; 1 &#x53CA; 2&#xFF0C;&#x53EA;&#x6709;&#x5728;&#x6700;&#x5F8C; <code>complete()</code> &#x624D;&#x5370;&#x51FA; 3 &#xFF0C;&#x96D6;&#x7136;&#x6700;&#x5F8C;&#x53EA;&#x6709; <code>observerA.unsubscribe()</code> &#xFF0C;&#x4F46;&#x662F; <code>asyncSubject.complete();</code> &#xFF0C;&#x4E5F;&#x7121;&#x6CD5;&#x50CF;&#x4E0A;&#x9762;&#x5169;&#x500B;&#x7BC4;&#x4F8B;&#x53EF;&#x4EE5;&#x5370;&#x51FA; 4 &#x3002;</p>
<pre data-role="codeBlock" data-info class="language-"><code>-----observerB: 3
</code></pre><h2 class="mume-header" id="%E7%B8%BD%E7%B5%90" ebook-toc-level-2 heading="&amp;#x7E3D;&amp;#x7D50;">&#x7E3D;&#x7D50;</h2>

<ul>
<li>HTTP &#x57FA;&#x672C;&#x89C0;&#x5FF5;</li>
<li>&#x57FA;&#x672C;
<ul>
<li>&#x64CD;&#x4F5C; GET&#x3001;POST method</li>
</ul>
</li>
<li>&#x9032;&#x968E;
<ul>
<li>RxJS</li>
<li><code>pipe(..)</code></li>
<li>HttpClient &#x4F7F;&#x7528;&#x81EA;&#x8A02;&#x7FA9;&#x7269;&#x4EF6;</li>
</ul>
</li>
<li>&#x61C9;&#x7528;
<ul>
<li>HttpClient &#x8207; table &#x53CA; form &#x7D50;&#x5408;</li>
<li>HttpClient &#x8207; Service &#x7D50;&#x5408;</li>
</ul>
</li>
<li>&#x88DC;&#x5145;
<ul>
<li><code>Subject</code></li>
</ul>
</li>
</ul>
</div></body></html>
    </div>
  </body>
</html>
