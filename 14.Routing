
<!DOCTYPE html>
<html>
  <head>
    <title>no title</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
    .markdown-preview{width:100%;height:100%;box-sizing:border-box}.markdown-preview .pagebreak,.markdown-preview .newpage{page-break-before:always}.markdown-preview pre.line-numbers{position:relative;padding-left:3.8em;counter-reset:linenumber}.markdown-preview pre.line-numbers>code{position:relative}.markdown-preview pre.line-numbers .line-numbers-rows{position:absolute;pointer-events:none;top:1em;font-size:100%;left:0;width:3em;letter-spacing:-1px;border-right:1px solid #999;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.markdown-preview pre.line-numbers .line-numbers-rows>span{pointer-events:none;display:block;counter-increment:linenumber}.markdown-preview pre.line-numbers .line-numbers-rows>span:before{content:counter(linenumber);color:#999;display:block;padding-right:.8em;text-align:right}.markdown-preview .mathjax-exps .MathJax_Display{text-align:center !important}.markdown-preview:not([for="preview"]) .code-chunk .btn-group{display:none}.markdown-preview:not([for="preview"]) .code-chunk .status{display:none}.markdown-preview:not([for="preview"]) .code-chunk .output-div{margin-bottom:16px}.scrollbar-style::-webkit-scrollbar{width:8px}.scrollbar-style::-webkit-scrollbar-track{border-radius:10px;background-color:transparent}.scrollbar-style::-webkit-scrollbar-thumb{border-radius:5px;background-color:rgba(150,150,150,0.66);border:4px solid rgba(150,150,150,0.66);background-clip:content-box}html body[for="html-export"]:not([data-presentation-mode]){position:relative;width:100%;height:100%;top:0;left:0;margin:0;padding:0;overflow:auto}html body[for="html-export"]:not([data-presentation-mode]) .markdown-preview{position:relative;top:0}@media screen and (min-width:914px){html body[for="html-export"]:not([data-presentation-mode]) .markdown-preview{padding:2em calc(50% - 457px + 2em)}}@media screen and (max-width:914px){html body[for="html-export"]:not([data-presentation-mode]) .markdown-preview{padding:2em}}@media screen and (max-width:450px){html body[for="html-export"]:not([data-presentation-mode]) .markdown-preview{font-size:14px !important;padding:1em}}@media print{html body[for="html-export"]:not([data-presentation-mode]) #sidebar-toc-btn{display:none}}html body[for="html-export"]:not([data-presentation-mode]) #sidebar-toc-btn{position:fixed;bottom:8px;left:8px;font-size:28px;cursor:pointer;color:inherit;z-index:99;width:32px;text-align:center;opacity:.4}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] #sidebar-toc-btn{opacity:1}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc{position:fixed;top:0;left:0;width:300px;height:100%;padding:32px 0 48px 0;font-size:14px;box-shadow:0 0 4px rgba(150,150,150,0.33);box-sizing:border-box;overflow:auto;background-color:inherit}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc::-webkit-scrollbar{width:8px}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc::-webkit-scrollbar-track{border-radius:10px;background-color:transparent}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc::-webkit-scrollbar-thumb{border-radius:5px;background-color:rgba(150,150,150,0.66);border:4px solid rgba(150,150,150,0.66);background-clip:content-box}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc a{text-decoration:none}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc ul{padding:0 1.6em;margin-top:.8em}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc li{margin-bottom:.8em}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc ul{list-style-type:none}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .markdown-preview{left:300px;width:calc(100% -  300px);padding:2em calc(50% - 457px -  150px);margin:0;box-sizing:border-box}@media screen and (max-width:1274px){html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .markdown-preview{padding:2em}}@media screen and (max-width:450px){html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .markdown-preview{width:100%}}html body[for="html-export"]:not([data-presentation-mode]):not([html-show-sidebar-toc]) .markdown-preview{left:50%;transform:translateX(-50%)}html body[for="html-export"]:not([data-presentation-mode]):not([html-show-sidebar-toc]) .md-sidebar-toc{display:none}/**
 * prism.js Github theme based on GitHub's theme.
 * @author Sam Clarke
 */
code[class*="language-"],
pre[class*="language-"] {
  color: #333;
  background: none;
  font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
  line-height: 1.4;

  -moz-tab-size: 8;
  -o-tab-size: 8;
  tab-size: 8;

  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
}

/* Code blocks */
pre[class*="language-"] {
  padding: .8em;
  overflow: auto;
  /* border: 1px solid #ddd; */
  border-radius: 3px;
  /* background: #fff; */
  background: #f5f5f5;
}

/* Inline code */
:not(pre) > code[class*="language-"] {
  padding: .1em;
  border-radius: .3em;
  white-space: normal;
  background: #f5f5f5;
}

.token.comment,
.token.blockquote {
  color: #969896;
}

.token.cdata {
  color: #183691;
}

.token.doctype,
.token.punctuation,
.token.variable,
.token.macro.property {
  color: #333;
}

.token.operator,
.token.important,
.token.keyword,
.token.rule,
.token.builtin {
  color: #a71d5d;
}

.token.string,
.token.url,
.token.regex,
.token.attr-value {
  color: #183691;
}

.token.property,
.token.number,
.token.boolean,
.token.entity,
.token.atrule,
.token.constant,
.token.symbol,
.token.command,
.token.code {
  color: #0086b3;
}

.token.tag,
.token.selector,
.token.prolog {
  color: #63a35c;
}

.token.function,
.token.namespace,
.token.pseudo-element,
.token.class,
.token.class-name,
.token.pseudo-class,
.token.id,
.token.url-reference .token.variable,
.token.attr-name {
  color: #795da3;
}

.token.entity {
  cursor: help;
}

.token.title,
.token.title .token.punctuation {
  font-weight: bold;
  color: #1d3e81;
}

.token.list {
  color: #ed6a43;
}

.token.inserted {
  background-color: #eaffea;
  color: #55a532;
}

.token.deleted {
  background-color: #ffecec;
  color: #bd2c00;
}

.token.bold {
  font-weight: bold;
}

.token.italic {
  font-style: italic;
}


/* JSON */
.language-json .token.property {
  color: #183691;
}

.language-markup .token.tag .token.punctuation {
  color: #333;
}

/* CSS */
code.language-css,
.language-css .token.function {
  color: #0086b3;
}

/* YAML */
.language-yaml .token.atrule {
  color: #63a35c;
}

code.language-yaml {
  color: #183691;
}

/* Ruby */
.language-ruby .token.function {
  color: #333;
}

/* Markdown */
.language-markdown .token.url {
  color: #795da3;
}

/* Makefile */
.language-makefile .token.symbol {
  color: #795da3;
}

.language-makefile .token.variable {
  color: #183691;
}

.language-makefile .token.builtin {
  color: #0086b3;
}

/* Bash */
.language-bash .token.keyword {
  color: #0086b3;
}

/* highlight */
pre[data-line] {
  position: relative;
  padding: 1em 0 1em 3em;
}
pre[data-line] .line-highlight-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  background-color: transparent;
  display: block;
  width: 100%;
}

pre[data-line] .line-highlight {
  position: absolute;
  left: 0;
  right: 0;
  padding: inherit 0;
  margin-top: 1em;
  background: hsla(24, 20%, 50%,.08);
  background: linear-gradient(to right, hsla(24, 20%, 50%,.1) 70%, hsla(24, 20%, 50%,0));
  pointer-events: none;
  line-height: inherit;
  white-space: pre;
}

pre[data-line] .line-highlight:before, 
pre[data-line] .line-highlight[data-end]:after {
  content: attr(data-start);
  position: absolute;
  top: .4em;
  left: .6em;
  min-width: 1em;
  padding: 0 .5em;
  background-color: hsla(24, 20%, 50%,.4);
  color: hsl(24, 20%, 95%);
  font: bold 65%/1.5 sans-serif;
  text-align: center;
  vertical-align: .3em;
  border-radius: 999px;
  text-shadow: none;
  box-shadow: 0 1px white;
}

pre[data-line] .line-highlight[data-end]:after {
  content: attr(data-end);
  top: auto;
  bottom: .4em;
}.emoji {
  height: 0.8em;
}html body{font-family:"Helvetica Neue",Helvetica,"Segoe UI",Arial,freesans,sans-serif;font-size:16px;line-height:1.6;color:#333;background-color:#fff;overflow:initial;box-sizing:border-box;word-wrap:break-word}html body>:first-child{margin-top:0}html body h1,html body h2,html body h3,html body h4,html body h5,html body h6{line-height:1.2;margin-top:1em;margin-bottom:16px;color:#000}html body h1{font-size:2.25em;font-weight:300;padding-bottom:.3em}html body h2{font-size:1.75em;font-weight:400;padding-bottom:.3em}html body h3{font-size:1.5em;font-weight:500}html body h4{font-size:1.25em;font-weight:600}html body h5{font-size:1.1em;font-weight:600}html body h6{font-size:1em;font-weight:600}html body h1,html body h2,html body h3,html body h4,html body h5{font-weight:600}html body h5{font-size:1em}html body h6{color:#5c5c5c}html body strong{color:#000}html body del{color:#5c5c5c}html body a:not([href]){color:inherit;text-decoration:none}html body a{color:#08c;text-decoration:none}html body a:hover{color:#00a3f5;text-decoration:none}html body img{max-width:100%}html body>p{margin-top:0;margin-bottom:16px;word-wrap:break-word}html body>ul,html body>ol{margin-bottom:16px}html body ul,html body ol{padding-left:2em}html body ul.no-list,html body ol.no-list{padding:0;list-style-type:none}html body ul ul,html body ul ol,html body ol ol,html body ol ul{margin-top:0;margin-bottom:0}html body li{margin-bottom:0}html body li.task-list-item{list-style:none}html body li>p{margin-top:0;margin-bottom:0}html body .task-list-item-checkbox{margin:0 .2em .25em -1.8em;vertical-align:middle}html body .task-list-item-checkbox:hover{cursor:pointer}html body blockquote{margin:16px 0;font-size:inherit;padding:0 15px;color:#5c5c5c;background-color:#f0f0f0;border-left:4px solid #d6d6d6}html body blockquote>:first-child{margin-top:0}html body blockquote>:last-child{margin-bottom:0}html body hr{height:4px;margin:32px 0;background-color:#d6d6d6;border:0 none}html body table{margin:10px 0 15px 0;border-collapse:collapse;border-spacing:0;display:block;width:100%;overflow:auto;word-break:normal;word-break:keep-all}html body table th{font-weight:bold;color:#000}html body table td,html body table th{border:1px solid #d6d6d6;padding:6px 13px}html body dl{padding:0}html body dl dt{padding:0;margin-top:16px;font-size:1em;font-style:italic;font-weight:bold}html body dl dd{padding:0 16px;margin-bottom:16px}html body code{font-family:Menlo,Monaco,Consolas,'Courier New',monospace;font-size:.85em !important;color:#000;background-color:#f0f0f0;border-radius:3px;padding:.2em 0}html body code::before,html body code::after{letter-spacing:-0.2em;content:"\00a0"}html body pre>code{padding:0;margin:0;font-size:.85em !important;word-break:normal;white-space:pre;background:transparent;border:0}html body .highlight{margin-bottom:16px}html body .highlight pre,html body pre{padding:1em;overflow:auto;font-size:.85em !important;line-height:1.45;border:#d6d6d6;border-radius:3px}html body .highlight pre{margin-bottom:0;word-break:normal}html body pre code,html body pre tt{display:inline;max-width:initial;padding:0;margin:0;overflow:initial;line-height:inherit;word-wrap:normal;background-color:transparent;border:0}html body pre code:before,html body pre tt:before,html body pre code:after,html body pre tt:after{content:normal}html body p,html body blockquote,html body ul,html body ol,html body dl,html body pre{margin-top:0;margin-bottom:16px}html body kbd{color:#000;border:1px solid #d6d6d6;border-bottom:2px solid #c7c7c7;padding:2px 4px;background-color:#f0f0f0;border-radius:3px}@media print{html body{background-color:#fff}html body h1,html body h2,html body h3,html body h4,html body h5,html body h6{color:#000;page-break-after:avoid}html body blockquote{color:#5c5c5c}html body pre{page-break-inside:avoid}html body table{display:table}html body img{display:block;max-width:100%;max-height:100%}html body pre,html body code{word-wrap:break-word;white-space:pre}}
    /* Please visit the URL below for more information: */
/*   https://shd101wyy.github.io/markdown-preview-enhanced/#/customize-css */

    </style>
    
  </head>
  <body for="html-export">
    <div class="mume markdown-preview">
    <html><head></head><body><div><h2 class="mume-header" id="routing" ebook-toc-level-2 heading="Routing">Routing</h2>

<h5 class="mume-header" id="%E4%BD%BF%E7%94%A8%E7%A8%8B%E5%BC%8F%E7%A2%BC14-routingzip-%E5%8F%AF%E5%BB%B6%E7%BA%8C%E7%AC%AC-13-%E7%AB%A0%E7%AF%84%E4%BE%8B" ebook-toc-level-5 heading="&amp;#x4F7F;&amp;#x7528;&amp;#x7A0B;&amp;#x5F0F;&amp;#x78BC;&amp;#xFF1A;14. Routing.zip (&amp;#x53EF;&amp;#x5EF6;&amp;#x7E8C;&amp;#x7B2C; 13 &amp;#x7AE0;&amp;#x7BC4;&amp;#x4F8B;)">&#x4F7F;&#x7528;&#x7A0B;&#x5F0F;&#x78BC;&#xFF1A;14. Routing.zip (&#x53EF;&#x5EF6;&#x7E8C;&#x7B2C; 13 &#x7AE0;&#x7BC4;&#x4F8B;)</h5>

<p>&#x5148;&#x524D;&#x6709;&#x63D0;&#x5230; Angular &#x7684;&#x8A2D;&#x8A08;&#x662F;&#x5C6C;&#x65BC; SPA&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x500B;&#x55AE;&#x4E00;&#x9801;&#x9762;&#x5728;&#x756B;&#x9762;&#x4E0A;&#xFF0C;&#x591A;&#x6578;&#x770B;&#x4F3C;&#x66FF;&#x63DB;&#x9801;&#x9762;&#x7684;&#x884C;&#x70BA;&#x90FD;&#x53EA;&#x662F; JavaScript &#x7684;&#x6E32;&#x67D3;&#xFF0C;&#x800C; Routing &#x5C31;&#x662F;&#x9019;&#x6A23;&#x7684;&#x8A2D;&#x8A08;&#x3002;</p>
<h3 class="mume-header" id="%E6%95%B4%E7%90%86%E7%A8%8B%E5%BC%8F%E7%A2%BC" ebook-toc-level-3 heading="&amp;#x6574;&amp;#x7406;&amp;#x7A0B;&amp;#x5F0F;&amp;#x78BC;">&#x6574;&#x7406;&#x7A0B;&#x5F0F;&#x78BC;</h3>

<p>&#x4F7F;&#x7528;&#x7A0B;&#x5F0F;&#x78BC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x9644;&#x4EF6;&#x6A94;&#x6848;&#xFF0C;&#x6216;&#x8005;&#x662F;&#x7B2C; 13 &#x7AE0;&#x7BC4;&#x4F8B;&#xFF0C;&#x7531;&#x65BC;&#x6709;&#x90E8;&#x5206;&#x7A0B;&#x5F0F;&#x78BC;&#x6709;&#x505A;&#x67B6;&#x69CB;&#x8ABF;&#x6574;&#x3002;&#x9019;&#x908A;&#x5148;&#x7C21;&#x55AE;&#x4ECB;&#x7D39;&#x6709;&#x54EA;&#x4E9B;&#x8B8A;&#x52D5;&#x3002;</p>
<pre data-role="codeBlock" data-info class="language-"><code>|--app
    |--component
      |--form  // &#x65B0;&#x589E;
        |--form.component.html
        |--form.component.ts
      |--home  // &#x65B0;&#x589E;
        |--home.component.html
        |--home.component.ts
      |--identifier  // &#x65B0;&#x589E;
        |--identifier.component.html
        |--identifier.component.ts
      |--table  // &#x65B0;&#x589E;
        |--table.component.html
        |--table.component.ts
    |--interfaces
    |--service
    |--app.component.html  
    |--app.component.ts  
</code></pre><ul>
<li>app.component.html<br>
&#x5C07;&#x8868;&#x683C;&#x53CA;&#x6E05;&#x55AE;&#x5207;&#x5272;&#x6210;&#x65B0;&#x7684; component &#xFF0C;&#x4E26;&#x52A0;&#x4E0A; header &#x3002;</li>
</ul>
<pre data-role="codeBlock" data-info="html" class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar navbar-default<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container-fluid<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar-header<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar-brand<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x6700;&#x5F8C;&#x5927;&#x9B54;&#x738B;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>collapse navbar-collapse<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bs-example-navbar-collapse-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nav navbar-nav<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>POST + &#x5217;&#x8868;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>GET + &#x8868;&#x55AE;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

</pre><ul>
<li>app.component.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  selector<span class="token operator">:</span> <span class="token string">&apos;app-root&apos;</span><span class="token punctuation">,</span>
  templateUrl<span class="token operator">:</span> <span class="token string">&apos;./app.component.html&apos;</span><span class="token punctuation">,</span>
  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&apos;./app.component.css&apos;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</pre><ul>
<li>form.component.html<br>
&#x653E;&#x7F6E;&#x539F;&#x672C;&#x7684; Form &#x8868;&#x55AE;&#x3002;</li>
</ul>
<pre data-role="codeBlock" data-info="html" class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">[formGroup]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tycgIdentifier<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span> &#x8CC7;&#x6599;&#x96C6; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>&#x6A19;&#x984C;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">formControlName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>&#x8CC7;&#x6599;&#x96C6;&#x985E;&#x578B;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">formControlName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>type<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>&#x8CC7;&#x6599;&#x96C6;&#x63CF;&#x8FF0;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">formControlName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>description<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>&#x63D0;&#x4F9B;&#x6A5F;&#x95DC;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">formControlName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>organization<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</pre><ul>
<li>form.component.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> OnInit <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormControl<span class="token punctuation">,</span> FormGroup <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/forms&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> ActivatedRoute <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/router&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpService <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;src/app/service/http.service&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  selector<span class="token operator">:</span> <span class="token string">&apos;app-form&apos;</span><span class="token punctuation">,</span>
  templateUrl<span class="token operator">:</span> <span class="token string">&apos;./form.component.html&apos;</span><span class="token punctuation">,</span>
  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&apos;./form.component.css&apos;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">FormComponent</span> <span class="token keyword keyword-implements">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">{</span>

  <span class="token doc-comment comment">/** form */</span>
  tycgIdentifier<span class="token operator">:</span> FormGroup<span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword keyword-private">private</span> http<span class="token operator">:</span> HttpService<span class="token punctuation">,</span> <span class="token keyword keyword-private">private</span> route<span class="token operator">:</span> ActivatedRoute<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword keyword-void">void</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>tycgIdentifier <span class="token operator">=</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormGroup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      type<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      description<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      organization<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * &#x53D6;&#x5F97; identifier
   */</span>
  <span class="token function">getIdentifier</span><span class="token punctuation">(</span>identifier<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">getIdentifier</span><span class="token punctuation">(</span>identifier<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>tycgIdentifier<span class="token punctuation">.</span><span class="token function">patchValue</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</pre><ul>
<li>home.component.html<br>
&#x5EFA;&#x7ACB;&#x9996;&#x9801;&#x756B;&#x9762;&#x3002;</li>
</ul>
<pre data-role="codeBlock" data-info="html" class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>POST + &#x5217;&#x8868;&#xFF1A;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
&#x653F;&#x5E9C;&#x8CC7;&#x6599;&#x958B;&#x653E;&#x5E73;&#x81FA;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
https://data.gov.tw/API
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>GET + &#x8868;&#x55AE;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
&#x6843;&#x5712;&#x5E02;&#x653F;&#x5E9C;&#x8CC7;&#x6599;&#x958B;&#x653E;&#x5E73;&#x53F0;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
https://data.tycg.gov.tw/opendata/api-docs


</pre><ul>
<li>home.component.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> OnInit <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Router <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/router&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  selector<span class="token operator">:</span> <span class="token string">&apos;app-home&apos;</span><span class="token punctuation">,</span>
  templateUrl<span class="token operator">:</span> <span class="token string">&apos;./home.component.html&apos;</span><span class="token punctuation">,</span>
  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&apos;./home.component.css&apos;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">HomeComponent</span> <span class="token keyword keyword-implements">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">{</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</pre><ul>
<li>identifier.component.html<br>
&#x653E;&#x9032;&#x6843;&#x5712;&#x5E02;&#x653F;&#x5E9C;&#x8CC7;&#x6599;&#x958B;&#x653E;&#x5E73;&#x53F0;&#x4E0B;&#x62C9;&#x5F0F;&#x9078;&#x55AE;&#xFF0C;&#x4E26;&#x5C07;&#x539F;&#x672C;&#x8CC7;&#x6599;&#x96C6;&#x6539;&#x70BA;&#x5217;&#x8868;&#x3002;</li>
</ul>
<pre data-role="codeBlock" data-info="html" class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>&#x6843;&#x5712;&#x5E02;&#x653F;&#x5E9C;&#x8CC7;&#x6599;&#x958B;&#x653E;&#x5E73;&#x53F0;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>https://data.tycg.gov.tw/opendata/api-docs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>&#x8CC7;&#x6599;&#x985E;&#x578B;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>format<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let item of formatList<span class="token punctuation">&quot;</span></span> <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            {{ item }}
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary btn-lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getIdentifierList()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        &#x67E5;&#x8A62;&#x8CC7;&#x6599;&#x985E;&#x578B;
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>

      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>table<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x8CC7;&#x6599;&#x96C6;&#x4EE3;&#x865F;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x67E5;&#x770B;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let item of identifierList; let i = index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ i + 1 }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{ item }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary btn-lg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                &#x67E5;&#x770B;&#x8CC7;&#x6599;&#x96C6;
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</pre><ul>
<li>identifier.component.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> OnInit <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormControl<span class="token punctuation">,</span> FormGroup <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/forms&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> ActivatedRoute<span class="token punctuation">,</span> Router <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/router&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpService <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;src/app/service/http.service&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  selector<span class="token operator">:</span> <span class="token string">&apos;app-identifier&apos;</span><span class="token punctuation">,</span>
  templateUrl<span class="token operator">:</span> <span class="token string">&apos;./identifier.component.html&apos;</span><span class="token punctuation">,</span>
  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&apos;./identifier.component.css&apos;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">IdentifierComponent</span> <span class="token keyword keyword-implements">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">{</span>

  <span class="token doc-comment comment">/** &#x683C;&#x5F0F;&#x4E0B;&#x62C9;&#x9078;&#x9805; */</span>
  formatList<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/** &#x8CC7;&#x6599;&#x96C6;&#x4E0B;&#x62C9;&#x9078;&#x9805; */</span>
  identifierList<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/** form */</span>
  tycgIdentifier<span class="token operator">:</span> FormGroup<span class="token punctuation">;</span>

  <span class="token doc-comment comment">/** &#x683C;&#x5F0F;&#x9078;&#x9805; */</span>
  format <span class="token operator">=</span> <span class="token string">&apos;&apos;</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/** &#x8CC7;&#x6599;&#x96C6;&#x9078;&#x9805; */</span>
  identifier <span class="token operator">=</span> <span class="token string">&apos;&apos;</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword keyword-private">private</span> http<span class="token operator">:</span> HttpService<span class="token punctuation">,</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>


  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword keyword-void">void</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span><span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>tycgIdentifier <span class="token operator">=</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormGroup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      type<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      description<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      organization<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * &#x53D6;&#x5F97; FormatList
   */</span>
  <span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>formatList <span class="token operator">=</span> responseData<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * &#x53D6;&#x5F97; identifier
   */</span>
  <span class="token function">getIdentifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">getIdentifier</span><span class="token punctuation">(</span><span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>identifier<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>tycgIdentifier<span class="token punctuation">.</span><span class="token function">patchValue</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * &#x53D6;&#x5F97; identifierList
   */</span>
  <span class="token function">getIdentifierList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">getIdentifierList</span><span class="token punctuation">(</span><span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>format<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>identifierList <span class="token operator">=</span> responseData<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</pre><ul>
<li>table.component.html</li>
</ul>
<pre data-role="codeBlock" data-info="html" class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>&#x653F;&#x5E9C;&#x8CC7;&#x6599;&#x958B;&#x653E;&#x5E73;&#x81FA;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>https://data.gov.tw/API<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>table<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x670D;&#x52D9;&#x5206;&#x985E;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x700F;&#x89BD;&#x6B21;&#x6578;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x8CC7;&#x6599;&#x96C6;&#x7E3D;&#x6578;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let item of dataGov; let i = index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ i + 1 }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> {{ item.service }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> {{ item.count }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> {{ item.totalCount }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</pre><ul>
<li>table.component.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> OnInit <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> PostResponseData <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;src/app/interfaces/postResponseData&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpService <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;src/app/service/http.service&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  selector<span class="token operator">:</span> <span class="token string">&apos;app-table&apos;</span><span class="token punctuation">,</span>
  templateUrl<span class="token operator">:</span> <span class="token string">&apos;./table.component.html&apos;</span><span class="token punctuation">,</span>
  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&apos;./table.component.css&apos;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">TableComponent</span> <span class="token keyword keyword-implements">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">{</span>

  <span class="token doc-comment comment">/** &#x5217;&#x8868; */</span>
  dataGov<span class="token operator">:</span> PostResponseData<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword keyword-private">private</span> http<span class="token operator">:</span> HttpService<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword keyword-void">void</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span><span class="token function">dataGovSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * &#x67E5;&#x8A62;&#x6E05;&#x55AE;
   */</span>
  <span class="token function">dataGovSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http
      <span class="token punctuation">.</span><span class="token function">dataGovSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>
        responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>dataGov <span class="token operator">=</span> responseData<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</pre><ul>
<li>http.service.ts<br>
&#x5FAE;&#x8ABF; API &#x8CC7;&#x6599;&#x683C;&#x5F0F;&#x3002;</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpClient <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/common/http&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Injectable <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> from<span class="token punctuation">,</span> Observable <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;rxjs&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> filter<span class="token punctuation">,</span> map<span class="token punctuation">,</span> switchMap<span class="token punctuation">,</span> toArray <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;rxjs/operators&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> PostResponseData <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;../interfaces/postResponseData&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> TycgIdentifier <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;../interfaces/tycgIdentifier&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Injectable</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  providedIn<span class="token operator">:</span> <span class="token string">&apos;root&apos;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">HttpService</span> <span class="token punctuation">{</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword keyword-private">private</span> http<span class="token operator">:</span> HttpClient<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * &#x67E5;&#x8A62;&#x683C;&#x5F0F;&#x6E05;&#x55AE;
   * <span class="token keyword keyword-@returns">@returns</span>
   */</span>
  <span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token string">&apos;https://data.tycg.gov.tw/api/v1/rest/format&apos;</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-return">return</span> <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>
      <span class="token function">switchMap</span><span class="token punctuation">(</span>data <span class="token operator">=&gt;</span> <span class="token function">from</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">filter</span><span class="token punctuation">(</span>data <span class="token operator">=&gt;</span> data<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">&apos;CSV&apos;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * &#x67E5;&#x8A62;&#x670D;&#x52D9;&#x5206;&#x985E;
   * <span class="token keyword keyword-@returns">@returns</span>
   */</span>
  <span class="token function">dataGovSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Observable<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token string">&apos;https://data.gov.tw/api/front/statistics/export&apos;</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-const">const</span> postData <span class="token operator">=</span> <span class="token punctuation">{</span> format<span class="token operator">:</span> <span class="token string">&apos;json&apos;</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">&apos;category&apos;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-return">return</span> <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http
      <span class="token punctuation">.</span><span class="token generic-function"><span class="token function">post</span><span class="token generic class-name"><span class="token operator">&lt;</span>PostResponseData<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
        url<span class="token punctuation">,</span>
        postData
      <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>
        <span class="token function">switchMap</span><span class="token punctuation">(</span>data <span class="token operator">=&gt;</span> <span class="token function">from</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">map</span><span class="token punctuation">(</span>data <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword keyword-return">return</span> <span class="token punctuation">{</span> service<span class="token operator">:</span> data<span class="token punctuation">.</span>&#x670D;&#x52D9;&#x5206;&#x985E;<span class="token punctuation">,</span> count<span class="token operator">:</span> data<span class="token punctuation">.</span>&#x700F;&#x89BD;&#x6B21;&#x6578;<span class="token punctuation">,</span> totalCount<span class="token operator">:</span> data<span class="token punctuation">.</span>&#x8CC7;&#x6599;&#x96C6;&#x7E3D;&#x6578; <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * &#x53D6;&#x5F97;&#x8CC7;&#x6599;&#x96C6;&#x9805;&#x76EE;
   * <span class="token keyword keyword-@param">@param</span> <span class="token parameter">identifier</span>
   * <span class="token keyword keyword-@returns">@returns</span>
   */</span>
  <span class="token function">getIdentifier</span><span class="token punctuation">(</span>identifier<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://data.tycg.gov.tw/api/v1/rest/dataset/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>identifier<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>
    <span class="token keyword keyword-return">return</span> <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span>TycgIdentifier<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * &#x53D6;&#x5F97;&#x8CC7;&#x6599;&#x96C6;&#x5217;&#x8868;
   * <span class="token keyword keyword-@param">@param</span> <span class="token parameter">format</span>
   * <span class="token keyword keyword-@returns">@returns</span>
   */</span>
  <span class="token function">getIdentifierList</span><span class="token punctuation">(</span>format<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-const">const</span> url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://data.tycg.gov.tw/api/v1/rest/format/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>format<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>
    <span class="token keyword keyword-return">return</span> <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</pre><h3 class="mume-header" id="router-%E8%A8%AD%E5%AE%9A" ebook-toc-level-3 heading="Router &amp;#x8A2D;&amp;#x5B9A;">Router &#x8A2D;&#x5B9A;</h3>

<h4 class="mume-header" id="param-%E8%A8%AD%E5%AE%9A" ebook-toc-level-4 heading="param &amp;#x8A2D;&amp;#x5B9A;">param &#x8A2D;&#x5B9A;</h4>

<p>&#x5982;&#x679C;&#x9084;&#x8A18;&#x5F97;&#x7684;&#x8A71;&#xFF0C;&#x5728;&#x7B2C;&#x4E09;&#x7AE0; <code>ng new my-first-app</code> &#x6642;&#xFF0C;&#x6709;&#x51FA;&#x73FE; <code>Would you like to add Angular routing?</code> &#xFF0C;&#x6240;&#x7522;&#x751F;&#x7684;&#x6A94;&#x6848; <code>app-routing.module.ts</code>&#xFF0C;&#x5C31;&#x662F;&#x672C;&#x7AE0;&#x6703;&#x4F7F;&#x7528;&#x5230;&#x7684;&#x8A2D;&#x5B9A;&#x3002;Router &#x8A2D;&#x5B9A;&#x9664;&#x4E86;&#x5728; <code>app-routing.module.ts</code> &#x70BA;&#x4E86;&#x65B9;&#x4FBF;&#x4ECB;&#x7D39;&#xFF0C;&#x672C;&#x7AE0;&#x90FD;&#x662F;&#x76F4;&#x63A5;&#x5728; <code>app.module.ts</code> &#x5167;&#x8A2D;&#x5B9A;&#xFF0C;<code>app-routing.module.ts</code>&#x8A2D;&#x5B9A;&#x6703;&#x5728;&#x6700;&#x4E0B;&#x65B9;&#x88DC;&#x5145;&#x3002;</p>
<p>&#x4F46;&#x4E0D;&#x8AD6;&#x662F;&#x54EA;&#x4E00;&#x7A2E;&#x8A2D;&#x5B9A;&#x65B9;&#x6CD5;&#xFF0C;&#x56E0;&#x70BA; Routing &#x662F;&#x6574;&#x500B;&#x5C08;&#x6848;&#x90FD;&#x9700;&#x8981;&#x7684;&#x6771;&#x897F;&#xFF0C;&#x56E0;&#x6B64;&#x6703;&#x5C07;&#x5176;&#x5BEB;&#x5728; <code>AppModule</code>&#xFF0C;&#x5728;&#x4E0B;&#x65B9;&#x7A0B;&#x5F0F;&#x4E2D;&#xFF0C; <code>appRouter</code> &#x9019;&#x500B; <code>Routes</code> &#x7269;&#x4EF6;&#xFF0C;&#x6703;&#x8A2D;&#x5B9A;&#x5230; <code>RouterModule.forRoot(..)</code> &#x5167;&#xFF0C;&#x8B93; Angular &#x53EF;&#x4EE5;&#x5403;&#x5230;&#x8A2D;&#x5B9A;&#x3002;</p>
<p>&#x518D;&#x4F86;&#x5247;&#x662F; <code>appRoutes</code> &#x5167;&#x90E8;&#x7684;&#x8A2D;&#x5B9A;&#xFF0C;&#x88E1;&#x9762;&#x6703;&#x653E;&#x5165;&#x4E00;&#x500B;&#x500B;&#x7269;&#x4EF6;&#xFF0C;key &#x503C;&#x6703;&#x6709; <code>path</code> &#x4EE5;&#x53CA; <code>component</code>&#xFF0C;&#x4E0B;&#x9762;&#x7684;&#x7BC4;&#x4F8B;&#x4E2D;&#xFF0C;&#x7B2C;&#x4E00;&#x500B; <code>HomeComponent</code> &#x56E0;&#x70BA;&#x662F;&#x9996;&#x9801;&#xFF0C;&#x6240;&#x4EE5;&#x6703;&#x5E0C;&#x671B;&#x7576; URL &#x6C92;&#x6709;&#x4EFB;&#x4F55;&#x6771;&#x897F;&#x6642;&#x5C0E;&#x5411;&#x9019;&#x9801;&#xFF0C;&#x56E0;&#x6B64; <code>path</code> &#x5167;&#x662F;&#x653E;&#x5165;&#x7A7A;&#x503C;&#xFF0C;&#x800C;&#x5176;&#x4ED6;&#x7684; Component &#x5247;&#x518D;&#x81EA;&#x884C;&#x8A2D;&#x5B9A;&#x5F8C;&#x9762; URL &#x7684;&#x53C3;&#x6578; ( &#x6CE8;&#x610F; <code>path</code> &#x5F8C;&#x9762;&#x4E0D;&#x9700;&#x8981; <code>/</code> )&#x3002;</p>
<p>&#x6700;&#x5F8C;&#x4F86;&#x5230; Template &#x7684;&#x90E8;&#x5206;&#xFF0C;&#x70BA;&#x4E86;&#x8B93; Angular &#x5728;&#x756B;&#x9762;&#x4E0A;&#x5403;&#x5230;&#x524D;&#x9762;&#x7684;&#x8A2D;&#x5B9A;&#xFF0C;&#x8981;&#x52A0;&#x4E0A; <code>&lt;router-outlet&gt;&lt;/router-outlet&gt;</code>&#xFF0C;&#x8868;&#x793A;&#x7576;&#x62BD;&#x63DB; Component &#x5F8C;&#xFF0C;Component &#x61C9;&#x8A72;&#x8981;&#x653E;&#x7F6E;&#x7684;&#x5730;&#x65B9;&#x3002;</p>
<pre data-role="codeBlock" data-info class="language-"><code>|--app
    |--app.component.html
    |--app.module.ts
</code></pre><ul>
<li>app.module.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpClientModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/common/http&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> NgModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormsModule<span class="token punctuation">,</span> ReactiveFormsModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/forms&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> BrowserModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/platform-browser&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> RouterModule<span class="token punctuation">,</span> Routes <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/router&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> AppComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./app.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/form/form.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HomeComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/home/home.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> IdentifierComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/identifier/identifier.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> TableComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/table/table.component&apos;</span><span class="token punctuation">;</span>

<span class="token keyword keyword-const">const</span> appRoutes<span class="token operator">:</span> Routes <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> HomeComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;home&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> HomeComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  declarations<span class="token operator">:</span> <span class="token punctuation">[</span>
    AppComponent<span class="token punctuation">,</span>
    FormComponent<span class="token punctuation">,</span>
    TableComponent<span class="token punctuation">,</span>
    IdentifierComponent<span class="token punctuation">,</span>
    HomeComponent<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span>
    BrowserModule<span class="token punctuation">,</span>
    HttpClientModule<span class="token punctuation">,</span>
    FormsModule<span class="token punctuation">,</span>
    ReactiveFormsModule<span class="token punctuation">,</span>
    RouterModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span>appRoutes<span class="token punctuation">)</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  providers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  bootstrap<span class="token operator">:</span> <span class="token punctuation">[</span>AppComponent<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
</pre><ul>
<li>app.component.html</li>
</ul>
<pre data-role="codeBlock" data-info="html" class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar navbar-default<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container-fluid<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar-header<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar-brand<span class="token punctuation">&quot;</span></span>  <span class="token attr-name">routerLink</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>home<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x6700;&#x5F8C;&#x5927;&#x9B54;&#x738B;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>collapse navbar-collapse<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bs-example-navbar-collapse-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nav navbar-nav<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>POST + &#x5217;&#x8868;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>GET + &#x8868;&#x55AE;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-outlet</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-outlet</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</pre><p>&#x7576;&#x4EE5;&#x4E0A;&#x7684;&#x7A0B;&#x5F0F;&#x78BC;&#x90FD;&#x6539;&#x597D;&#x5F8C;&#x5C31;&#x53EF;&#x4EE5;&#x9032;&#x884C;&#x6E2C;&#x8A66;&#x4E86;&#xFF0C;&#x4E0D;&#x904E;&#x73FE;&#x968E;&#x6BB5;&#x53EA;&#x80FD;&#x900F;&#x904E; URL &#x4F86;&#x9032;&#x884C;&#x6E2C;&#x8A66;&#xFF0C;&#x53EF;&#x4EE5;&#x5617;&#x8A66;&#x628A; URL &#x6539;&#x6210; <code>localhost:4200/home</code>&#xFF0C;&#x770B;&#x770B;&#x62BD;&#x63DB; Component &#x7684;&#x73FE;&#x8C61;&#x3002;</p>
<h4 class="mume-header" id="param-%E5%8F%83%E6%95%B8%E8%A8%AD%E5%AE%9A" ebook-toc-level-4 heading="param &amp;#x53C3;&amp;#x6578;&amp;#x8A2D;&amp;#x5B9A;">param &#x53C3;&#x6578;&#x8A2D;&#x5B9A;</h4>

<p>&#x6709;&#x6642;&#x5019;&#x53EF;&#x4EE5;&#x5728;&#x7DB2;&#x7AD9;&#x4E0A;&#x770B;&#x5230;&#x50CF;&#x662F;&#x9019;&#x6A23;&#x7684; URL <a href="http://localhost:4200/users/1/Max">http://localhost:4200/users/1/Max</a> &#xFF0C;&#x5F8C;&#x9762;&#x7684; 1/Max &#x5176;&#x5BE6;&#x662F;&#x53C3;&#x6578;&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F; Component &#x4E2D;&#x7684;&#x8CC7;&#x8A0A;&#xFF0C;&#x82E5;&#x8981;&#x8A2D;&#x5B9A;&#x9019;&#x6A23;&#x7684; URL&#xFF0C;&#x5148;&#x5728; <code>app.module.ts</code> &#x4E2D;&#x8A2D;&#x5B9A; <code>appRoutes</code> &#x3002;</p>
<pre data-role="codeBlock" data-info class="language-"><code>|--app
    |--app.module.ts
</code></pre><ul>
<li>app.module.ts<br>
&#x7576;&#x4EE5;&#x4E0B;&#x7684;&#x7A0B;&#x5F0F;&#x78BC;&#x90FD;&#x6539;&#x597D;&#x5F8C;&#x5C31;&#x53EF;&#x4EE5;&#x9032;&#x884C;&#x6E2C;&#x8A66;&#x4E86;&#xFF0C;&#x4E0D;&#x904E;&#x73FE;&#x968E;&#x6BB5;&#x53EA;&#x80FD;&#x900F;&#x904E; URL &#x4F86;&#x9032;&#x884C;&#x6E2C;&#x8A66;&#xFF0C;&#x53EF;&#x4EE5;&#x5617;&#x8A66;&#x628A; URL &#x6539;&#x6210; <code>localhost:4200/tw/table</code>&#x3001;<code>localhost:4200/tycg/form</code>&#xFF0C;&#x770B;&#x770B;&#x62BD;&#x63DB; Component &#x7684;&#x73FE;&#x8C61;&#x3002;</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpClientModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/common/http&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> NgModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormsModule<span class="token punctuation">,</span> ReactiveFormsModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/forms&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> BrowserModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/platform-browser&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> RouterModule<span class="token punctuation">,</span> Routes <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/router&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> AppComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./app.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/form/form.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HomeComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/home/home.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> IdentifierComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/identifier/identifier.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> TableComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/table/table.component&apos;</span><span class="token punctuation">;</span>

<span class="token keyword keyword-const">const</span> appRoutes<span class="token operator">:</span> Routes <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> HomeComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;home&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> HomeComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;tw/table&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> TableComponent<span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;tycg/form&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> FormComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;tycg/identifier&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> IdentifierComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  declarations<span class="token operator">:</span> <span class="token punctuation">[</span>
    AppComponent<span class="token punctuation">,</span>
    FormComponent<span class="token punctuation">,</span>
    TableComponent<span class="token punctuation">,</span>
    IdentifierComponent<span class="token punctuation">,</span>
    HomeComponent<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span>
    BrowserModule<span class="token punctuation">,</span>
    HttpClientModule<span class="token punctuation">,</span>
    FormsModule<span class="token punctuation">,</span>
    ReactiveFormsModule<span class="token punctuation">,</span>
    RouterModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span>appRoutes<span class="token punctuation">)</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  providers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  bootstrap<span class="token operator">:</span> <span class="token punctuation">[</span>AppComponent<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
</pre><p>&#x4ED4;&#x7D30;&#x770B; FormComponent &#xFF0C;&#x6BCF;&#x4E00;&#x9801;&#x7684;&#x8CC7;&#x6599;&#x96C6;&#x4E0D;&#x4E00;&#x5B9A;&#x6703;&#x662F;&#x76F8;&#x540C;&#x7684;&#xFF0C;&#x6703;&#x6709;&#x4E0D;&#x540C;&#x7684; id &#xFF0C;&#x56E0;&#x6B64;&#x5F8C;&#x9762;&#x8981;&#x63A5;&#x4E0A; <code>tycg/form/:id</code> &#x4F86;&#x4EE3;&#x8868;&#x5B83;&#x662F;&#x4E0D;&#x56FA;&#x5B9A;&#x7684;&#x503C;&#x3002;</p>
<pre data-role="codeBlock" data-info class="language-"><code>|--app
    |--app.module.ts
</code></pre><ul>
<li>app.module.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpClientModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/common/http&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> NgModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormsModule<span class="token punctuation">,</span> ReactiveFormsModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/forms&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> BrowserModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/platform-browser&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> RouterModule<span class="token punctuation">,</span> Routes <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/router&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> AppComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./app.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/form/form.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HomeComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/home/home.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> IdentifierComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/identifier/identifier.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> TableComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/table/table.component&apos;</span><span class="token punctuation">;</span>

<span class="token keyword keyword-const">const</span> appRoutes<span class="token operator">:</span> Routes <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> HomeComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;home&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> HomeComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;tw/table&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> TableComponent<span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;tycg/form&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> FormComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;tycg/form/:id&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> FormComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;tycg/identifier&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> IdentifierComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  declarations<span class="token operator">:</span> <span class="token punctuation">[</span>
    AppComponent<span class="token punctuation">,</span>
    FormComponent<span class="token punctuation">,</span>
    TableComponent<span class="token punctuation">,</span>
    IdentifierComponent<span class="token punctuation">,</span>
    HomeComponent<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span>
    BrowserModule<span class="token punctuation">,</span>
    HttpClientModule<span class="token punctuation">,</span>
    FormsModule<span class="token punctuation">,</span>
    ReactiveFormsModule<span class="token punctuation">,</span>
    RouterModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span>appRoutes<span class="token punctuation">)</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  providers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  bootstrap<span class="token operator">:</span> <span class="token punctuation">[</span>AppComponent<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
</pre><p>&#x5617;&#x8A66;&#x8F38;&#x5165;&#x9019;&#x500B;&#x7DB2;&#x5740;&#xFF1A;<code>localhost:4200/tycg/form/0e5d540f-0525-4903-9bfe-7213485650d4</code>&#xFF0C;&#x53EF;&#x4EE5;&#x767C;&#x73FE;&#x4ED6;&#x9084;&#x662F;&#x540C;&#x6A23;&#x7684;&#x5C0E;&#x5230; FormComponent &#x4E86;&#x3002;</p>
<h4 class="mume-header" id="%E8%A8%AD%E5%AE%9A%E5%AD%90%E8%B7%AF%E7%94%B1" ebook-toc-level-4 heading="&amp;#x8A2D;&amp;#x5B9A;&amp;#x5B50;&amp;#x8DEF;&amp;#x7531;">&#x8A2D;&#x5B9A;&#x5B50;&#x8DEF;&#x7531;</h4>

<p>&#x800C;&#x8DEF;&#x7531;&#x9664;&#x4E86;&#x4E0A;&#x8FF0;&#x7684;&#x8A2D;&#x5B9A;&#x65B9;&#x6CD5;&#xFF0C;&#x9084;&#x53EF;&#x4EE5;&#x8A2D;&#x5B9A;&#x6210;&#x5B50;&#x8DEF;&#x7531;&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x7576;&#x8A2D;&#x5B9A;&#x6210;&#x5B50;&#x8DEF;&#x7531;&#x5F8C;&#xFF0C;&#x8981;&#x8A18;&#x5F97;&#x5C07;&#x5176;&#x5C0D;&#x61C9;&#x7684; Template &#x5F9E;&#x4E00;&#x822C;&#x7684; Component selector &#x6539;&#x6210; <code>&lt;router-outlet&gt;&lt;/router-outlet&gt;</code>&#xFF0C;&#x4E0D;&#x7136;&#x904B;&#x884C;&#x4E0A;&#x6703;&#x6709;&#x554F;&#x984C; &#x3002;</p>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token punctuation">{</span>
  path<span class="token operator">:</span> <span class="token string">&apos;tw&apos;</span><span class="token punctuation">,</span>
    component<span class="token operator">:</span> HomeComponent<span class="token punctuation">,</span> 
    children<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;table&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> TableComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</pre><pre data-role="codeBlock" data-info class="language-"><code>|--app
    |--app.module.ts
    |--home
        |--home.component.html
</code></pre><pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpClientModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/common/http&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> NgModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormsModule<span class="token punctuation">,</span> ReactiveFormsModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/forms&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> BrowserModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/platform-browser&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> RouterModule<span class="token punctuation">,</span> Routes <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/router&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> AppComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./app.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/form/form.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HomeComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/home/home.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> IdentifierComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/identifier/identifier.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> TableComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/table/table.component&apos;</span><span class="token punctuation">;</span>

<span class="token keyword keyword-const">const</span> appRoutes<span class="token operator">:</span> Routes <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token comment">// &#x5B50;&#x8DEF;&#x7531;&#x4ECB;&#x7D39;&#x5B8C;&#x9700;&#x8A3B;&#x89E3;</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> HomeComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    path<span class="token operator">:</span> <span class="token string">&apos;tw&apos;</span><span class="token punctuation">,</span>
     component<span class="token operator">:</span> HomeComponent<span class="token punctuation">,</span> 
     children<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;table&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> TableComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    path<span class="token operator">:</span> <span class="token string">&apos;tycg&apos;</span><span class="token punctuation">,</span> children<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;form/:id&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> FormComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;identifier&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> IdentifierComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// const appRoutes: Routes = [</span>
<span class="token comment">//   { path: &apos;&apos;, component: HomeComponent },</span>
<span class="token comment">//   { path: &apos;home&apos;, component: HomeComponent },</span>
<span class="token comment">//   { path: &apos;tw/table&apos;, component: TableComponent},</span>
<span class="token comment">//   { path: &apos;tycg/form&apos;, component: FormComponent },</span>
<span class="token comment">//   { path: &apos;tycg/form/:id&apos;, component: FormComponent },</span>
<span class="token comment">//   { path: &apos;tycg/identifier&apos;, component: IdentifierComponent },</span>
<span class="token comment">// ];</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  declarations<span class="token operator">:</span> <span class="token punctuation">[</span>
    AppComponent<span class="token punctuation">,</span>
    FormComponent<span class="token punctuation">,</span>
    TableComponent<span class="token punctuation">,</span>
    IdentifierComponent<span class="token punctuation">,</span>
    HomeComponent<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span>
    BrowserModule<span class="token punctuation">,</span>
    HttpClientModule<span class="token punctuation">,</span>
    FormsModule<span class="token punctuation">,</span>
    ReactiveFormsModule<span class="token punctuation">,</span>
    RouterModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span>appRoutes<span class="token punctuation">)</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  providers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  bootstrap<span class="token operator">:</span> <span class="token punctuation">[</span>AppComponent<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

</pre><ul>
<li>home.component.html<br>
&#x5EFA;&#x7ACB;&#x9996;&#x9801;&#x756B;&#x9762;&#x3002;</li>
</ul>
<pre data-role="codeBlock" data-info="html" class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>POST + &#x5217;&#x8868;&#xFF1A;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
&#x653F;&#x5E9C;&#x8CC7;&#x6599;&#x958B;&#x653E;&#x5E73;&#x81FA;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
https://data.gov.tw/API
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>GET + &#x8868;&#x55AE;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
&#x6843;&#x5712;&#x5E02;&#x653F;&#x5E9C;&#x8CC7;&#x6599;&#x958B;&#x653E;&#x5E73;&#x53F0;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
https://data.tycg.gov.tw/opendata/api-docs

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-outlet</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-outlet</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- &#x5B50;&#x8DEF;&#x7531;&#x4ECB;&#x7D39;&#x5B8C;&#x9700;&#x8A3B;&#x89E3; --&gt;</span>
</pre><p>&#x89C0;&#x5BDF;&#x9019;&#x5169;&#x500B;&#x7DB2;&#x5740;&#xFF1A;</p>
<ol>
<li><code>localhost:4200/tw</code></li>
<li><code>localhost:4200/tw/table</code></li>
</ol>
<p><img src="data:image/png;charset=utf-8;base64," alt="  "></p>
<p>&#x203B; &#x5B50;&#x8DEF;&#x7531;&#x7684;&#x8A2D;&#x5B9A;&#x53EF;&#x4EE5;&#x5168;&#x90E8;&#x8A3B;&#x89E3;&#xFF0C;&#x63A5;&#x4E0B;&#x4F86;&#x7684;&#x7BC4;&#x4F8B;&#x4E26;&#x4E0D;&#x5305;&#x542B;&#x5B50;&#x8DEF;&#x7531;&#x3002;</p>
<h4 class="mume-header" id="%E8%A8%AD%E5%AE%9A%E8%90%AC%E7%94%A8%E8%B7%AF%E7%94%B1" ebook-toc-level-4 heading="&amp;#x8A2D;&amp;#x5B9A;&amp;#x842C;&amp;#x7528;&amp;#x8DEF;&amp;#x7531;">&#x8A2D;&#x5B9A;&#x842C;&#x7528;&#x8DEF;&#x7531;</h4>

<p>&#x5982;&#x679C;&#x5728;&#x7DB2;&#x5740;&#x5217;&#x4E0A;&#x8F38;&#x5165;&#x4E0D;&#x5B58;&#x5728;&#x7684; URL&#xFF0C;Angular &#x6703;&#x51FA;&#x73FE;&#x932F;&#x8AA4;&#xFF0C;&#x56E0;&#x6B64;&#x901A;&#x5E38;&#x6703;&#x6709;&#x842C;&#x7528;&#x8DEF;&#x7531;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5C0E;&#x5411;&#x4E00;&#x500B;&#x932F;&#x8AA4;&#x9801;&#x9762;&#x963B;&#x6B62;&#x9019;&#x4EF6;&#x4E8B;&#x60C5;&#x7684;&#x767C;&#x751F;&#xFF0C;&#x5148;&#x7528;&#x6307;&#x4EE4;&#x7522;&#x51FA;&#x4E00;&#x500B; Component &#x4F86;&#x4EE3;&#x8868;&#x932F;&#x8AA4;&#x9801;&#x9762;&#xFF0C;&#x7136;&#x5F8C;&#x8A2D;&#x5B9A;&#x842C;&#x7528;&#x8DEF;&#x7531;&#xFF0C;&#x8A18;&#x5F97;&#x9019;&#x500B;&#x8DEF;&#x7531;&#x4E00;&#x5B9A;&#x8981;&#x653E;&#x5728;&#x5168;&#x90E8;&#x8DEF;&#x7531;&#x7684;&#x6700;&#x4E0B;&#x65B9;&#xFF0C;&#x56E0;&#x70BA; Angular &#x5728;&#x6383;&#x63CF;&#x8DEF;&#x7531;&#x6642;&#x662F;&#x7531;&#x4E0A;&#x5F80;&#x4E0B;&#x904B;&#x884C; :</p>
<pre data-role="codeBlock" data-info class="language-"><code>|--app
    |--app.module.ts 
    |--page-not-found
        |--page-not-found.component.html 
</code></pre><p>&#x57F7;&#x884C;&#x6307;&#x4EE4;&#x5EFA;&#x7ACB; component&#xFF0C;<code>ng g c component/page-not-found</code></p>
<ul>
<li>page-not-found.component.html</li>
</ul>
<pre data-role="codeBlock" data-info="html" class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>&#x67E5;&#x7121;&#x6B64;&#x9801;&#x9762;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
</pre><ul>
<li>app.module.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpClientModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/common/http&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> NgModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormsModule<span class="token punctuation">,</span> ReactiveFormsModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/forms&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> BrowserModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/platform-browser&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> RouterModule<span class="token punctuation">,</span> Routes <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/router&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> AppComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./app.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/form/form.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HomeComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/home/home.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> IdentifierComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/identifier/identifier.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> PageNotFoundComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/page-not-found/page-not-found.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> TableComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/table/table.component&apos;</span><span class="token punctuation">;</span>

<span class="token keyword keyword-const">const</span> appRoutes<span class="token operator">:</span> Routes <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> HomeComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;home&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> HomeComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;tw/table&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> TableComponent<span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;tycg/form&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> FormComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;tycg/form/:id&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> FormComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;tycg/identifier&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> IdentifierComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;**&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> PageNotFoundComponent <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  declarations<span class="token operator">:</span> <span class="token punctuation">[</span>
    AppComponent<span class="token punctuation">,</span>
    FormComponent<span class="token punctuation">,</span>
    TableComponent<span class="token punctuation">,</span>
    IdentifierComponent<span class="token punctuation">,</span>
    HomeComponent<span class="token punctuation">,</span>
    PageNotFoundComponent<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span>
    BrowserModule<span class="token punctuation">,</span>
    HttpClientModule<span class="token punctuation">,</span>
    FormsModule<span class="token punctuation">,</span>
    ReactiveFormsModule<span class="token punctuation">,</span>
    RouterModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span>appRoutes<span class="token punctuation">)</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  providers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  bootstrap<span class="token operator">:</span> <span class="token punctuation">[</span>AppComponent<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
</pre><p>&#x63A5;&#x4E0B;&#x4F86;&#x53EF;&#x4EE5;&#x96A8;&#x610F;&#x5730;&#x5728;&#x7DB2;&#x5740;&#x5217;&#x8F38;&#x5165;&#x7DB2;&#x5740;&#xFF0C;&#x8ACB;&#x6CE8;&#x610F;&#x524D;&#x65B9;&#x5FC5;&#x9808;&#x9084;&#x662F;&#x8981; <code>localhost:4200/</code> &#x958B;&#x982D;&#x3002;</p>
<h3 class="mume-header" id="%E9%A0%81%E9%9D%A2%E5%B0%8E%E8%BD%89-html" ebook-toc-level-3 heading="&amp;#x9801;&amp;#x9762;&amp;#x5C0E;&amp;#x8F49; - HTML">&#x9801;&#x9762;&#x5C0E;&#x8F49; - HTML</h3>

<h4 class="mume-header" id="routerlink" ebook-toc-level-4 heading="&lt;code&gt;routerLink&lt;/code&gt;"><code>routerLink</code></h4>

<p><code>&lt;a&gt;</code> &#x4E0A;&#x9762;&#x672C;&#x8EAB;&#x6709;&#x500B;&#x5B83;&#x81EA;&#x5DF1;&#x7684;&#x5C6C;&#x6027; <code>href</code>&#xFF0C;&#x53EF;&#x4EE5;&#x5C07;&#x5C0E;&#x9801;&#x7684; URL &#x8A2D;&#x5B9A;&#x5728;&#x4E0A;&#x9762;&#xFF0C;&#x8A2D;&#x5B9A;&#x597D;&#x6309;&#x4E0B;&#x6B64; tag &#x7684;&#x78BA;&#x53EF;&#x4EE5;&#x9054;&#x5230;&#x63DB;&#x9801;&#x7684;&#x6548;&#x679C;&#xFF0C;&#x7136;&#x800C;&#x5982;&#x679C;&#x7528;&#x958B;&#x767C;&#x4EBA;&#x54E1;&#x5DE5;&#x5177;&#x53BB;&#x89C0;&#x5BDF;&#xFF0C;&#x6703;&#x767C;&#x73FE;&#x9019;&#x6A23;&#x9084;&#x662F;&#x6709;&#x767C;&#x9001; request &#x53BB;&#x8981;&#x9801;&#x9762;&#x8CC7;&#x6599;&#xFF0C;&#x5982;&#x679C;&#x662F; SPA &#x7684;&#x6846;&#x67B6;&#x61C9;&#x8A72;&#x53EA;&#x662F;&#x7528; JavaScript &#x4F86;&#x9032;&#x884C;&#x6E32;&#x67D3;&#x63DB;&#x9801;&#xFF0C;&#x56E0;&#x6B64;&#x5BE6;&#x969B;&#x4E0A; <code>&lt;a&gt;</code> &#x8981;&#x4F7F;&#x7528;&#x5230;&#x7684;&#x662F; Angular &#x81EA;&#x5DF1;&#x5305;&#x88DD;&#x904E;&#x7684; <code>routerLink</code>&#xFF0C;&#x9019;&#x908A;&#x5C31;&#x5C07;&#x5176;&#x8A2D;&#x5B9A;&#x4E0A;&#x4F86;&#x5373;&#x53EF; :</p>
<pre data-role="codeBlock" data-info class="language-"><code>|--app
    |--app.component.html
</code></pre><pre data-role="codeBlock" data-info="html" class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar navbar-default<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container-fluid<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar-header<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar-brand<span class="token punctuation">&quot;</span></span>  <span class="token attr-name">routerLink</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>home<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x6700;&#x5F8C;&#x5927;&#x9B54;&#x738B;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>collapse navbar-collapse<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bs-example-navbar-collapse-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nav navbar-nav<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>POST + &#x5217;&#x8868;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">[routerLink]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&apos;</span>[<span class="token punctuation">&quot;</span>tycg<span class="token punctuation">&quot;</span>,<span class="token punctuation">&quot;</span>identifier<span class="token punctuation">&quot;</span>]<span class="token punctuation">&apos;</span></span> <span class="token punctuation">&gt;</span></span>GET + &#x8868;&#x55AE;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-outlet</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-outlet</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

</pre><p>&#x9019;&#x908A;&#x7A0B;&#x5F0F;&#x78BC;&#x6539;&#x4E86;&#x5169;&#x500B;&#x90E8;&#x5206;&#xFF1A;</p>
<ol>
<li>
<p><code>&lt;a class=&quot;navbar-brand&quot; routerLink=&quot;home&quot;&gt;&#x6700;&#x5F8C;&#x5927;&#x9B54;&#x738B;&lt;/a&gt;</code><br>
routerLink &#x5C6C;&#x6027;&#x5F8C;&#x65B9;&#x76F4;&#x63A5;&#x52A0;&#x4E0A; path &#xFF0C;&#x8981;&#x7A0D;&#x5FAE;&#x6CE8;&#x610F;&#x4E00;&#x4E0B;&#x5F8C;&#x9762;&#x7684;&#x53C3;&#x6578;&#xFF0C;<code>&quot;home&quot;</code> &#x53CA; <code>&quot;/home&quot;</code> &#x662F;&#x6709;&#x6240;&#x5DEE;&#x7570;&#x7684;&#xFF0C;&#x96D6;&#x7136;&#x5728;&#x672C;&#x6A5F;&#x74B0;&#x5883;&#x5448;&#x73FE;&#x7D50;&#x679C;&#x90FD;&#x4E00;&#x6A23;&#xFF0C;&#x4F46;&#x5728;&#x5176;&#x4ED6;&#x74B0;&#x5883;&#x53EF;&#x80FD;&#x6703;&#x6709;&#x932F;&#x8AA4;&#xFF0C;&#x9019;&#x662F;&#x56E0;&#x70BA;&#x7D55;&#x5C0D;&#x8DEF;&#x5F91;&#x548C;&#x76F8;&#x5C0D;&#x8DEF;&#x5F91;&#x7684;&#x95DC;&#x4FC2;&#x3002;</p>
</li>
<li>
<p><code>&lt;a [routerLink]=&apos;[&quot;tycg&quot;,&quot;identifier&quot;]&apos; &gt;GET + &#x8868;&#x55AE;&lt;/a&gt;</code><br>
&#x53E6;&#x4E00;&#x500B;&#x5BEB;&#x6CD5;&#x662F;&#x5C07; routerLink &#x7528; binding &#x7684;&#x65B9;&#x5F0F;&#x5448;&#x73FE;&#xFF0C; param &#x5C31;&#x53EF;&#x4EE5;&#x5C07;&#x503C;&#x7528;&#x9663;&#x5217;&#x7684;&#x65B9;&#x5F0F;&#x653E;&#x5165;&#x3002;</p>
</li>
</ol>
<h4 class="mume-header" id="routerlinkactive" ebook-toc-level-4 heading="&lt;code&gt;routerLinkActive&lt;/code&gt;"><code>routerLinkActive</code></h4>

<p>&#x518D;&#x4F86;&#x8981;&#x505A;&#x7684;&#x4E8B;&#x60C5;&#x662F;&#x8A2D;&#x5B9A; <code>routerLinkActive</code>&#xFF0C;&#x76EE;&#x7684;&#x662F;&#x7576;&#x9EDE;&#x9078;&#x67D0;&#x500B; <code>&lt;a&gt;</code> &#x9032;&#x884C;&#x9078;&#x53D6;&#x6642;&#xFF0C;&#x5E0C;&#x671B;&#x5B83;&#x7684;&#x6A23;&#x5F0F;&#x6709;&#x4E9B;&#x8B8A;&#x5316; ( &#x9801;&#x7C64;&#x88AB;&#x9078;&#x53D6;&#x7684;&#x529F;&#x80FD; )&#xFF0C;&#x800C; <code>routerLinkActive</code> &#x5728;&#x88AB;&#x9EDE;&#x9078;&#x6642;&#x7D66;&#x4E88;&#x7B49;&#x865F;&#x53F3;&#x908A;&#x7684; class&#xFF0C;&#x4F86;&#x6539;&#x8B8A;&#x5B83;&#x7684;&#x6A23;&#x5F0F;&#x3002;</p>
<pre data-role="codeBlock" data-info class="language-"><code>|--app
    |--app.component.html
</code></pre><pre data-role="codeBlock" data-info="html" class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar navbar-default<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container-fluid<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar-header<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar-brand<span class="token punctuation">&quot;</span></span>  <span class="token attr-name">routerLink</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>home<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x6700;&#x5F8C;&#x5927;&#x9B54;&#x738B;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>collapse navbar-collapse<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bs-example-navbar-collapse-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nav navbar-nav<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">routerLinkActive</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>active<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>POST + &#x5217;&#x8868;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">routerLinkActive</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>active<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">[routerLink]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&apos;</span>[<span class="token punctuation">&quot;</span>tycg<span class="token punctuation">&quot;</span>,<span class="token punctuation">&quot;</span>identifier<span class="token punctuation">&quot;</span>]<span class="token punctuation">&apos;</span></span> <span class="token punctuation">&gt;</span></span>GET + &#x8868;&#x55AE;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-outlet</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-outlet</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

</pre><h4 class="mume-header" id="param-%E5%8F%83%E6%95%B8" ebook-toc-level-4 heading="param &amp;#x53C3;&amp;#x6578;">param &#x53C3;&#x6578;</h4>

<p>&#x5728;&#x8DEF;&#x7531;&#x8A2D;&#x5B9A;&#x4E2D;&#xFF0C;&#x6709;&#x4E00;&#x884C;&#x9019;&#x6A23;&#x7684;&#x8A2D;&#x5B9A; <code>{ path: &apos;tycg/form/:id&apos;, component: FormComponent }</code> &#xFF0C;&#x63A5;&#x4E0B;&#x4F86;&#x662F;&#x8981;&#x4ECB;&#x7D39;&#x5728; HTML &#x662F;&#x5982;&#x4F55;&#x8A2D;&#x5B9A;&#xFF0C;&#x4EE5;&#x53CA;&#x5728; TypeScript &#x662F;&#x5982;&#x4F55;&#x53D6;&#x503C;&#x3002;</p>
<pre data-role="codeBlock" data-info class="language-"><code>|--app
    |--home
      |--home.component.html
    |--form
      |--form.component.ts
</code></pre><ul>
<li>home.component.html<br>
&#x5728;&#x88E1;&#x9762;&#x5EFA;&#x7ACB;&#x5169;&#x500B;&#x9023;&#x7D50;&#xFF0C;&#x5206;&#x5225;&#x662F;&#x4F7F;&#x7528;&#x5B57;&#x4E32;&#x8DEF;&#x7531;&#x53CA;&#x7528; binding &#x8A2D;&#x5B9A;&#x3002;</li>
</ul>
<pre data-role="codeBlock" data-info="html" class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>POST + &#x5217;&#x8868;&#xFF1A;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
&#x653F;&#x5E9C;&#x8CC7;&#x6599;&#x958B;&#x653E;&#x5E73;&#x81FA;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
https://data.gov.tw/API
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>GET + &#x8868;&#x55AE;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
&#x6843;&#x5712;&#x5E02;&#x653F;&#x5E9C;&#x8CC7;&#x6599;&#x958B;&#x653E;&#x5E73;&#x53F0;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
https://data.tycg.gov.tw/opendata/api-docs

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">routerLink</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/tycg/form/0e5d540f-0525-4903-9bfe-7213485650d4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x5229;&#x7528;&#x5B57;&#x4E32;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">[routerLink]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[<span class="token punctuation">&apos;</span>/tycg<span class="token punctuation">&apos;</span>,<span class="token punctuation">&apos;</span>form<span class="token punctuation">&apos;</span>, <span class="token punctuation">&apos;</span>0e5d540f-0525-4903-9bfe-7213485650d4<span class="token punctuation">&apos;</span>]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x5229;&#x7528;&#x9663;&#x5217;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>

</pre><ul>
<li>form.component.ts<br>
&#x62FF;&#x51FA;&#x8CC7;&#x6599;&#x3002;</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> OnInit <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormControl<span class="token punctuation">,</span> FormGroup <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/forms&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> ActivatedRoute <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/router&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpService <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;src/app/service/http.service&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  selector<span class="token operator">:</span> <span class="token string">&apos;app-form&apos;</span><span class="token punctuation">,</span>
  templateUrl<span class="token operator">:</span> <span class="token string">&apos;./form.component.html&apos;</span><span class="token punctuation">,</span>
  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&apos;./form.component.css&apos;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">FormComponent</span> <span class="token keyword keyword-implements">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">{</span>

  <span class="token doc-comment comment">/** form */</span>
  tycgIdentifier<span class="token operator">:</span> FormGroup<span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword keyword-private">private</span> http<span class="token operator">:</span> HttpService<span class="token punctuation">,</span> <span class="token keyword keyword-private">private</span> route<span class="token operator">:</span> ActivatedRoute<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword keyword-void">void</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**&#x53D6;&#x5F97; params **/</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>route<span class="token punctuation">.</span>params<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>param<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span><span class="token function">getIdentifier</span><span class="token punctuation">(</span>param<span class="token punctuation">[</span><span class="token string">&apos;id&apos;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>tycgIdentifier <span class="token operator">=</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormGroup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      type<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      description<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      organization<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>


  <span class="token doc-comment comment">/**
   * &#x53D6;&#x5F97; identifier
   */</span>
  <span class="token function">getIdentifier</span><span class="token punctuation">(</span>identifier<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">getIdentifier</span><span class="token punctuation">(</span>identifier<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>tycgIdentifier<span class="token punctuation">.</span><span class="token function">patchValue</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</pre><p>&#x5148;&#x5728; constructor &#x6CE8;&#x5165; service <code>ActivatedRoute</code> &#xFF0C; &#x4E26;&#x5728; ngOnInit &#x5167;&#x63A5;&#x53D6;&#x8CC7;&#x6599;&#xFF0C;&#x4EE5;&#x4E0B;&#x63D0;&#x4F9B; 2 &#x500B;&#x53D6;&#x503C;&#x8FA6;&#x6CD5;&#xFF1A;</p>
<ol>
<li>ActivatedRoute &#x5167;&#x7684; Observable<br>
params &#x548C; paramMap &#x9019;&#x5169;&#x500B;&#x90FD;&#x662F;&#x5728;&#x53C3;&#x6578;&#x5916;&#x5305;&#x4E00;&#x5C64; Observable &#xFF0C;&#x5982;&#x679C;&#x9700;&#x8981;&#x5F97;&#x5230;&#x8CC7;&#x6599;&#x5FC5;&#x9808; subscribe &#x3002;</li>
</ol>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript">  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword keyword-void">void</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>route<span class="token punctuation">.</span>paramMap<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>param<span class="token operator">:</span> ParamMap<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>route<span class="token punctuation">.</span>params<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>param<span class="token operator">:</span> Params<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</pre><ol start="2">
<li>ActivatedRoute &#x5167;&#x7684; snapshot<br>
snapshot &#x662F;&#x4E00;&#x500B; ActivatedRouteSnapshot &#xFF0C;&#x5176;&#x4E2D;&#x7684; params &#x548C; paramMap &#xFF0C;&#x56E0;&#x70BA;&#x662F;&#x76F4;&#x63A5;&#x5C07;&#x503C;&#x66AB;&#x5B58;&#x4E0B;&#x4F86;&#xFF0C;&#x6240;&#x4EE5;&#x6C92;&#x6709;&#x518D;&#x5305;&#x4E00;&#x5C64; Observable &#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x53D6;&#x7528;&#x7269;&#x4EF6;&#x3002;</li>
</ol>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript">  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword keyword-void">void</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>route<span class="token punctuation">.</span>snapshot<span class="token punctuation">.</span>params<span class="token punctuation">[</span><span class="token string">&apos;id&apos;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>route<span class="token punctuation">.</span>snapshot<span class="token punctuation">.</span>paramMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&apos;id&apos;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</pre><h3 class="mume-header" id="%E9%A0%81%E9%9D%A2%E5%B0%8E%E8%BD%89-typescript" ebook-toc-level-3 heading="&amp;#x9801;&amp;#x9762;&amp;#x5C0E;&amp;#x8F49; - TypeScript">&#x9801;&#x9762;&#x5C0E;&#x8F49; - TypeScript</h3>

<h4 class="mume-header" id="navigatebyurl-navigate-%E5%8F%8A-params" ebook-toc-level-4 heading="navigateByUrl &amp;#x3001; navigate &amp;#x53CA; params">navigateByUrl &#x3001; navigate &#x53CA; params</h4>

<p>&#x9664;&#x4E86;&#x5728; Template &#x7684;&#x5143;&#x7D20;&#x4E0A;&#x8A2D;&#x5B9A;&#x5C0E;&#x9801;&#xFF0C;&#x53E6;&#x4E00;&#x500B;&#x8A2D;&#x5B9A;&#x5C0E;&#x9801;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x5728; TypeScript &#x4E2D;&#xFF0C;&#x8A2D;&#x5B9A;&#x4E0A;&#x53EA;&#x8981;&#x6CE8;&#x5165; <code>Router</code> &#x7269;&#x4EF6;&#xFF0C;&#x4E26;&#x4F7F;&#x7528;&#x5B83;&#x7684; <code>navigate(..)</code> &#x65B9;&#x6CD5;&#x4F86;&#x5B8C;&#x6210;&#x5C0E;&#x9801;&#x529F;&#x80FD; &#xFF0C;&#x56E0;&#x70BA;&#x662F;&#x5728; TypeScript &#x64CD;&#x4F5C;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x5011;&#x4F7F;&#x7528; event binding &#x3002;</p>
<pre data-role="codeBlock" data-info class="language-"><code>|--app
    |--app.component.html  
    |--app.component.ts  
</code></pre><ul>
<li>app.component.html</li>
</ul>
<pre data-role="codeBlock" data-info="html" class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar navbar-default<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container-fluid<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar-header<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar-brand<span class="token punctuation">&quot;</span></span>  <span class="token attr-name">routerLink</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>home<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x6700;&#x5F8C;&#x5927;&#x9B54;&#x738B;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>collapse navbar-collapse<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bs-example-navbar-collapse-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nav navbar-nav<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">routerLinkActive</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>active<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>goToPostPage()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>POST + &#x5217;&#x8868;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">routerLinkActive</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>active<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">[routerLink]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&apos;</span>[<span class="token punctuation">&quot;</span>tycg<span class="token punctuation">&quot;</span>,<span class="token punctuation">&quot;</span>identifier<span class="token punctuation">&quot;</span>]<span class="token punctuation">&apos;</span></span> <span class="token punctuation">&gt;</span></span>GET + &#x8868;&#x55AE;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-outlet</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-outlet</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</pre><ul>
<li>app.component.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Router <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/router&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  selector<span class="token operator">:</span> <span class="token string">&apos;app-root&apos;</span><span class="token punctuation">,</span>
  templateUrl<span class="token operator">:</span> <span class="token string">&apos;./app.component.html&apos;</span><span class="token punctuation">,</span>
  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&apos;./app.component.css&apos;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword keyword-private">private</span> router<span class="token operator">:</span> Router<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

  <span class="token function">goToPostPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// this.router.navigateByUrl(`/tw/table`);</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>router<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&apos;tw&apos;</span><span class="token punctuation">,</span> <span class="token string">&apos;table&apos;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</pre><p>Router &#x6709;&#x5169;&#x7A2E;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x5C0E;&#x9801;&#xFF0C;&#x548C; html &#x4E00;&#x6A23;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x5B57;&#x4E32;&#x6216;&#x8005;&#x662F;&#x9663;&#x5217;&#xFF0C;&#x5C0D;&#x61C9;&#x7684;&#x65B9;&#x6CD5;&#x4E5F;&#x6703;&#x6709;&#x6240;&#x4E0D;&#x540C;&#x3002;</p>
<h4 class="mume-header" id="queryparams" ebook-toc-level-4 heading="queryParams">queryParams</h4>

<p>Router &#x50B3;&#x503C;&#x7684;&#x65B9;&#x5F0F;&#x4E0D;&#x50C5;&#x50C5;&#x53EA;&#x6709; params&#xFF0C;&#x53E6;&#x5916;&#x9084;&#x6709; queryParams&#x3002;<br>
<img src="data:image/png;charset=utf-8;base64," alt="  "></p>
<p>&#x540C;&#x6A23;&#x4F7F;&#x7528; Router &#x5167;&#x7684;&#x65B9;&#x6CD5; <code>navigate()</code>&#xFF0C;<code>navigate()</code> &#x9664;&#x4E86;&#x7B2C;&#x4E00;&#x500B;&#x53C3;&#x6578;&#x5916;&#xFF0C;&#x9084;&#x53EF;&#x4EE5;&#x5728;&#x7B2C;&#x4E8C;&#x500B;&#x53C3;&#x6578;&#x5167;&#x653E;&#x9032;&#x76F8;&#x95DC;&#x8A2D;&#x5B9A;&#xFF08;NavigationExtras &#x7269;&#x4EF6;&#xFF09;&#xFF0C;&#x5176;&#x4E2D; queryParams &#x5C31;&#x662F;&#x5728;&#x88E1;&#x9762;&#x505A;&#x8A2D;&#x5B9A;&#x3002;<br>
&#x5728;&#x88AB;&#x5C0E;&#x5411;&#x7684;&#x9801;&#x9762;&#x4E5F;&#x9700;&#x8981;&#x505A;&#x8ABF;&#x6574;&#xFF0C;&#x548C; Param &#x76F8;&#x540C;&#xFF0C;&#x4E5F;&#x63D0;&#x4F9B;&#x4E86;&#x5169;&#x500B;&#x65B9;&#x6CD5;&#xFF0C;&#x7528;&#x6CD5;&#x548C;&#x4E0A;&#x9762;&#x63D0;&#x5230;&#x7684;&#x76F8;&#x540C;&#xFF1A;</p>
<ol>
<li>ActivatedRoute &#x5167;&#x7684; Observable&#xFF1A; queryParams &#x548C; queryParamMap &#x3002;</li>
<li>ActivatedRoute &#x5167;&#x7684; snapshot&#xFF1A; queryParams &#x548C; queryParamMap &#x3002;</li>
</ol>
<pre data-role="codeBlock" data-info class="language-"><code>|--app
    |--identifier
      |--identifier.component.ts  
      |--identifier.component.html  
    |--form
      |--form.component.html  
</code></pre><ul>
<li>identifier.component.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> OnInit <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormControl<span class="token punctuation">,</span> FormGroup <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/forms&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> ActivatedRoute<span class="token punctuation">,</span> Router <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/router&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpService <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;src/app/service/http.service&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  selector<span class="token operator">:</span> <span class="token string">&apos;app-identifier&apos;</span><span class="token punctuation">,</span>
  templateUrl<span class="token operator">:</span> <span class="token string">&apos;./identifier.component.html&apos;</span><span class="token punctuation">,</span>
  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&apos;./identifier.component.css&apos;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">IdentifierComponent</span> <span class="token keyword keyword-implements">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">{</span>

  <span class="token doc-comment comment">/** &#x683C;&#x5F0F;&#x4E0B;&#x62C9;&#x9078;&#x9805; */</span>
  formatList<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/** &#x8CC7;&#x6599;&#x96C6;&#x4E0B;&#x62C9;&#x9078;&#x9805; */</span>
  identifierList<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/** form */</span>
  tycgIdentifier<span class="token operator">:</span> FormGroup<span class="token punctuation">;</span>

  <span class="token doc-comment comment">/** &#x683C;&#x5F0F;&#x9078;&#x9805; */</span>
  format <span class="token operator">=</span> <span class="token string">&apos;&apos;</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/** &#x8CC7;&#x6599;&#x96C6;&#x9078;&#x9805; */</span>
  identifier <span class="token operator">=</span> <span class="token string">&apos;&apos;</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword keyword-private">private</span> http<span class="token operator">:</span> HttpService<span class="token punctuation">,</span> <span class="token keyword keyword-private">private</span> router<span class="token operator">:</span> Router<span class="token punctuation">,</span> <span class="token keyword keyword-private">private</span> route<span class="token operator">:</span> ActivatedRoute<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>


  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword keyword-void">void</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span><span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>tycgIdentifier <span class="token operator">=</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormGroup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      type<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      description<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      organization<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * &#x53D6;&#x5F97; FormatList
   */</span>
  <span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">getFormatList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>formatList <span class="token operator">=</span> responseData<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
      err <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x932F;&#x8AA4;&#x8A0A;&#x606F;&apos;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * &#x53D6;&#x5F97; identifier
   */</span>
  <span class="token function">getIdentifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">getIdentifier</span><span class="token punctuation">(</span><span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>identifier<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>tycgIdentifier<span class="token punctuation">.</span><span class="token function">patchValue</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * &#x53D6;&#x5F97; identifierList
   */</span>
  <span class="token function">getIdentifierList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">getIdentifierList</span><span class="token punctuation">(</span><span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>format<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>identifierList <span class="token operator">=</span> responseData<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * &#x67E5;&#x770B;
   */</span>
  <span class="token function">check</span><span class="token punctuation">(</span>identifier<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>router<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&apos;tycg&apos;</span><span class="token punctuation">,</span> <span class="token string">&apos;form&apos;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      queryParams<span class="token operator">:</span> <span class="token punctuation">{</span> identifier<span class="token operator">:</span> identifier <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</pre><ul>
<li>identifier.component.html</li>
</ul>
<pre data-role="codeBlock" data-info="html" class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>&#x6843;&#x5712;&#x5E02;&#x653F;&#x5E9C;&#x8CC7;&#x6599;&#x958B;&#x653E;&#x5E73;&#x53F0;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>https://data.tycg.gov.tw/opendata/api-docs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>&#x8CC7;&#x6599;&#x985E;&#x578B;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>format<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let item of formatList<span class="token punctuation">&quot;</span></span> <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            {{ item }}
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary btn-lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getIdentifierList()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        &#x67E5;&#x8A62;&#x8CC7;&#x6599;&#x985E;&#x578B;
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>

      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>table<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>#<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x8CC7;&#x6599;&#x96C6;&#x4EE3;&#x865F;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x67E5;&#x770B;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let item of identifierList; let i = index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ i + 1 }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{ item }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary btn-lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>check(item)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                &#x67E5;&#x770B;&#x8CC7;&#x6599;&#x96C6;
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</pre><ul>
<li>form.component.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> OnInit <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormControl<span class="token punctuation">,</span> FormGroup <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/forms&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> ActivatedRoute <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/router&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpService <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;src/app/service/http.service&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  selector<span class="token operator">:</span> <span class="token string">&apos;app-form&apos;</span><span class="token punctuation">,</span>
  templateUrl<span class="token operator">:</span> <span class="token string">&apos;./form.component.html&apos;</span><span class="token punctuation">,</span>
  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&apos;./form.component.css&apos;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">FormComponent</span> <span class="token keyword keyword-implements">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">{</span>

  <span class="token doc-comment comment">/** form */</span>
  tycgIdentifier<span class="token operator">:</span> FormGroup<span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword keyword-private">private</span> http<span class="token operator">:</span> HttpService<span class="token punctuation">,</span> <span class="token keyword keyword-private">private</span> route<span class="token operator">:</span> ActivatedRoute<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword keyword-void">void</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**&#x53D6;&#x5F97; params **/</span>
    <span class="token comment">// this.route.params.subscribe((param: any) =&gt; { this.getIdentifier(param[&apos;id&apos;]); });</span>

    <span class="token comment">// &#x53D6;&#x5F97; params String</span>
    <span class="token keyword keyword-const">const</span> identifier <span class="token operator">=</span> <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>route<span class="token punctuation">.</span>snapshot<span class="token punctuation">.</span>queryParams<span class="token punctuation">.</span>identifier<span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span><span class="token function">getIdentifier</span><span class="token punctuation">(</span>identifier<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>tycgIdentifier <span class="token operator">=</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormGroup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      type<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      description<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      organization<span class="token operator">:</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>


  <span class="token doc-comment comment">/**
   * &#x53D6;&#x5F97; identifier
   */</span>
  <span class="token function">getIdentifier</span><span class="token punctuation">(</span>identifier<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">getIdentifier</span><span class="token punctuation">(</span>identifier<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>responseData <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>tycgIdentifier<span class="token punctuation">.</span><span class="token function">patchValue</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</pre><hr>
<h2 class="mume-header" id="%E8%A3%9C%E5%85%85" ebook-toc-level-2 heading="&amp;#x88DC;&amp;#x5145;">&#x88DC;&#x5145;</h2>

<h3 class="mume-header" id="%E8%A8%AD%E5%AE%9A-routerguard" ebook-toc-level-3 heading="&amp;#x8A2D;&amp;#x5B9A; &lt;code&gt;RouterGuard&lt;/code&gt;">&#x8A2D;&#x5B9A; <code>RouterGuard</code></h3>

<p>&#x5728;&#x67D0;&#x4E9B;&#x60C5;&#x6CC1;&#x4E0B;&#x6703;&#x5E0C;&#x671B;&#x4F7F;&#x7528;&#x8005;&#x7121;&#x6CD5;&#x9032;&#x5165;&#x67D0;&#x4E9B;&#x9801;&#x9762;&#xFF0C;&#x9019;&#x6A23;&#x7684;&#x6982;&#x5FF5;&#x6703;&#x7A31;&#x70BA; RouterGuard&#x3002;</p>
<ol>
<li>
<p>&#x65B0;&#x589E; Guard &#xFF0C;&#x6307;&#x4EE4; <code>ng g g guard/auth</code><br>
<img src="data:image/png;charset=utf-8;base64," alt="  "><br>
&#x8A2D;&#x5B9A;&#x65B9;&#x5F0F;&#xFF1A;&#x9078;&#x64C7; CanActivate &#x6309;&#x4E0B;&#x7A7A;&#x767D;&#x9375;&#xFF0C;&#x518D;&#x6309; enter&#x3002;<br>
Guard &#x5176;&#x5BE6;&#x4E5F;&#x7B97;&#x662F;&#x4E00;&#x7A2E; Service&#xFF0C;&#x81F3;&#x5C11;&#x9700;&#x8981;&#x5BE6;&#x4F5C; CanActivate&#x3001;CanActivateChild&#x3001;CanLoad &#xFF0C;&#x5176;&#x4E2D;&#x4E00;&#x500B;&#xFF0C;&#x88DC;&#x5145;&#x53EA;&#x6703;&#x63D0;&#x5230; CanActivate &#xFF0C;CanActivate &#x662F;&#x5C08;&#x9580;&#x8655;&#x7406;&#x9032;&#x5230;&#x67D0;&#x8DEF;&#x7531;&#x6642;&#x7684;&#x72C0;&#x6CC1;&#x3002;&#x56DE;&#x50B3;&#x53EF;&#x4EE5;&#x662F;&#x55AE;&#x7D14;&#x7684; <code>boolean</code> &#x6216;&#x662F;&#x975E;&#x540C;&#x6B65;&#x7269;&#x4EF6;&#x5167;&#x90E8;&#x5305;&#x88DD; <code>boolean</code> &#x503C;&#xFF0C;&#x9019;&#x908A;&#x8A2D;&#x5B9A;&#x6210;&#x56DE;&#x50B3; <code>Observable&lt;boolean&gt;</code>&#x3002;<br>
&#x56E0;&#x70BA;&#x662F;&#x8981;&#x5C0D; Router &#x505A;&#x8A2D;&#x5B9A;&#xFF0C;&#x5FC5;&#x9808;&#x5728; <code>AppModule</code> &#x4E2D;&#x7684; <code>appRoutes</code>&#xFF0C;&#x770B;&#x60F3;&#x628A; RouterGuard &#x8A2D;&#x5B9A;&#x65BC;&#x54EA;&#x500B; Component&#xFF0C;&#x5C31;&#x5728;&#x4E0A;&#x9762;&#x65B0;&#x589E; <code>canActivate</code> &#x5C6C;&#x6027;&#xFF0C;&#x4E26;&#x5728;&#x5167;&#x90E8;&#x653E;&#x5165;&#x6709;&#x5BE6;&#x4F5C; <code>CanActivate</code> &#x7684; <code>AuthGuard</code>&#x3002;</p>
</li>
<li>
<p>&#x65B0;&#x589E; Service&#xFF0C;&#x6307;&#x4EE4; <code>ng g s service/user</code><br>
<code>UserService</code> &#x5C08;&#x9580;&#x8A18;&#x9304;&#x4F7F;&#x7528;&#x8005;&#x767B;&#x9304;&#x60C5;&#x6CC1;&#x7684; Service</p>
</li>
<li>
<p>&#x65B0;&#x589E; component <code>ng g c component/login</code><br>
&#x767B;&#x5165;&#x9801;&#x9762;&#x3002;</p>
</li>
</ol>
<pre data-role="codeBlock" data-info class="language-"><code>|--app
    |--app.module.ts 
    |--component
      |--login
        |--login.component.html
        |--login.component.ts
    |--guard
      |--auth.guard.ts 
    |--service
      |--user.service.ts
</code></pre><ul>
<li>login.component.html</li>
</ul>
<pre data-role="codeBlock" data-info="html" class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>&#x5E33;&#x865F;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>account<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>&#x5BC6;&#x78BC;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary btn-lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>check()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#x767B;&#x5165;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

</pre><ul>
<li>login.component.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> OnInit <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Router <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/router&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> UserService <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;src/app/service/user.service&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  selector<span class="token operator">:</span> <span class="token string">&apos;app-login&apos;</span><span class="token punctuation">,</span>
  templateUrl<span class="token operator">:</span> <span class="token string">&apos;./login.component.html&apos;</span><span class="token punctuation">,</span>
  styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&apos;./login.component.css&apos;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">LoginComponent</span> <span class="token keyword keyword-implements">implements</span> <span class="token class-name">OnInit</span> <span class="token punctuation">{</span>

  account<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

  password<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword keyword-private">private</span> userService<span class="token operator">:</span> UserService<span class="token punctuation">,</span> <span class="token keyword keyword-private">private</span> router<span class="token operator">:</span> Router<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

  <span class="token function">ngOnInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

  <span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">setUserObject</span><span class="token punctuation">(</span><span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>account<span class="token punctuation">,</span> <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>router<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&apos;/&apos;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</pre><ul>
<li>auth.guard.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Injectable <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> ActivatedRouteSnapshot<span class="token punctuation">,</span> CanActivate<span class="token punctuation">,</span> Router<span class="token punctuation">,</span> RouterStateSnapshot<span class="token punctuation">,</span> UrlTree <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/router&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Observable <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;rxjs&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> map<span class="token punctuation">,</span> tap <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;rxjs/operators&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> UserService <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;../service/user.service&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Injectable</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  providedIn<span class="token operator">:</span> <span class="token string">&apos;root&apos;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">AuthGuard</span> <span class="token keyword keyword-implements">implements</span> <span class="token class-name">CanActivate</span> <span class="token punctuation">{</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword keyword-private">private</span> userService<span class="token operator">:</span> UserService<span class="token punctuation">,</span> <span class="token keyword keyword-private">private</span> router<span class="token operator">:</span> Router<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

  <span class="token function">canActivate</span><span class="token punctuation">(</span>
    next<span class="token operator">:</span> ActivatedRouteSnapshot<span class="token punctuation">,</span>
    state<span class="token operator">:</span> RouterStateSnapshot<span class="token punctuation">)</span><span class="token operator">:</span> Observable<span class="token operator">&lt;</span><span class="token builtin">boolean</span> <span class="token operator">|</span> UrlTree<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">boolean</span> <span class="token operator">|</span> UrlTree<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> UrlTree <span class="token punctuation">{</span>
    <span class="token keyword keyword-return">return</span> <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">getUserObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>
      <span class="token function">tap</span><span class="token punctuation">(</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword keyword-if">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>router<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&apos;login&apos;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span><span class="token operator">!</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</pre><ul>
<li>user.service.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> Injectable <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> BehaviorSubject <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;rxjs&apos;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Injectable</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  providedIn<span class="token operator">:</span> <span class="token string">&apos;root&apos;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

  <span class="token keyword keyword-private">private</span> userObject$ <span class="token operator">=</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">BehaviorSubject<span class="token operator">&lt;</span><span class="token punctuation">{</span> account<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> password<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword keyword-null">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">setUserObject</span><span class="token punctuation">(</span>account<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> password<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>userObject$<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      account<span class="token operator">:</span> account<span class="token punctuation">,</span>
      password<span class="token operator">:</span> password<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">getUserObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword keyword-return">return</span> <span class="token keyword keyword-this">this</span><span class="token punctuation">.</span>userObject$<span class="token punctuation">.</span><span class="token function">asObservable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</pre><ul>
<li>app.module.ts</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpClientModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/common/http&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> NgModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormsModule<span class="token punctuation">,</span> ReactiveFormsModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/forms&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> BrowserModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/platform-browser&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> RouterModule<span class="token punctuation">,</span> Routes <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/router&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> AppComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./app.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/form/form.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HomeComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/home/home.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> IdentifierComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/identifier/identifier.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> LoginComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/login/login.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> PageNotFoundComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/page-not-found/page-not-found.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> TableComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/table/table.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> AuthGuard <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./guard/auth.guard&apos;</span><span class="token punctuation">;</span>

<span class="token keyword keyword-const">const</span> appRoutes<span class="token operator">:</span> Routes <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> HomeComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;login&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> LoginComponent<span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;home&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> HomeComponent<span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;tw/table&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> TableComponent<span class="token punctuation">,</span> canActivate<span class="token operator">:</span> <span class="token punctuation">[</span>AuthGuard<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;tycg/form&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> FormComponent<span class="token punctuation">,</span> canActivate<span class="token operator">:</span> <span class="token punctuation">[</span>AuthGuard<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;tycg/form/:id&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> FormComponent<span class="token punctuation">,</span> canActivate<span class="token operator">:</span> <span class="token punctuation">[</span>AuthGuard<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;tycg/identifier&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> IdentifierComponent<span class="token punctuation">,</span> canActivate<span class="token operator">:</span> <span class="token punctuation">[</span>AuthGuard<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;**&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> PageNotFoundComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  declarations<span class="token operator">:</span> <span class="token punctuation">[</span>
    AppComponent<span class="token punctuation">,</span>
    FormComponent<span class="token punctuation">,</span>
    TableComponent<span class="token punctuation">,</span>
    IdentifierComponent<span class="token punctuation">,</span>
    HomeComponent<span class="token punctuation">,</span>
    PageNotFoundComponent<span class="token punctuation">,</span>
    LoginComponent<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span>
    BrowserModule<span class="token punctuation">,</span>
    HttpClientModule<span class="token punctuation">,</span>
    FormsModule<span class="token punctuation">,</span>
    ReactiveFormsModule<span class="token punctuation">,</span>
    RouterModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span>appRoutes<span class="token punctuation">)</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  providers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  bootstrap<span class="token operator">:</span> <span class="token punctuation">[</span>AppComponent<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
</pre><h3 class="mume-header" id="app-routingmodulets" ebook-toc-level-3 heading="&lt;code&gt;app-routing.module.ts&lt;/code&gt;"><code>app-routing.module.ts</code></h3>

<p>&#x5728;&#x4E00;&#x958B;&#x59CB;&#x4ECB;&#x7D39;&#x6642;&#x6709;&#x63D0;&#x5230;&#xFF0C;&#x9664;&#x4E86;&#x5728; <code>app.module.ts</code> &#x5167;&#x8A2D;&#x5B9A;&#x5916;&#xFF0C;&#x9084;&#x53EF;&#x4EE5;&#x518D;&#x5EFA;&#x7ACB;&#x4E00;&#x500B; <code>app-routing.module.ts</code> &#x505A;&#x7D71;&#x4E00;&#x7BA1;&#x7406;&#xFF0C;&#x4EE5;&#x4E0B;&#x662F;&#x4F7F;&#x7528; <code>app-routing.module.ts</code> &#x7684;&#x8A2D;&#x5B9A;&#x65B9;&#x5F0F;&#xFF1A;</p>
<pre data-role="codeBlock" data-info class="language-"><code>|--app
    |--app.module.ts 
    |--app-routing.module.ts
</code></pre><ul>
<li>app-routing.module.ts<br>
&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x9019;&#x6BB5;&#x7A0B;&#x5F0F;&#x78BC;&#xFF0C;&#x9664;&#x4E86;&#x8981; <code>imports</code> &#x5916;&#xFF0C;&#x9084;&#x8981; <code>exports</code>&#xFF0C;&#x8B93;&#x532F;&#x5165;&#x7684;&#x6A94;&#x6848;&#xFF08; app.module.ts &#xFF09;&#x53EF;&#x4EE5;&#x6B63;&#x78BA;&#x5730;&#x62FF;&#x5230;&#x8A2D;&#x5B9A;&#x3002;</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span>RouterModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span>appRoutes<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  exports<span class="token operator">:</span> <span class="token punctuation">[</span>RouterModule<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</pre><pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> NgModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> RouterModule<span class="token punctuation">,</span> Routes <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/router&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/form/form.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HomeComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/home/home.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> IdentifierComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/identifier/identifier.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> LoginComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/login/login.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> PageNotFoundComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/page-not-found/page-not-found.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> TableComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/table/table.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> AuthGuard <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./guard/auth.guard&apos;</span><span class="token punctuation">;</span>

<span class="token keyword keyword-const">const</span> appRoutes<span class="token operator">:</span> Routes <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> HomeComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;login&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> LoginComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;home&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> HomeComponent<span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;tw/table&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> TableComponent<span class="token punctuation">,</span> canActivate<span class="token operator">:</span> <span class="token punctuation">[</span>AuthGuard<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;tycg/form&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> FormComponent<span class="token punctuation">,</span> canActivate<span class="token operator">:</span> <span class="token punctuation">[</span>AuthGuard<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;tycg/form/:id&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> FormComponent<span class="token punctuation">,</span> canActivate<span class="token operator">:</span> <span class="token punctuation">[</span>AuthGuard<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;tycg/identifier&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> IdentifierComponent<span class="token punctuation">,</span> canActivate<span class="token operator">:</span> <span class="token punctuation">[</span>AuthGuard<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&apos;**&apos;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> PageNotFoundComponent <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span>RouterModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span>appRoutes<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  exports<span class="token operator">:</span> <span class="token punctuation">[</span>RouterModule<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">AppRoutingModule</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

</pre><ul>
<li>app.module.ts<br>
&#x53EA;&#x8981;&#x628A; AppRoutingModule &#x76F4;&#x63A5;&#x6CE8;&#x5165;&#x5728; imports &#x5373;&#x53EF;&#x3002;</li>
</ul>
<pre data-role="codeBlock" data-info="TypeScript" class="language-typescript"><span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HttpClientModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/common/http&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> NgModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/core&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormsModule<span class="token punctuation">,</span> ReactiveFormsModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/forms&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> BrowserModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;@angular/platform-browser&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> AppRoutingModule <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./app-routing.module&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> AppComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./app.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> FormComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/form/form.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> HomeComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/home/home.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> IdentifierComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/identifier/identifier.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> LoginComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/login/login.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> PageNotFoundComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/page-not-found/page-not-found.component&apos;</span><span class="token punctuation">;</span>
<span class="token keyword keyword-import">import</span> <span class="token punctuation">{</span> TableComponent <span class="token punctuation">}</span> <span class="token keyword keyword-from">from</span> <span class="token string">&apos;./component/table/table.component&apos;</span><span class="token punctuation">;</span>


<span class="token decorator"><span class="token at operator">@</span><span class="token function">NgModule</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  declarations<span class="token operator">:</span> <span class="token punctuation">[</span>
    AppComponent<span class="token punctuation">,</span>
    FormComponent<span class="token punctuation">,</span>
    TableComponent<span class="token punctuation">,</span>
    IdentifierComponent<span class="token punctuation">,</span>
    HomeComponent<span class="token punctuation">,</span>
    PageNotFoundComponent<span class="token punctuation">,</span>
    LoginComponent<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span>
    BrowserModule<span class="token punctuation">,</span>
    HttpClientModule<span class="token punctuation">,</span>
    FormsModule<span class="token punctuation">,</span>
    ReactiveFormsModule<span class="token punctuation">,</span>
    AppRoutingModule<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  providers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  bootstrap<span class="token operator">:</span> <span class="token punctuation">[</span>AppComponent<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword keyword-export">export</span> <span class="token keyword keyword-class">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
</pre><h2 class="mume-header" id="%E7%B8%BD%E7%B5%90" ebook-toc-level-2 heading="&amp;#x7E3D;&amp;#x7D50;">&#x7E3D;&#x7D50;</h2>

<ul>
<li>
<p>&#x8DEF;&#x7531;&#x8A2D;&#x5B9A;</p>
<ol>
<li>param &#x8A2D;&#x5B9A;</li>
<li>param &#x53C3;&#x6578;&#x8A2D;&#x5B9A;</li>
<li>&#x8A2D;&#x5B9A;&#x5B50;&#x8DEF;&#x7531;</li>
<li>&#x8A2D;&#x5B9A;&#x842C;&#x7528;&#x8DEF;&#x7531;</li>
</ol>
</li>
<li>
<p>HTML &#x9801;&#x9762;&#x5C0E;&#x8F49;</p>
<ol>
<li>routerLink</li>
<li>routerLinkActive</li>
<li>param &#x53C3;&#x6578;</li>
</ol>
</li>
<li>
<p>TypeScript &#x9801;&#x9762;&#x5C0E;&#x8F49;</p>
<ol>
<li>navigateByUrl &#x3001; navigate &#x53CA; params</li>
<li>queryParams</li>
</ol>
</li>
<li>
<p>&#x88DC;&#x5145;</p>
<ul>
<li>&#x8A2D;&#x5B9A; RouterGuard ( <code>CanActivate</code> )</li>
<li><code>app-routing.module.ts</code></li>
</ul>
</li>
</ul>
</div></body></html>
    </div>
  </body>
</html>
